// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// VMStaticScrape  defines static targets configuration for scraping.
type VMStaticScrapePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput    `pulumi:"metadata"`
	Spec     VMStaticScrapeSpecPatchPtrOutput   `pulumi:"spec"`
	Status   VMStaticScrapeStatusPatchPtrOutput `pulumi:"status"`
}

// NewVMStaticScrapePatch registers a new resource with the given unique name, arguments, and options.
func NewVMStaticScrapePatch(ctx *pulumi.Context,
	name string, args *VMStaticScrapePatchArgs, opts ...pulumi.ResourceOption) (*VMStaticScrapePatch, error) {
	if args == nil {
		args = &VMStaticScrapePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("operator.victoriametrics.com/v1beta1")
	args.Kind = pulumi.StringPtr("VMStaticScrape")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VMStaticScrapePatch
	err := ctx.RegisterResource("kubernetes:operator.victoriametrics.com/v1beta1:VMStaticScrapePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVMStaticScrapePatch gets an existing VMStaticScrapePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVMStaticScrapePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VMStaticScrapePatchState, opts ...pulumi.ResourceOption) (*VMStaticScrapePatch, error) {
	var resource VMStaticScrapePatch
	err := ctx.ReadResource("kubernetes:operator.victoriametrics.com/v1beta1:VMStaticScrapePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VMStaticScrapePatch resources.
type vmstaticScrapePatchState struct {
}

type VMStaticScrapePatchState struct {
}

func (VMStaticScrapePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmstaticScrapePatchState)(nil)).Elem()
}

type vmstaticScrapePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch  `pulumi:"metadata"`
	Spec     *VMStaticScrapeSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a VMStaticScrapePatch resource.
type VMStaticScrapePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     VMStaticScrapeSpecPatchPtrInput
}

func (VMStaticScrapePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmstaticScrapePatchArgs)(nil)).Elem()
}

type VMStaticScrapePatchInput interface {
	pulumi.Input

	ToVMStaticScrapePatchOutput() VMStaticScrapePatchOutput
	ToVMStaticScrapePatchOutputWithContext(ctx context.Context) VMStaticScrapePatchOutput
}

func (*VMStaticScrapePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapePatch)(nil)).Elem()
}

func (i *VMStaticScrapePatch) ToVMStaticScrapePatchOutput() VMStaticScrapePatchOutput {
	return i.ToVMStaticScrapePatchOutputWithContext(context.Background())
}

func (i *VMStaticScrapePatch) ToVMStaticScrapePatchOutputWithContext(ctx context.Context) VMStaticScrapePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapePatchOutput)
}

// VMStaticScrapePatchArrayInput is an input type that accepts VMStaticScrapePatchArray and VMStaticScrapePatchArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapePatchArrayInput` via:
//
//	VMStaticScrapePatchArray{ VMStaticScrapePatchArgs{...} }
type VMStaticScrapePatchArrayInput interface {
	pulumi.Input

	ToVMStaticScrapePatchArrayOutput() VMStaticScrapePatchArrayOutput
	ToVMStaticScrapePatchArrayOutputWithContext(context.Context) VMStaticScrapePatchArrayOutput
}

type VMStaticScrapePatchArray []VMStaticScrapePatchInput

func (VMStaticScrapePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMStaticScrapePatch)(nil)).Elem()
}

func (i VMStaticScrapePatchArray) ToVMStaticScrapePatchArrayOutput() VMStaticScrapePatchArrayOutput {
	return i.ToVMStaticScrapePatchArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapePatchArray) ToVMStaticScrapePatchArrayOutputWithContext(ctx context.Context) VMStaticScrapePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapePatchArrayOutput)
}

// VMStaticScrapePatchMapInput is an input type that accepts VMStaticScrapePatchMap and VMStaticScrapePatchMapOutput values.
// You can construct a concrete instance of `VMStaticScrapePatchMapInput` via:
//
//	VMStaticScrapePatchMap{ "key": VMStaticScrapePatchArgs{...} }
type VMStaticScrapePatchMapInput interface {
	pulumi.Input

	ToVMStaticScrapePatchMapOutput() VMStaticScrapePatchMapOutput
	ToVMStaticScrapePatchMapOutputWithContext(context.Context) VMStaticScrapePatchMapOutput
}

type VMStaticScrapePatchMap map[string]VMStaticScrapePatchInput

func (VMStaticScrapePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMStaticScrapePatch)(nil)).Elem()
}

func (i VMStaticScrapePatchMap) ToVMStaticScrapePatchMapOutput() VMStaticScrapePatchMapOutput {
	return i.ToVMStaticScrapePatchMapOutputWithContext(context.Background())
}

func (i VMStaticScrapePatchMap) ToVMStaticScrapePatchMapOutputWithContext(ctx context.Context) VMStaticScrapePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapePatchMapOutput)
}

type VMStaticScrapePatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapePatch)(nil)).Elem()
}

func (o VMStaticScrapePatchOutput) ToVMStaticScrapePatchOutput() VMStaticScrapePatchOutput {
	return o
}

func (o VMStaticScrapePatchOutput) ToVMStaticScrapePatchOutputWithContext(ctx context.Context) VMStaticScrapePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMStaticScrapePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMStaticScrapePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VMStaticScrapePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o VMStaticScrapePatchOutput) Spec() VMStaticScrapeSpecPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapePatch) VMStaticScrapeSpecPatchPtrOutput { return v.Spec }).(VMStaticScrapeSpecPatchPtrOutput)
}

func (o VMStaticScrapePatchOutput) Status() VMStaticScrapeStatusPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapePatch) VMStaticScrapeStatusPatchPtrOutput { return v.Status }).(VMStaticScrapeStatusPatchPtrOutput)
}

type VMStaticScrapePatchArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMStaticScrapePatch)(nil)).Elem()
}

func (o VMStaticScrapePatchArrayOutput) ToVMStaticScrapePatchArrayOutput() VMStaticScrapePatchArrayOutput {
	return o
}

func (o VMStaticScrapePatchArrayOutput) ToVMStaticScrapePatchArrayOutputWithContext(ctx context.Context) VMStaticScrapePatchArrayOutput {
	return o
}

func (o VMStaticScrapePatchArrayOutput) Index(i pulumi.IntInput) VMStaticScrapePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VMStaticScrapePatch {
		return vs[0].([]*VMStaticScrapePatch)[vs[1].(int)]
	}).(VMStaticScrapePatchOutput)
}

type VMStaticScrapePatchMapOutput struct{ *pulumi.OutputState }

func (VMStaticScrapePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMStaticScrapePatch)(nil)).Elem()
}

func (o VMStaticScrapePatchMapOutput) ToVMStaticScrapePatchMapOutput() VMStaticScrapePatchMapOutput {
	return o
}

func (o VMStaticScrapePatchMapOutput) ToVMStaticScrapePatchMapOutputWithContext(ctx context.Context) VMStaticScrapePatchMapOutput {
	return o
}

func (o VMStaticScrapePatchMapOutput) MapIndex(k pulumi.StringInput) VMStaticScrapePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VMStaticScrapePatch {
		return vs[0].(map[string]*VMStaticScrapePatch)[vs[1].(string)]
	}).(VMStaticScrapePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapePatchInput)(nil)).Elem(), &VMStaticScrapePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapePatchArrayInput)(nil)).Elem(), VMStaticScrapePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapePatchMapInput)(nil)).Elem(), VMStaticScrapePatchMap{})
	pulumi.RegisterOutputType(VMStaticScrapePatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapePatchArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapePatchMapOutput{})
}
