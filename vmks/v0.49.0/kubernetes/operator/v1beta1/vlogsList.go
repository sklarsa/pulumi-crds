// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VLogsList is a list of VLogs
type VLogsList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of vlogs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VLogsTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewVLogsList registers a new resource with the given unique name, arguments, and options.
func NewVLogsList(ctx *pulumi.Context,
	name string, args *VLogsListArgs, opts ...pulumi.ResourceOption) (*VLogsList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("operator.victoriametrics.com/v1beta1")
	args.Kind = pulumi.StringPtr("VLogsList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VLogsList
	err := ctx.RegisterResource("kubernetes:operator.victoriametrics.com/v1beta1:VLogsList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVLogsList gets an existing VLogsList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVLogsList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VLogsListState, opts ...pulumi.ResourceOption) (*VLogsList, error) {
	var resource VLogsList
	err := ctx.ReadResource("kubernetes:operator.victoriametrics.com/v1beta1:VLogsList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VLogsList resources.
type vlogsListState struct {
}

type VLogsListState struct {
}

func (VLogsListState) ElementType() reflect.Type {
	return reflect.TypeOf((*vlogsListState)(nil)).Elem()
}

type vlogsListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of vlogs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []VLogsType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a VLogsList resource.
type VLogsListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of vlogs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VLogsTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (VLogsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vlogsListArgs)(nil)).Elem()
}

type VLogsListInput interface {
	pulumi.Input

	ToVLogsListOutput() VLogsListOutput
	ToVLogsListOutputWithContext(ctx context.Context) VLogsListOutput
}

func (*VLogsList) ElementType() reflect.Type {
	return reflect.TypeOf((**VLogsList)(nil)).Elem()
}

func (i *VLogsList) ToVLogsListOutput() VLogsListOutput {
	return i.ToVLogsListOutputWithContext(context.Background())
}

func (i *VLogsList) ToVLogsListOutputWithContext(ctx context.Context) VLogsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VLogsListOutput)
}

// VLogsListArrayInput is an input type that accepts VLogsListArray and VLogsListArrayOutput values.
// You can construct a concrete instance of `VLogsListArrayInput` via:
//
//	VLogsListArray{ VLogsListArgs{...} }
type VLogsListArrayInput interface {
	pulumi.Input

	ToVLogsListArrayOutput() VLogsListArrayOutput
	ToVLogsListArrayOutputWithContext(context.Context) VLogsListArrayOutput
}

type VLogsListArray []VLogsListInput

func (VLogsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VLogsList)(nil)).Elem()
}

func (i VLogsListArray) ToVLogsListArrayOutput() VLogsListArrayOutput {
	return i.ToVLogsListArrayOutputWithContext(context.Background())
}

func (i VLogsListArray) ToVLogsListArrayOutputWithContext(ctx context.Context) VLogsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VLogsListArrayOutput)
}

// VLogsListMapInput is an input type that accepts VLogsListMap and VLogsListMapOutput values.
// You can construct a concrete instance of `VLogsListMapInput` via:
//
//	VLogsListMap{ "key": VLogsListArgs{...} }
type VLogsListMapInput interface {
	pulumi.Input

	ToVLogsListMapOutput() VLogsListMapOutput
	ToVLogsListMapOutputWithContext(context.Context) VLogsListMapOutput
}

type VLogsListMap map[string]VLogsListInput

func (VLogsListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VLogsList)(nil)).Elem()
}

func (i VLogsListMap) ToVLogsListMapOutput() VLogsListMapOutput {
	return i.ToVLogsListMapOutputWithContext(context.Background())
}

func (i VLogsListMap) ToVLogsListMapOutputWithContext(ctx context.Context) VLogsListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VLogsListMapOutput)
}

type VLogsListOutput struct{ *pulumi.OutputState }

func (VLogsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VLogsList)(nil)).Elem()
}

func (o VLogsListOutput) ToVLogsListOutput() VLogsListOutput {
	return o
}

func (o VLogsListOutput) ToVLogsListOutputWithContext(ctx context.Context) VLogsListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VLogsListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VLogsList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of vlogs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o VLogsListOutput) Items() VLogsTypeArrayOutput {
	return o.ApplyT(func(v *VLogsList) VLogsTypeArrayOutput { return v.Items }).(VLogsTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VLogsListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VLogsList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VLogsListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *VLogsList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type VLogsListArrayOutput struct{ *pulumi.OutputState }

func (VLogsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VLogsList)(nil)).Elem()
}

func (o VLogsListArrayOutput) ToVLogsListArrayOutput() VLogsListArrayOutput {
	return o
}

func (o VLogsListArrayOutput) ToVLogsListArrayOutputWithContext(ctx context.Context) VLogsListArrayOutput {
	return o
}

func (o VLogsListArrayOutput) Index(i pulumi.IntInput) VLogsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VLogsList {
		return vs[0].([]*VLogsList)[vs[1].(int)]
	}).(VLogsListOutput)
}

type VLogsListMapOutput struct{ *pulumi.OutputState }

func (VLogsListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VLogsList)(nil)).Elem()
}

func (o VLogsListMapOutput) ToVLogsListMapOutput() VLogsListMapOutput {
	return o
}

func (o VLogsListMapOutput) ToVLogsListMapOutputWithContext(ctx context.Context) VLogsListMapOutput {
	return o
}

func (o VLogsListMapOutput) MapIndex(k pulumi.StringInput) VLogsListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VLogsList {
		return vs[0].(map[string]*VLogsList)[vs[1].(string)]
	}).(VLogsListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VLogsListInput)(nil)).Elem(), &VLogsList{})
	pulumi.RegisterInputType(reflect.TypeOf((*VLogsListArrayInput)(nil)).Elem(), VLogsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VLogsListMapInput)(nil)).Elem(), VLogsListMap{})
	pulumi.RegisterOutputType(VLogsListOutput{})
	pulumi.RegisterOutputType(VLogsListArrayOutput{})
	pulumi.RegisterOutputType(VLogsListMapOutput{})
}
