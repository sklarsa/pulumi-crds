// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// VMStaticScrape  defines static targets configuration for scraping.
type VMStaticScrapePatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch    `pulumi:"metadata"`
	Spec     *VMStaticScrapeSpecPatch   `pulumi:"spec"`
	Status   *VMStaticScrapeStatusPatch `pulumi:"status"`
}

// VMStaticScrapePatchTypeInput is an input type that accepts VMStaticScrapePatchTypeArgs and VMStaticScrapePatchTypeOutput values.
// You can construct a concrete instance of `VMStaticScrapePatchTypeInput` via:
//
//	VMStaticScrapePatchTypeArgs{...}
type VMStaticScrapePatchTypeInput interface {
	pulumi.Input

	ToVMStaticScrapePatchTypeOutput() VMStaticScrapePatchTypeOutput
	ToVMStaticScrapePatchTypeOutputWithContext(context.Context) VMStaticScrapePatchTypeOutput
}

// VMStaticScrape  defines static targets configuration for scraping.
type VMStaticScrapePatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput    `pulumi:"metadata"`
	Spec     VMStaticScrapeSpecPatchPtrInput   `pulumi:"spec"`
	Status   VMStaticScrapeStatusPatchPtrInput `pulumi:"status"`
}

func (VMStaticScrapePatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapePatchType)(nil)).Elem()
}

func (i VMStaticScrapePatchTypeArgs) ToVMStaticScrapePatchTypeOutput() VMStaticScrapePatchTypeOutput {
	return i.ToVMStaticScrapePatchTypeOutputWithContext(context.Background())
}

func (i VMStaticScrapePatchTypeArgs) ToVMStaticScrapePatchTypeOutputWithContext(ctx context.Context) VMStaticScrapePatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapePatchTypeOutput)
}

// VMStaticScrape  defines static targets configuration for scraping.
type VMStaticScrapePatchTypeOutput struct{ *pulumi.OutputState }

func (VMStaticScrapePatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapePatchType)(nil)).Elem()
}

func (o VMStaticScrapePatchTypeOutput) ToVMStaticScrapePatchTypeOutput() VMStaticScrapePatchTypeOutput {
	return o
}

func (o VMStaticScrapePatchTypeOutput) ToVMStaticScrapePatchTypeOutputWithContext(ctx context.Context) VMStaticScrapePatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMStaticScrapePatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapePatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMStaticScrapePatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapePatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VMStaticScrapePatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapePatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o VMStaticScrapePatchTypeOutput) Spec() VMStaticScrapeSpecPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapePatchType) *VMStaticScrapeSpecPatch { return v.Spec }).(VMStaticScrapeSpecPatchPtrOutput)
}

func (o VMStaticScrapePatchTypeOutput) Status() VMStaticScrapeStatusPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapePatchType) *VMStaticScrapeStatusPatch { return v.Status }).(VMStaticScrapeStatusPatchPtrOutput)
}

// VMStaticScrapeSpec defines the desired state of VMStaticScrape.
type VMStaticScrapeSpec struct {
	// JobName name of job.
	JobName *string `pulumi:"jobName"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit *int `pulumi:"sampleLimit"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit *int `pulumi:"seriesLimit"`
	// A list of target endpoints to scrape metrics from.
	TargetEndpoints []VMStaticScrapeSpecTargetEndpoints `pulumi:"targetEndpoints"`
}

// VMStaticScrapeSpecInput is an input type that accepts VMStaticScrapeSpecArgs and VMStaticScrapeSpecOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecInput` via:
//
//	VMStaticScrapeSpecArgs{...}
type VMStaticScrapeSpecInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecOutput() VMStaticScrapeSpecOutput
	ToVMStaticScrapeSpecOutputWithContext(context.Context) VMStaticScrapeSpecOutput
}

// VMStaticScrapeSpec defines the desired state of VMStaticScrape.
type VMStaticScrapeSpecArgs struct {
	// JobName name of job.
	JobName pulumi.StringPtrInput `pulumi:"jobName"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit pulumi.IntPtrInput `pulumi:"sampleLimit"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit pulumi.IntPtrInput `pulumi:"seriesLimit"`
	// A list of target endpoints to scrape metrics from.
	TargetEndpoints VMStaticScrapeSpecTargetEndpointsArrayInput `pulumi:"targetEndpoints"`
}

func (VMStaticScrapeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpec)(nil)).Elem()
}

func (i VMStaticScrapeSpecArgs) ToVMStaticScrapeSpecOutput() VMStaticScrapeSpecOutput {
	return i.ToVMStaticScrapeSpecOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecArgs) ToVMStaticScrapeSpecOutputWithContext(ctx context.Context) VMStaticScrapeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecOutput)
}

func (i VMStaticScrapeSpecArgs) ToVMStaticScrapeSpecPtrOutput() VMStaticScrapeSpecPtrOutput {
	return i.ToVMStaticScrapeSpecPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecArgs) ToVMStaticScrapeSpecPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecOutput).ToVMStaticScrapeSpecPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecPtrInput is an input type that accepts VMStaticScrapeSpecArgs, VMStaticScrapeSpecPtr and VMStaticScrapeSpecPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecPtrInput` via:
//
//	        VMStaticScrapeSpecArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecPtrOutput() VMStaticScrapeSpecPtrOutput
	ToVMStaticScrapeSpecPtrOutputWithContext(context.Context) VMStaticScrapeSpecPtrOutput
}

type vmstaticScrapeSpecPtrType VMStaticScrapeSpecArgs

func VMStaticScrapeSpecPtr(v *VMStaticScrapeSpecArgs) VMStaticScrapeSpecPtrInput {
	return (*vmstaticScrapeSpecPtrType)(v)
}

func (*vmstaticScrapeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpec)(nil)).Elem()
}

func (i *vmstaticScrapeSpecPtrType) ToVMStaticScrapeSpecPtrOutput() VMStaticScrapeSpecPtrOutput {
	return i.ToVMStaticScrapeSpecPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecPtrType) ToVMStaticScrapeSpecPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecPtrOutput)
}

// VMStaticScrapeSpec defines the desired state of VMStaticScrape.
type VMStaticScrapeSpecOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpec)(nil)).Elem()
}

func (o VMStaticScrapeSpecOutput) ToVMStaticScrapeSpecOutput() VMStaticScrapeSpecOutput {
	return o
}

func (o VMStaticScrapeSpecOutput) ToVMStaticScrapeSpecOutputWithContext(ctx context.Context) VMStaticScrapeSpecOutput {
	return o
}

func (o VMStaticScrapeSpecOutput) ToVMStaticScrapeSpecPtrOutput() VMStaticScrapeSpecPtrOutput {
	return o.ToVMStaticScrapeSpecPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecOutput) ToVMStaticScrapeSpecPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpec) *VMStaticScrapeSpec {
		return &v
	}).(VMStaticScrapeSpecPtrOutput)
}

// JobName name of job.
func (o VMStaticScrapeSpecOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpec) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
func (o VMStaticScrapeSpecOutput) SampleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpec) *int { return v.SampleLimit }).(pulumi.IntPtrOutput)
}

// SeriesLimit defines per-scrape limit on number of unique time series
// a single target can expose during all the scrapes on the time window of 24h.
func (o VMStaticScrapeSpecOutput) SeriesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpec) *int { return v.SeriesLimit }).(pulumi.IntPtrOutput)
}

// A list of target endpoints to scrape metrics from.
func (o VMStaticScrapeSpecOutput) TargetEndpoints() VMStaticScrapeSpecTargetEndpointsArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpec) []VMStaticScrapeSpecTargetEndpoints { return v.TargetEndpoints }).(VMStaticScrapeSpecTargetEndpointsArrayOutput)
}

type VMStaticScrapeSpecPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpec)(nil)).Elem()
}

func (o VMStaticScrapeSpecPtrOutput) ToVMStaticScrapeSpecPtrOutput() VMStaticScrapeSpecPtrOutput {
	return o
}

func (o VMStaticScrapeSpecPtrOutput) ToVMStaticScrapeSpecPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPtrOutput {
	return o
}

func (o VMStaticScrapeSpecPtrOutput) Elem() VMStaticScrapeSpecOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpec) VMStaticScrapeSpec {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpec
		return ret
	}).(VMStaticScrapeSpecOutput)
}

// JobName name of job.
func (o VMStaticScrapeSpecPtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpec) *string {
		if v == nil {
			return nil
		}
		return v.JobName
	}).(pulumi.StringPtrOutput)
}

// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
func (o VMStaticScrapeSpecPtrOutput) SampleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpec) *int {
		if v == nil {
			return nil
		}
		return v.SampleLimit
	}).(pulumi.IntPtrOutput)
}

// SeriesLimit defines per-scrape limit on number of unique time series
// a single target can expose during all the scrapes on the time window of 24h.
func (o VMStaticScrapeSpecPtrOutput) SeriesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpec) *int {
		if v == nil {
			return nil
		}
		return v.SeriesLimit
	}).(pulumi.IntPtrOutput)
}

// A list of target endpoints to scrape metrics from.
func (o VMStaticScrapeSpecPtrOutput) TargetEndpoints() VMStaticScrapeSpecTargetEndpointsArrayOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpec) []VMStaticScrapeSpecTargetEndpoints {
		if v == nil {
			return nil
		}
		return v.TargetEndpoints
	}).(VMStaticScrapeSpecTargetEndpointsArrayOutput)
}

// VMStaticScrapeSpec defines the desired state of VMStaticScrape.
type VMStaticScrapeSpecPatch struct {
	// JobName name of job.
	JobName *string `pulumi:"jobName"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit *int `pulumi:"sampleLimit"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit *int `pulumi:"seriesLimit"`
	// A list of target endpoints to scrape metrics from.
	TargetEndpoints []VMStaticScrapeSpecTargetEndpointsPatch `pulumi:"targetEndpoints"`
}

// VMStaticScrapeSpecPatchInput is an input type that accepts VMStaticScrapeSpecPatchArgs and VMStaticScrapeSpecPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecPatchInput` via:
//
//	VMStaticScrapeSpecPatchArgs{...}
type VMStaticScrapeSpecPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecPatchOutput() VMStaticScrapeSpecPatchOutput
	ToVMStaticScrapeSpecPatchOutputWithContext(context.Context) VMStaticScrapeSpecPatchOutput
}

// VMStaticScrapeSpec defines the desired state of VMStaticScrape.
type VMStaticScrapeSpecPatchArgs struct {
	// JobName name of job.
	JobName pulumi.StringPtrInput `pulumi:"jobName"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit pulumi.IntPtrInput `pulumi:"sampleLimit"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit pulumi.IntPtrInput `pulumi:"seriesLimit"`
	// A list of target endpoints to scrape metrics from.
	TargetEndpoints VMStaticScrapeSpecTargetEndpointsPatchArrayInput `pulumi:"targetEndpoints"`
}

func (VMStaticScrapeSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecPatchArgs) ToVMStaticScrapeSpecPatchOutput() VMStaticScrapeSpecPatchOutput {
	return i.ToVMStaticScrapeSpecPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecPatchArgs) ToVMStaticScrapeSpecPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecPatchOutput)
}

func (i VMStaticScrapeSpecPatchArgs) ToVMStaticScrapeSpecPatchPtrOutput() VMStaticScrapeSpecPatchPtrOutput {
	return i.ToVMStaticScrapeSpecPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecPatchArgs) ToVMStaticScrapeSpecPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecPatchOutput).ToVMStaticScrapeSpecPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecPatchPtrInput is an input type that accepts VMStaticScrapeSpecPatchArgs, VMStaticScrapeSpecPatchPtr and VMStaticScrapeSpecPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecPatchPtrInput` via:
//
//	        VMStaticScrapeSpecPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecPatchPtrOutput() VMStaticScrapeSpecPatchPtrOutput
	ToVMStaticScrapeSpecPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecPatchPtrOutput
}

type vmstaticScrapeSpecPatchPtrType VMStaticScrapeSpecPatchArgs

func VMStaticScrapeSpecPatchPtr(v *VMStaticScrapeSpecPatchArgs) VMStaticScrapeSpecPatchPtrInput {
	return (*vmstaticScrapeSpecPatchPtrType)(v)
}

func (*vmstaticScrapeSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecPatchPtrType) ToVMStaticScrapeSpecPatchPtrOutput() VMStaticScrapeSpecPatchPtrOutput {
	return i.ToVMStaticScrapeSpecPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecPatchPtrType) ToVMStaticScrapeSpecPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecPatchPtrOutput)
}

// VMStaticScrapeSpec defines the desired state of VMStaticScrape.
type VMStaticScrapeSpecPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecPatchOutput) ToVMStaticScrapeSpecPatchOutput() VMStaticScrapeSpecPatchOutput {
	return o
}

func (o VMStaticScrapeSpecPatchOutput) ToVMStaticScrapeSpecPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecPatchOutput {
	return o
}

func (o VMStaticScrapeSpecPatchOutput) ToVMStaticScrapeSpecPatchPtrOutput() VMStaticScrapeSpecPatchPtrOutput {
	return o.ToVMStaticScrapeSpecPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecPatchOutput) ToVMStaticScrapeSpecPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecPatch) *VMStaticScrapeSpecPatch {
		return &v
	}).(VMStaticScrapeSpecPatchPtrOutput)
}

// JobName name of job.
func (o VMStaticScrapeSpecPatchOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecPatch) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
func (o VMStaticScrapeSpecPatchOutput) SampleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecPatch) *int { return v.SampleLimit }).(pulumi.IntPtrOutput)
}

// SeriesLimit defines per-scrape limit on number of unique time series
// a single target can expose during all the scrapes on the time window of 24h.
func (o VMStaticScrapeSpecPatchOutput) SeriesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecPatch) *int { return v.SeriesLimit }).(pulumi.IntPtrOutput)
}

// A list of target endpoints to scrape metrics from.
func (o VMStaticScrapeSpecPatchOutput) TargetEndpoints() VMStaticScrapeSpecTargetEndpointsPatchArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecPatch) []VMStaticScrapeSpecTargetEndpointsPatch { return v.TargetEndpoints }).(VMStaticScrapeSpecTargetEndpointsPatchArrayOutput)
}

type VMStaticScrapeSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecPatchPtrOutput) ToVMStaticScrapeSpecPatchPtrOutput() VMStaticScrapeSpecPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecPatchPtrOutput) ToVMStaticScrapeSpecPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecPatchPtrOutput) Elem() VMStaticScrapeSpecPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecPatch) VMStaticScrapeSpecPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecPatch
		return ret
	}).(VMStaticScrapeSpecPatchOutput)
}

// JobName name of job.
func (o VMStaticScrapeSpecPatchPtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.JobName
	}).(pulumi.StringPtrOutput)
}

// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
func (o VMStaticScrapeSpecPatchPtrOutput) SampleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.SampleLimit
	}).(pulumi.IntPtrOutput)
}

// SeriesLimit defines per-scrape limit on number of unique time series
// a single target can expose during all the scrapes on the time window of 24h.
func (o VMStaticScrapeSpecPatchPtrOutput) SeriesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.SeriesLimit
	}).(pulumi.IntPtrOutput)
}

// A list of target endpoints to scrape metrics from.
func (o VMStaticScrapeSpecPatchPtrOutput) TargetEndpoints() VMStaticScrapeSpecTargetEndpointsPatchArrayOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecPatch) []VMStaticScrapeSpecTargetEndpointsPatch {
		if v == nil {
			return nil
		}
		return v.TargetEndpoints
	}).(VMStaticScrapeSpecTargetEndpointsPatchArrayOutput)
}

// TargetEndpoint defines single static target endpoint.
type VMStaticScrapeSpecTargetEndpoints struct {
	Authorization *VMStaticScrapeSpecTargetEndpointsAuthorization `pulumi:"authorization"`
	BasicAuth     *VMStaticScrapeSpecTargetEndpointsBasicAuth     `pulumi:"basicAuth"`
	// File to read bearer token for scraping targets.
	BearerTokenFile   *string                                             `pulumi:"bearerTokenFile"`
	BearerTokenSecret *VMStaticScrapeSpecTargetEndpointsBearerTokenSecret `pulumi:"bearerTokenSecret"`
	// FollowRedirects controls redirects for scraping.
	Follow_redirects *bool `pulumi:"follow_redirects"`
	// HonorLabels chooses the metric's labels on collisions with target labels.
	HonorLabels *bool `pulumi:"honorLabels"`
	// HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.
	HonorTimestamps *bool `pulumi:"honorTimestamps"`
	// Interval at which metrics should be scraped
	Interval *string `pulumi:"interval"`
	// Labels static labels for targets.
	Labels map[string]string `pulumi:"labels"`
	// MaxScrapeSize defines a maximum size of scraped data for a job
	Max_scrape_size *string `pulumi:"max_scrape_size"`
	// MetricRelabelConfigs to apply to samples after scrapping.
	MetricRelabelConfigs []VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs `pulumi:"metricRelabelConfigs"`
	Oauth2               *VMStaticScrapeSpecTargetEndpointsOauth2                `pulumi:"oauth2"`
	// Optional HTTP URL parameters
	Params map[string][]string `pulumi:"params"`
	// HTTP path to scrape for metrics.
	Path *string `pulumi:"path"`
	// ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
	ProxyURL *string `pulumi:"proxyURL"`
	// RelabelConfigs to apply to samples during service discovery.
	RelabelConfigs []VMStaticScrapeSpecTargetEndpointsRelabelConfigs `pulumi:"relabelConfigs"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit *int `pulumi:"sampleLimit"`
	// HTTP scheme to use for scraping.
	Scheme *string `pulumi:"scheme"`
	// Timeout after which the scrape is ended
	ScrapeTimeout *string `pulumi:"scrapeTimeout"`
	// ScrapeInterval is the same as Interval and has priority over it.
	// one of scrape_interval or interval can be used
	Scrape_interval *string `pulumi:"scrape_interval"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit *int `pulumi:"seriesLimit"`
	// Targets static targets addresses in form of ["192.122.55.55:9100","some-name:9100"].
	Targets          []string                                         `pulumi:"targets"`
	TlsConfig        *VMStaticScrapeSpecTargetEndpointsTlsConfig      `pulumi:"tlsConfig"`
	Vm_scrape_params *VMStaticScrapeSpecTargetEndpointsVmScrapeParams `pulumi:"vm_scrape_params"`
}

// VMStaticScrapeSpecTargetEndpointsInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsArgs and VMStaticScrapeSpecTargetEndpointsOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsArgs{...}
type VMStaticScrapeSpecTargetEndpointsInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOutput() VMStaticScrapeSpecTargetEndpointsOutput
	ToVMStaticScrapeSpecTargetEndpointsOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOutput
}

// TargetEndpoint defines single static target endpoint.
type VMStaticScrapeSpecTargetEndpointsArgs struct {
	Authorization VMStaticScrapeSpecTargetEndpointsAuthorizationPtrInput `pulumi:"authorization"`
	BasicAuth     VMStaticScrapeSpecTargetEndpointsBasicAuthPtrInput     `pulumi:"basicAuth"`
	// File to read bearer token for scraping targets.
	BearerTokenFile   pulumi.StringPtrInput                                      `pulumi:"bearerTokenFile"`
	BearerTokenSecret VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrInput `pulumi:"bearerTokenSecret"`
	// FollowRedirects controls redirects for scraping.
	Follow_redirects pulumi.BoolPtrInput `pulumi:"follow_redirects"`
	// HonorLabels chooses the metric's labels on collisions with target labels.
	HonorLabels pulumi.BoolPtrInput `pulumi:"honorLabels"`
	// HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.
	HonorTimestamps pulumi.BoolPtrInput `pulumi:"honorTimestamps"`
	// Interval at which metrics should be scraped
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Labels static labels for targets.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// MaxScrapeSize defines a maximum size of scraped data for a job
	Max_scrape_size pulumi.StringPtrInput `pulumi:"max_scrape_size"`
	// MetricRelabelConfigs to apply to samples after scrapping.
	MetricRelabelConfigs VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayInput `pulumi:"metricRelabelConfigs"`
	Oauth2               VMStaticScrapeSpecTargetEndpointsOauth2PtrInput                 `pulumi:"oauth2"`
	// Optional HTTP URL parameters
	Params pulumi.StringArrayMapInput `pulumi:"params"`
	// HTTP path to scrape for metrics.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
	ProxyURL pulumi.StringPtrInput `pulumi:"proxyURL"`
	// RelabelConfigs to apply to samples during service discovery.
	RelabelConfigs VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayInput `pulumi:"relabelConfigs"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit pulumi.IntPtrInput `pulumi:"sampleLimit"`
	// HTTP scheme to use for scraping.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// Timeout after which the scrape is ended
	ScrapeTimeout pulumi.StringPtrInput `pulumi:"scrapeTimeout"`
	// ScrapeInterval is the same as Interval and has priority over it.
	// one of scrape_interval or interval can be used
	Scrape_interval pulumi.StringPtrInput `pulumi:"scrape_interval"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit pulumi.IntPtrInput `pulumi:"seriesLimit"`
	// Targets static targets addresses in form of ["192.122.55.55:9100","some-name:9100"].
	Targets          pulumi.StringArrayInput                                 `pulumi:"targets"`
	TlsConfig        VMStaticScrapeSpecTargetEndpointsTlsConfigPtrInput      `pulumi:"tlsConfig"`
	Vm_scrape_params VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrInput `pulumi:"vm_scrape_params"`
}

func (VMStaticScrapeSpecTargetEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpoints)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsArgs) ToVMStaticScrapeSpecTargetEndpointsOutput() VMStaticScrapeSpecTargetEndpointsOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsArgs) ToVMStaticScrapeSpecTargetEndpointsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOutput)
}

// VMStaticScrapeSpecTargetEndpointsArrayInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsArray and VMStaticScrapeSpecTargetEndpointsArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsArrayInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsArray{ VMStaticScrapeSpecTargetEndpointsArgs{...} }
type VMStaticScrapeSpecTargetEndpointsArrayInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsArrayOutput() VMStaticScrapeSpecTargetEndpointsArrayOutput
	ToVMStaticScrapeSpecTargetEndpointsArrayOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsArrayOutput
}

type VMStaticScrapeSpecTargetEndpointsArray []VMStaticScrapeSpecTargetEndpointsInput

func (VMStaticScrapeSpecTargetEndpointsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpoints)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsArray) ToVMStaticScrapeSpecTargetEndpointsArrayOutput() VMStaticScrapeSpecTargetEndpointsArrayOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsArray) ToVMStaticScrapeSpecTargetEndpointsArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsArrayOutput)
}

// TargetEndpoint defines single static target endpoint.
type VMStaticScrapeSpecTargetEndpointsOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpoints)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) ToVMStaticScrapeSpecTargetEndpointsOutput() VMStaticScrapeSpecTargetEndpointsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) ToVMStaticScrapeSpecTargetEndpointsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) Authorization() VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *VMStaticScrapeSpecTargetEndpointsAuthorization {
		return v.Authorization
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) BasicAuth() VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *VMStaticScrapeSpecTargetEndpointsBasicAuth {
		return v.BasicAuth
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput)
}

// File to read bearer token for scraping targets.
func (o VMStaticScrapeSpecTargetEndpointsOutput) BearerTokenFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.BearerTokenFile }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) BearerTokenSecret() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *VMStaticScrapeSpecTargetEndpointsBearerTokenSecret {
		return v.BearerTokenSecret
	}).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput)
}

// FollowRedirects controls redirects for scraping.
func (o VMStaticScrapeSpecTargetEndpointsOutput) Follow_redirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *bool { return v.Follow_redirects }).(pulumi.BoolPtrOutput)
}

// HonorLabels chooses the metric's labels on collisions with target labels.
func (o VMStaticScrapeSpecTargetEndpointsOutput) HonorLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *bool { return v.HonorLabels }).(pulumi.BoolPtrOutput)
}

// HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.
func (o VMStaticScrapeSpecTargetEndpointsOutput) HonorTimestamps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *bool { return v.HonorTimestamps }).(pulumi.BoolPtrOutput)
}

// Interval at which metrics should be scraped
func (o VMStaticScrapeSpecTargetEndpointsOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Labels static labels for targets.
func (o VMStaticScrapeSpecTargetEndpointsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// MaxScrapeSize defines a maximum size of scraped data for a job
func (o VMStaticScrapeSpecTargetEndpointsOutput) Max_scrape_size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.Max_scrape_size }).(pulumi.StringPtrOutput)
}

// MetricRelabelConfigs to apply to samples after scrapping.
func (o VMStaticScrapeSpecTargetEndpointsOutput) MetricRelabelConfigs() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) []VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs {
		return v.MetricRelabelConfigs
	}).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) Oauth2() VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *VMStaticScrapeSpecTargetEndpointsOauth2 { return v.Oauth2 }).(VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput)
}

// Optional HTTP URL parameters
func (o VMStaticScrapeSpecTargetEndpointsOutput) Params() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) map[string][]string { return v.Params }).(pulumi.StringArrayMapOutput)
}

// HTTP path to scrape for metrics.
func (o VMStaticScrapeSpecTargetEndpointsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
func (o VMStaticScrapeSpecTargetEndpointsOutput) ProxyURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.ProxyURL }).(pulumi.StringPtrOutput)
}

// RelabelConfigs to apply to samples during service discovery.
func (o VMStaticScrapeSpecTargetEndpointsOutput) RelabelConfigs() VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) []VMStaticScrapeSpecTargetEndpointsRelabelConfigs {
		return v.RelabelConfigs
	}).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput)
}

// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
func (o VMStaticScrapeSpecTargetEndpointsOutput) SampleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *int { return v.SampleLimit }).(pulumi.IntPtrOutput)
}

// HTTP scheme to use for scraping.
func (o VMStaticScrapeSpecTargetEndpointsOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// Timeout after which the scrape is ended
func (o VMStaticScrapeSpecTargetEndpointsOutput) ScrapeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.ScrapeTimeout }).(pulumi.StringPtrOutput)
}

// ScrapeInterval is the same as Interval and has priority over it.
// one of scrape_interval or interval can be used
func (o VMStaticScrapeSpecTargetEndpointsOutput) Scrape_interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *string { return v.Scrape_interval }).(pulumi.StringPtrOutput)
}

// SeriesLimit defines per-scrape limit on number of unique time series
// a single target can expose during all the scrapes on the time window of 24h.
func (o VMStaticScrapeSpecTargetEndpointsOutput) SeriesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *int { return v.SeriesLimit }).(pulumi.IntPtrOutput)
}

// Targets static targets addresses in form of ["192.122.55.55:9100","some-name:9100"].
func (o VMStaticScrapeSpecTargetEndpointsOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) TlsConfig() VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *VMStaticScrapeSpecTargetEndpointsTlsConfig {
		return v.TlsConfig
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOutput) Vm_scrape_params() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpoints) *VMStaticScrapeSpecTargetEndpointsVmScrapeParams {
		return v.Vm_scrape_params
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpoints)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsArrayOutput) ToVMStaticScrapeSpecTargetEndpointsArrayOutput() VMStaticScrapeSpecTargetEndpointsArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsArrayOutput) ToVMStaticScrapeSpecTargetEndpointsArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsArrayOutput) Index(i pulumi.IntInput) VMStaticScrapeSpecTargetEndpointsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMStaticScrapeSpecTargetEndpoints {
		return vs[0].([]VMStaticScrapeSpecTargetEndpoints)[vs[1].(int)]
	}).(VMStaticScrapeSpecTargetEndpointsOutput)
}

// Authorization with http header Authorization
type VMStaticScrapeSpecTargetEndpointsAuthorization struct {
	Credentials *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials `pulumi:"credentials"`
	// File with value for authorization
	CredentialsFile *string `pulumi:"credentialsFile"`
	// Type of authorization, default to bearer
	Type *string `pulumi:"type"`
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationArgs and VMStaticScrapeSpecTargetEndpointsAuthorizationOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsAuthorizationArgs{...}
type VMStaticScrapeSpecTargetEndpointsAuthorizationInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationOutput
}

// Authorization with http header Authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationArgs struct {
	Credentials VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrInput `pulumi:"credentials"`
	// File with value for authorization
	CredentialsFile pulumi.StringPtrInput `pulumi:"credentialsFile"`
	// Type of authorization, default to bearer
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VMStaticScrapeSpecTargetEndpointsAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorization)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationOutput).ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationArgs, VMStaticScrapeSpecTargetEndpointsAuthorizationPtr and VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsAuthorizationArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsAuthorizationPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsAuthorizationPtrType VMStaticScrapeSpecTargetEndpointsAuthorizationArgs

func VMStaticScrapeSpecTargetEndpointsAuthorizationPtr(v *VMStaticScrapeSpecTargetEndpointsAuthorizationArgs) VMStaticScrapeSpecTargetEndpointsAuthorizationPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsAuthorizationPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorization)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput)
}

// Authorization with http header Authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorization)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsAuthorization) *VMStaticScrapeSpecTargetEndpointsAuthorization {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) Credentials() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorization) *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials {
		return v.Credentials
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput)
}

// File with value for authorization
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) CredentialsFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorization) *string { return v.CredentialsFile }).(pulumi.StringPtrOutput)
}

// Type of authorization, default to bearer
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorization) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorization)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsAuthorizationOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorization) VMStaticScrapeSpecTargetEndpointsAuthorization {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsAuthorization
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput) Credentials() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorization) *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput)
}

// File with value for authorization
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput) CredentialsFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.CredentialsFile
	}).(pulumi.StringPtrOutput)
}

// Type of authorization, default to bearer
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret with value for authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs and VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs{...}
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput
}

// Reference to the secret with value for authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput).ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs, VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtr and VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrType VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs

func VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtr(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput)
}

// Reference to the secret with value for authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Reference to the secret with value for authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs and VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput
}

// Reference to the secret with value for authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput).ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs, VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtr and VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrType VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs

func VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtr(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput)
}

// Reference to the secret with value for authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Authorization with http header Authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationPatch struct {
	Credentials *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch `pulumi:"credentials"`
	// File with value for authorization
	CredentialsFile *string `pulumi:"credentialsFile"`
	// Type of authorization, default to bearer
	Type *string `pulumi:"type"`
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs and VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsAuthorizationPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput
}

// Authorization with http header Authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs struct {
	Credentials VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrInput `pulumi:"credentials"`
	// File with value for authorization
	CredentialsFile pulumi.StringPtrInput `pulumi:"credentialsFile"`
	// Type of authorization, default to bearer
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput).ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs, VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtr and VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsAuthorizationPatchPtrType VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs

func VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtr(v *VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsAuthorizationPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsAuthorizationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorizationPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsAuthorizationPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput)
}

// Authorization with http header Authorization
type VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) *VMStaticScrapeSpecTargetEndpointsAuthorizationPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) Credentials() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch {
		return v.Credentials
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput)
}

// File with value for authorization
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) CredentialsFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) *string { return v.CredentialsFile }).(pulumi.StringPtrOutput)
}

// Type of authorization, default to bearer
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsAuthorizationPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) VMStaticScrapeSpecTargetEndpointsAuthorizationPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsAuthorizationPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput) Credentials() VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) *VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatch {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput)
}

// File with value for authorization
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput) CredentialsFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) *string {
		if v == nil {
			return nil
		}
		return v.CredentialsFile
	}).(pulumi.StringPtrOutput)
}

// Type of authorization, default to bearer
func (o VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsAuthorizationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsBasicAuth struct {
	Password *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file *string                                             `pulumi:"password_file"`
	Username      *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername `pulumi:"username"`
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthArgs and VMStaticScrapeSpecTargetEndpointsBasicAuthOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBasicAuthArgs{...}
type VMStaticScrapeSpecTargetEndpointsBasicAuthInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthOutput
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsBasicAuthArgs struct {
	Password VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrInput `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file pulumi.StringPtrInput                                      `pulumi:"password_file"`
	Username      VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrInput `pulumi:"username"`
}

func (VMStaticScrapeSpecTargetEndpointsBasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuth)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthOutput).ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthArgs, VMStaticScrapeSpecTargetEndpointsBasicAuthPtr and VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBasicAuthArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBasicAuthPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBasicAuthPtrType VMStaticScrapeSpecTargetEndpointsBasicAuthArgs

func VMStaticScrapeSpecTargetEndpointsBasicAuthPtr(v *VMStaticScrapeSpecTargetEndpointsBasicAuthArgs) VMStaticScrapeSpecTargetEndpointsBasicAuthPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBasicAuthPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBasicAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuth)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsBasicAuthOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuth)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBasicAuth) *VMStaticScrapeSpecTargetEndpointsBasicAuth {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) Password() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuth) *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword {
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuth) *string { return v.Password_file }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthOutput) Username() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuth) *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername {
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuth)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBasicAuthOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuth) VMStaticScrapeSpecTargetEndpointsBasicAuth {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBasicAuth
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput) Password() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuth) *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword {
		if v == nil {
			return nil
		}
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuth) *string {
		if v == nil {
			return nil
		}
		return v.Password_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput) Username() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuth) *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername {
		if v == nil {
			return nil
		}
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthPassword struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs and VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs{...}
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPassword)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput).ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs, VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtr and VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrType VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs

func VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtr(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthPassword)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPassword)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthPassword)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) VMStaticScrapeSpecTargetEndpointsBasicAuthPassword {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBasicAuthPassword
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPassword) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs and VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput).ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs, VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtr and VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrType VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs

func VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtr(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsBasicAuthPatch struct {
	Password *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file *string                                                  `pulumi:"password_file"`
	Username      *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch `pulumi:"username"`
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs and VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsBasicAuthPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs struct {
	Password VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrInput `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file pulumi.StringPtrInput                                           `pulumi:"password_file"`
	Username      VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrInput `pulumi:"username"`
}

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput).ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs, VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtr and VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBasicAuthPatchPtrType VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs

func VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtr(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBasicAuthPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBasicAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) Password() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch {
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) *string { return v.Password_file }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput) Username() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch {
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) VMStaticScrapeSpecTargetEndpointsBasicAuthPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBasicAuthPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput) Password() VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatch {
		if v == nil {
			return nil
		}
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.Password_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput) Username() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch {
		if v == nil {
			return nil
		}
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsername struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs and VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs{...}
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsername)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput).ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs, VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtr and VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrType VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs

func VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtr(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthUsername)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsername)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthUsername)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) VMStaticScrapeSpecTargetEndpointsBasicAuthUsername {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBasicAuthUsername
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsername) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs and VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput).ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs, VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtr and VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrType VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs

func VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtr(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret to mount to read bearer token for scraping targets. The secret
// needs to be in the same namespace as the scrape object and accessible by
// the victoria-metrics operator.
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsBearerTokenSecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs and VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBearerTokenSecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput
	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput
}

// Secret to mount to read bearer token for scraping targets. The secret
// needs to be in the same namespace as the scrape object and accessible by
// the victoria-metrics operator.
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput).ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs, VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtr and VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPtrType VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs

func VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtr(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBearerTokenSecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput)
}

// Secret to mount to read bearer token for scraping targets. The secret
// needs to be in the same namespace as the scrape object and accessible by
// the victoria-metrics operator.
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) *VMStaticScrapeSpecTargetEndpointsBearerTokenSecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBearerTokenSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) VMStaticScrapeSpecTargetEndpointsBearerTokenSecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBearerTokenSecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret to mount to read bearer token for scraping targets. The secret
// needs to be in the same namespace as the scrape object and accessible by
// the victoria-metrics operator.
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs and VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput
}

// Secret to mount to read bearer token for scraping targets. The secret
// needs to be in the same namespace as the scrape object and accessible by
// the victoria-metrics operator.
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs, VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtr and VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrType VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput)
}

// Secret to mount to read bearer token for scraping targets. The secret
// needs to be in the same namespace as the scrape object and accessible by
// the victoria-metrics operator.
type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action *string `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If map[string]interface{} `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels map[string]string `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match *string `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus *int `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex map[string]interface{} `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement *string `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator *string `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels []string `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels []string `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel *string `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label *string `pulumi:"target_label"`
}

// VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs and VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs{...}
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput
	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action pulumi.StringPtrInput `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If pulumi.MapInput `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus pulumi.IntPtrInput `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex pulumi.MapInput `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement pulumi.StringPtrInput `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator pulumi.StringPtrInput `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels pulumi.StringArrayInput `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels pulumi.StringArrayInput `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel pulumi.StringPtrInput `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label pulumi.StringPtrInput `pulumi:"target_label"`
}

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput)
}

// VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArray and VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArray{ VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs{...} }
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput
	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput
}

type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArray []VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsInput

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArray) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArray) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput {
	return o
}

// Action to perform based on regex matching. Default is 'replace'
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) If() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) map[string]interface{} { return v.If }).(pulumi.MapOutput)
}

// Labels is used together with Match for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Match is used together with Labels for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// Modulus to take of the hash of the source label values.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Modulus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) *int { return v.Modulus }).(pulumi.IntPtrOutput)
}

// Regular expression against which the extracted value is matched. Default is '(.*)'
// victoriaMetrics supports multiline regex joined with |
// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Regex() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) map[string]interface{} { return v.Regex }).(pulumi.MapOutput)
}

// Replacement value against which a regex replace is performed if the
// regular expression matches. Regex capture groups are available. Default is '$1'
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) *string { return v.Replacement }).(pulumi.StringPtrOutput)
}

// Separator placed between concatenated source label values. default is ';'.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

// The source labels select values from existing labels. Their content is concatenated
// using the configured separator and matched against the configured regular expression
// for the replace, keep, and drop actions.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) SourceLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) []string { return v.SourceLabels }).(pulumi.StringArrayOutput)
}

// UnderScoreSourceLabels - additional form of source labels source_labels
// for compatibility with original relabel config.
// if set  both sourceLabels and source_labels, sourceLabels has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Source_labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) []string { return v.Source_labels }).(pulumi.StringArrayOutput)
}

// Label to which the resulting value is written in a replace action.
// It is mandatory for replace actions. Regex capture groups are available.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) TargetLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) *string { return v.TargetLabel }).(pulumi.StringPtrOutput)
}

// UnderScoreTargetLabel - additional form of target label - target_label
// for compatibility with original relabel config.
// if set  both targetLabel and target_label, targetLabel has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput) Target_label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs) *string { return v.Target_label }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput) Index(i pulumi.IntInput) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs {
		return vs[0].([]VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigs)[vs[1].(int)]
	}).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action *string `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If map[string]interface{} `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels map[string]string `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match *string `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus *int `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex map[string]interface{} `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement *string `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator *string `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels []string `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels []string `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel *string `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label *string `pulumi:"target_label"`
}

// VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs and VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action pulumi.StringPtrInput `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If pulumi.MapInput `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus pulumi.IntPtrInput `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex pulumi.MapInput `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement pulumi.StringPtrInput `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator pulumi.StringPtrInput `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels pulumi.StringArrayInput `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels pulumi.StringArrayInput `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel pulumi.StringPtrInput `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label pulumi.StringPtrInput `pulumi:"target_label"`
}

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput)
}

// VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArray and VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArray{ VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs{...} }
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput
	ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput
}

type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArray []VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchInput

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArray) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArray) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput {
	return o
}

// Action to perform based on regex matching. Default is 'replace'
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) If() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) map[string]interface{} { return v.If }).(pulumi.MapOutput)
}

// Labels is used together with Match for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Match is used together with Labels for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// Modulus to take of the hash of the source label values.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Modulus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) *int { return v.Modulus }).(pulumi.IntPtrOutput)
}

// Regular expression against which the extracted value is matched. Default is '(.*)'
// victoriaMetrics supports multiline regex joined with |
// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Regex() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) map[string]interface{} {
		return v.Regex
	}).(pulumi.MapOutput)
}

// Replacement value against which a regex replace is performed if the
// regular expression matches. Regex capture groups are available. Default is '$1'
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) *string { return v.Replacement }).(pulumi.StringPtrOutput)
}

// Separator placed between concatenated source label values. default is ';'.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

// The source labels select values from existing labels. Their content is concatenated
// using the configured separator and matched against the configured regular expression
// for the replace, keep, and drop actions.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) SourceLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) []string { return v.SourceLabels }).(pulumi.StringArrayOutput)
}

// UnderScoreSourceLabels - additional form of source labels source_labels
// for compatibility with original relabel config.
// if set  both sourceLabels and source_labels, sourceLabels has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Source_labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) []string { return v.Source_labels }).(pulumi.StringArrayOutput)
}

// Label to which the resulting value is written in a replace action.
// It is mandatory for replace actions. Regex capture groups are available.
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) TargetLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) *string { return v.TargetLabel }).(pulumi.StringPtrOutput)
}

// UnderScoreTargetLabel - additional form of target label - target_label
// for compatibility with original relabel config.
// if set  both targetLabel and target_label, targetLabel has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput) Target_label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch) *string { return v.Target_label }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput) ToVMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput) Index(i pulumi.IntInput) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch {
		return vs[0].([]VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch)[vs[1].(int)]
	}).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput)
}

// OAuth2 defines auth configuration
type VMStaticScrapeSpecTargetEndpointsOauth2 struct {
	Client_id     *VMStaticScrapeSpecTargetEndpointsOauth2ClientId     `pulumi:"client_id"`
	Client_secret *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret `pulumi:"client_secret"`
	// ClientSecretFile defines path for client secret file.
	Client_secret_file *string `pulumi:"client_secret_file"`
	// Parameters to append to the token URL
	Endpoint_params map[string]string `pulumi:"endpoint_params"`
	// OAuth2 scopes used for the token request
	Scopes []string `pulumi:"scopes"`
	// The URL to fetch the token from
	Token_url *string `pulumi:"token_url"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2Input is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2Args and VMStaticScrapeSpecTargetEndpointsOauth2Output values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2Input` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2Args{...}
type VMStaticScrapeSpecTargetEndpointsOauth2Input interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2Output() VMStaticScrapeSpecTargetEndpointsOauth2Output
	ToVMStaticScrapeSpecTargetEndpointsOauth2OutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2Output
}

// OAuth2 defines auth configuration
type VMStaticScrapeSpecTargetEndpointsOauth2Args struct {
	Client_id     VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrInput     `pulumi:"client_id"`
	Client_secret VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrInput `pulumi:"client_secret"`
	// ClientSecretFile defines path for client secret file.
	Client_secret_file pulumi.StringPtrInput `pulumi:"client_secret_file"`
	// Parameters to append to the token URL
	Endpoint_params pulumi.StringMapInput `pulumi:"endpoint_params"`
	// OAuth2 scopes used for the token request
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// The URL to fetch the token from
	Token_url pulumi.StringPtrInput `pulumi:"token_url"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2Args) ToVMStaticScrapeSpecTargetEndpointsOauth2Output() VMStaticScrapeSpecTargetEndpointsOauth2Output {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2OutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2Args) ToVMStaticScrapeSpecTargetEndpointsOauth2OutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2Output)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2Args) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2Args) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2Output).ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2PtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2Args, VMStaticScrapeSpecTargetEndpointsOauth2Ptr and VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2PtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2Args{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2PtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2PtrType VMStaticScrapeSpecTargetEndpointsOauth2Args

func VMStaticScrapeSpecTargetEndpointsOauth2Ptr(v *VMStaticScrapeSpecTargetEndpointsOauth2Args) VMStaticScrapeSpecTargetEndpointsOauth2PtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2PtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2PtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2PtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput)
}

// OAuth2 defines auth configuration
type VMStaticScrapeSpecTargetEndpointsOauth2Output struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) ToVMStaticScrapeSpecTargetEndpointsOauth2Output() VMStaticScrapeSpecTargetEndpointsOauth2Output {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) ToVMStaticScrapeSpecTargetEndpointsOauth2OutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2Output {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2) *VMStaticScrapeSpecTargetEndpointsOauth2 {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) Client_id() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2) *VMStaticScrapeSpecTargetEndpointsOauth2ClientId {
		return v.Client_id
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) Client_secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2) *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret {
		return v.Client_secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput)
}

// ClientSecretFile defines path for client secret file.
func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) Client_secret_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2) *string { return v.Client_secret_file }).(pulumi.StringPtrOutput)
}

// Parameters to append to the token URL
func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) Endpoint_params() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2) map[string]string { return v.Endpoint_params }).(pulumi.StringMapOutput)
}

// OAuth2 scopes used for the token request
func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// The URL to fetch the token from
func (o VMStaticScrapeSpecTargetEndpointsOauth2Output) Token_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2) *string { return v.Token_url }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2Output {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2) VMStaticScrapeSpecTargetEndpointsOauth2 {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2Output)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) Client_id() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2) *VMStaticScrapeSpecTargetEndpointsOauth2ClientId {
		if v == nil {
			return nil
		}
		return v.Client_id
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) Client_secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2) *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret {
		if v == nil {
			return nil
		}
		return v.Client_secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput)
}

// ClientSecretFile defines path for client secret file.
func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) Client_secret_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2) *string {
		if v == nil {
			return nil
		}
		return v.Client_secret_file
	}).(pulumi.StringPtrOutput)
}

// Parameters to append to the token URL
func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) Endpoint_params() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2) map[string]string {
		if v == nil {
			return nil
		}
		return v.Endpoint_params
	}).(pulumi.StringMapOutput)
}

// OAuth2 scopes used for the token request
func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// The URL to fetch the token from
func (o VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput) Token_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2) *string {
		if v == nil {
			return nil
		}
		return v.Token_url
	}).(pulumi.StringPtrOutput)
}

// The secret or configmap containing the OAuth2 client id
type VMStaticScrapeSpecTargetEndpointsOauth2ClientId struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput
}

// The secret or configmap containing the OAuth2 client id
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientId)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientId)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput)
}

// The secret or configmap containing the OAuth2 client id
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientId)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientId) *VMStaticScrapeSpecTargetEndpointsOauth2ClientId {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientId) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput) Secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientId) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientId)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientId) VMStaticScrapeSpecTargetEndpointsOauth2ClientId {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientId
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientId) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientId) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap{ "key": VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigArgs{...} }
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The secret or configmap containing the OAuth2 client id
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput
}

// The secret or configmap containing the OAuth2 client id
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput)
}

// The secret or configmap containing the OAuth2 client id
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput) Secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The secret containing the OAuth2 client secret
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs and VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput
}

// The secret containing the OAuth2 client secret
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput)
}

// The secret containing the OAuth2 client secret
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The secret containing the OAuth2 client secret
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs and VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput
}

// The secret containing the OAuth2 client secret
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs, VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtr and VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrType VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput)
}

// The secret containing the OAuth2 client secret
type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// OAuth2 defines auth configuration
type VMStaticScrapeSpecTargetEndpointsOauth2Patch struct {
	Client_id     *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch     `pulumi:"client_id"`
	Client_secret *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch `pulumi:"client_secret"`
	// ClientSecretFile defines path for client secret file.
	Client_secret_file *string `pulumi:"client_secret_file"`
	// Parameters to append to the token URL
	Endpoint_params map[string]string `pulumi:"endpoint_params"`
	// OAuth2 scopes used for the token request
	Scopes []string `pulumi:"scopes"`
	// The URL to fetch the token from
	Token_url *string `pulumi:"token_url"`
}

// VMStaticScrapeSpecTargetEndpointsOauth2PatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs and VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2PatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsOauth2PatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2PatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2PatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput
}

// OAuth2 defines auth configuration
type VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs struct {
	Client_id     VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrInput     `pulumi:"client_id"`
	Client_secret VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrInput `pulumi:"client_secret"`
	// ClientSecretFile defines path for client secret file.
	Client_secret_file pulumi.StringPtrInput `pulumi:"client_secret_file"`
	// Parameters to append to the token URL
	Endpoint_params pulumi.StringMapInput `pulumi:"endpoint_params"`
	// OAuth2 scopes used for the token request
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// The URL to fetch the token from
	Token_url pulumi.StringPtrInput `pulumi:"token_url"`
}

func (VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2Patch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2PatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput).ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs, VMStaticScrapeSpecTargetEndpointsOauth2PatchPtr and VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsOauth2PatchPtrType VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs

func VMStaticScrapeSpecTargetEndpointsOauth2PatchPtr(v *VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs) VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsOauth2PatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsOauth2PatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2Patch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2PatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsOauth2PatchPtrType) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput)
}

// OAuth2 defines auth configuration
type VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2Patch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsOauth2Patch) *VMStaticScrapeSpecTargetEndpointsOauth2Patch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) Client_id() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2Patch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch {
		return v.Client_id
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) Client_secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2Patch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch {
		return v.Client_secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput)
}

// ClientSecretFile defines path for client secret file.
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) Client_secret_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2Patch) *string { return v.Client_secret_file }).(pulumi.StringPtrOutput)
}

// Parameters to append to the token URL
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) Endpoint_params() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2Patch) map[string]string { return v.Endpoint_params }).(pulumi.StringMapOutput)
}

// OAuth2 scopes used for the token request
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2Patch) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// The URL to fetch the token from
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput) Token_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsOauth2Patch) *string { return v.Token_url }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsOauth2Patch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput() VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2Patch) VMStaticScrapeSpecTargetEndpointsOauth2Patch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsOauth2Patch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) Client_id() VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2Patch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatch {
		if v == nil {
			return nil
		}
		return v.Client_id
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) Client_secret() VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2Patch) *VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatch {
		if v == nil {
			return nil
		}
		return v.Client_secret
	}).(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput)
}

// ClientSecretFile defines path for client secret file.
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) Client_secret_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2Patch) *string {
		if v == nil {
			return nil
		}
		return v.Client_secret_file
	}).(pulumi.StringPtrOutput)
}

// Parameters to append to the token URL
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) Endpoint_params() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2Patch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Endpoint_params
	}).(pulumi.StringMapOutput)
}

// OAuth2 scopes used for the token request
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2Patch) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// The URL to fetch the token from
func (o VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput) Token_url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsOauth2Patch) *string {
		if v == nil {
			return nil
		}
		return v.Token_url
	}).(pulumi.StringPtrOutput)
}

// TargetEndpoint defines single static target endpoint.
type VMStaticScrapeSpecTargetEndpointsPatch struct {
	Authorization *VMStaticScrapeSpecTargetEndpointsAuthorizationPatch `pulumi:"authorization"`
	BasicAuth     *VMStaticScrapeSpecTargetEndpointsBasicAuthPatch     `pulumi:"basicAuth"`
	// File to read bearer token for scraping targets.
	BearerTokenFile   *string                                                  `pulumi:"bearerTokenFile"`
	BearerTokenSecret *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch `pulumi:"bearerTokenSecret"`
	// FollowRedirects controls redirects for scraping.
	Follow_redirects *bool `pulumi:"follow_redirects"`
	// HonorLabels chooses the metric's labels on collisions with target labels.
	HonorLabels *bool `pulumi:"honorLabels"`
	// HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.
	HonorTimestamps *bool `pulumi:"honorTimestamps"`
	// Interval at which metrics should be scraped
	Interval *string `pulumi:"interval"`
	// Labels static labels for targets.
	Labels map[string]string `pulumi:"labels"`
	// MaxScrapeSize defines a maximum size of scraped data for a job
	Max_scrape_size *string `pulumi:"max_scrape_size"`
	// MetricRelabelConfigs to apply to samples after scrapping.
	MetricRelabelConfigs []VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch `pulumi:"metricRelabelConfigs"`
	Oauth2               *VMStaticScrapeSpecTargetEndpointsOauth2Patch                `pulumi:"oauth2"`
	// Optional HTTP URL parameters
	Params map[string][]string `pulumi:"params"`
	// HTTP path to scrape for metrics.
	Path *string `pulumi:"path"`
	// ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
	ProxyURL *string `pulumi:"proxyURL"`
	// RelabelConfigs to apply to samples during service discovery.
	RelabelConfigs []VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch `pulumi:"relabelConfigs"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit *int `pulumi:"sampleLimit"`
	// HTTP scheme to use for scraping.
	Scheme *string `pulumi:"scheme"`
	// Timeout after which the scrape is ended
	ScrapeTimeout *string `pulumi:"scrapeTimeout"`
	// ScrapeInterval is the same as Interval and has priority over it.
	// one of scrape_interval or interval can be used
	Scrape_interval *string `pulumi:"scrape_interval"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit *int `pulumi:"seriesLimit"`
	// Targets static targets addresses in form of ["192.122.55.55:9100","some-name:9100"].
	Targets          []string                                              `pulumi:"targets"`
	TlsConfig        *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch      `pulumi:"tlsConfig"`
	Vm_scrape_params *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch `pulumi:"vm_scrape_params"`
}

// VMStaticScrapeSpecTargetEndpointsPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsPatchArgs and VMStaticScrapeSpecTargetEndpointsPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsPatchOutput() VMStaticScrapeSpecTargetEndpointsPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsPatchOutput
}

// TargetEndpoint defines single static target endpoint.
type VMStaticScrapeSpecTargetEndpointsPatchArgs struct {
	Authorization VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrInput `pulumi:"authorization"`
	BasicAuth     VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrInput     `pulumi:"basicAuth"`
	// File to read bearer token for scraping targets.
	BearerTokenFile   pulumi.StringPtrInput                                           `pulumi:"bearerTokenFile"`
	BearerTokenSecret VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrInput `pulumi:"bearerTokenSecret"`
	// FollowRedirects controls redirects for scraping.
	Follow_redirects pulumi.BoolPtrInput `pulumi:"follow_redirects"`
	// HonorLabels chooses the metric's labels on collisions with target labels.
	HonorLabels pulumi.BoolPtrInput `pulumi:"honorLabels"`
	// HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.
	HonorTimestamps pulumi.BoolPtrInput `pulumi:"honorTimestamps"`
	// Interval at which metrics should be scraped
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Labels static labels for targets.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// MaxScrapeSize defines a maximum size of scraped data for a job
	Max_scrape_size pulumi.StringPtrInput `pulumi:"max_scrape_size"`
	// MetricRelabelConfigs to apply to samples after scrapping.
	MetricRelabelConfigs VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayInput `pulumi:"metricRelabelConfigs"`
	Oauth2               VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrInput                 `pulumi:"oauth2"`
	// Optional HTTP URL parameters
	Params pulumi.StringArrayMapInput `pulumi:"params"`
	// HTTP path to scrape for metrics.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
	ProxyURL pulumi.StringPtrInput `pulumi:"proxyURL"`
	// RelabelConfigs to apply to samples during service discovery.
	RelabelConfigs VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayInput `pulumi:"relabelConfigs"`
	// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
	SampleLimit pulumi.IntPtrInput `pulumi:"sampleLimit"`
	// HTTP scheme to use for scraping.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// Timeout after which the scrape is ended
	ScrapeTimeout pulumi.StringPtrInput `pulumi:"scrapeTimeout"`
	// ScrapeInterval is the same as Interval and has priority over it.
	// one of scrape_interval or interval can be used
	Scrape_interval pulumi.StringPtrInput `pulumi:"scrape_interval"`
	// SeriesLimit defines per-scrape limit on number of unique time series
	// a single target can expose during all the scrapes on the time window of 24h.
	SeriesLimit pulumi.IntPtrInput `pulumi:"seriesLimit"`
	// Targets static targets addresses in form of ["192.122.55.55:9100","some-name:9100"].
	Targets          pulumi.StringArrayInput                                      `pulumi:"targets"`
	TlsConfig        VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrInput      `pulumi:"tlsConfig"`
	Vm_scrape_params VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrInput `pulumi:"vm_scrape_params"`
}

func (VMStaticScrapeSpecTargetEndpointsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsPatchOutput() VMStaticScrapeSpecTargetEndpointsPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsPatchOutput)
}

// VMStaticScrapeSpecTargetEndpointsPatchArrayInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsPatchArray and VMStaticScrapeSpecTargetEndpointsPatchArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsPatchArrayInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsPatchArray{ VMStaticScrapeSpecTargetEndpointsPatchArgs{...} }
type VMStaticScrapeSpecTargetEndpointsPatchArrayInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsPatchArrayOutput
	ToVMStaticScrapeSpecTargetEndpointsPatchArrayOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsPatchArrayOutput
}

type VMStaticScrapeSpecTargetEndpointsPatchArray []VMStaticScrapeSpecTargetEndpointsPatchInput

func (VMStaticScrapeSpecTargetEndpointsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsPatchArray) ToVMStaticScrapeSpecTargetEndpointsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsPatchArrayOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsPatchArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsPatchArray) ToVMStaticScrapeSpecTargetEndpointsPatchArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsPatchArrayOutput)
}

// TargetEndpoint defines single static target endpoint.
type VMStaticScrapeSpecTargetEndpointsPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsPatchOutput() VMStaticScrapeSpecTargetEndpointsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Authorization() VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *VMStaticScrapeSpecTargetEndpointsAuthorizationPatch {
		return v.Authorization
	}).(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) BasicAuth() VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *VMStaticScrapeSpecTargetEndpointsBasicAuthPatch {
		return v.BasicAuth
	}).(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput)
}

// File to read bearer token for scraping targets.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) BearerTokenFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.BearerTokenFile }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) BearerTokenSecret() VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatch {
		return v.BearerTokenSecret
	}).(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput)
}

// FollowRedirects controls redirects for scraping.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Follow_redirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *bool { return v.Follow_redirects }).(pulumi.BoolPtrOutput)
}

// HonorLabels chooses the metric's labels on collisions with target labels.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) HonorLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *bool { return v.HonorLabels }).(pulumi.BoolPtrOutput)
}

// HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) HonorTimestamps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *bool { return v.HonorTimestamps }).(pulumi.BoolPtrOutput)
}

// Interval at which metrics should be scraped
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Labels static labels for targets.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// MaxScrapeSize defines a maximum size of scraped data for a job
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Max_scrape_size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.Max_scrape_size }).(pulumi.StringPtrOutput)
}

// MetricRelabelConfigs to apply to samples after scrapping.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) MetricRelabelConfigs() VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) []VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatch {
		return v.MetricRelabelConfigs
	}).(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Oauth2() VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *VMStaticScrapeSpecTargetEndpointsOauth2Patch {
		return v.Oauth2
	}).(VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput)
}

// Optional HTTP URL parameters
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Params() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) map[string][]string { return v.Params }).(pulumi.StringArrayMapOutput)
}

// HTTP path to scrape for metrics.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) ProxyURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.ProxyURL }).(pulumi.StringPtrOutput)
}

// RelabelConfigs to apply to samples during service discovery.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) RelabelConfigs() VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) []VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch {
		return v.RelabelConfigs
	}).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput)
}

// SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) SampleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *int { return v.SampleLimit }).(pulumi.IntPtrOutput)
}

// HTTP scheme to use for scraping.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// Timeout after which the scrape is ended
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) ScrapeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.ScrapeTimeout }).(pulumi.StringPtrOutput)
}

// ScrapeInterval is the same as Interval and has priority over it.
// one of scrape_interval or interval can be used
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Scrape_interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *string { return v.Scrape_interval }).(pulumi.StringPtrOutput)
}

// SeriesLimit defines per-scrape limit on number of unique time series
// a single target can expose during all the scrapes on the time window of 24h.
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) SeriesLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *int { return v.SeriesLimit }).(pulumi.IntPtrOutput)
}

// Targets static targets addresses in form of ["192.122.55.55:9100","some-name:9100"].
func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Targets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) []string { return v.Targets }).(pulumi.StringArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) TlsConfig() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch {
		return v.TlsConfig
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsPatchOutput) Vm_scrape_params() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch {
		return v.Vm_scrape_params
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsPatchArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsPatchArrayOutput) ToVMStaticScrapeSpecTargetEndpointsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsPatchArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsPatchArrayOutput) ToVMStaticScrapeSpecTargetEndpointsPatchArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsPatchArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsPatchArrayOutput) Index(i pulumi.IntInput) VMStaticScrapeSpecTargetEndpointsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMStaticScrapeSpecTargetEndpointsPatch {
		return vs[0].([]VMStaticScrapeSpecTargetEndpointsPatch)[vs[1].(int)]
	}).(VMStaticScrapeSpecTargetEndpointsPatchOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsRelabelConfigs struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action *string `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If map[string]interface{} `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels map[string]string `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match *string `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus *int `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex map[string]interface{} `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement *string `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator *string `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels []string `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels []string `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel *string `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label *string `pulumi:"target_label"`
}

// VMStaticScrapeSpecTargetEndpointsRelabelConfigsInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs and VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsRelabelConfigsInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs{...}
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput
	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action pulumi.StringPtrInput `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If pulumi.MapInput `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus pulumi.IntPtrInput `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex pulumi.MapInput `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement pulumi.StringPtrInput `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator pulumi.StringPtrInput `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels pulumi.StringArrayInput `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels pulumi.StringArrayInput `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel pulumi.StringPtrInput `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label pulumi.StringPtrInput `pulumi:"target_label"`
}

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigs)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput)
}

// VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsRelabelConfigsArray and VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsRelabelConfigsArray{ VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs{...} }
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput
	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput
}

type VMStaticScrapeSpecTargetEndpointsRelabelConfigsArray []VMStaticScrapeSpecTargetEndpointsRelabelConfigsInput

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsRelabelConfigs)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsArray) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsArray) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigs)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput {
	return o
}

// Action to perform based on regex matching. Default is 'replace'
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) If() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) map[string]interface{} { return v.If }).(pulumi.MapOutput)
}

// Labels is used together with Match for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Match is used together with Labels for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// Modulus to take of the hash of the source label values.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Modulus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) *int { return v.Modulus }).(pulumi.IntPtrOutput)
}

// Regular expression against which the extracted value is matched. Default is '(.*)'
// victoriaMetrics supports multiline regex joined with |
// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Regex() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) map[string]interface{} { return v.Regex }).(pulumi.MapOutput)
}

// Replacement value against which a regex replace is performed if the
// regular expression matches. Regex capture groups are available. Default is '$1'
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) *string { return v.Replacement }).(pulumi.StringPtrOutput)
}

// Separator placed between concatenated source label values. default is ';'.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

// The source labels select values from existing labels. Their content is concatenated
// using the configured separator and matched against the configured regular expression
// for the replace, keep, and drop actions.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) SourceLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) []string { return v.SourceLabels }).(pulumi.StringArrayOutput)
}

// UnderScoreSourceLabels - additional form of source labels source_labels
// for compatibility with original relabel config.
// if set  both sourceLabels and source_labels, sourceLabels has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Source_labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) []string { return v.Source_labels }).(pulumi.StringArrayOutput)
}

// Label to which the resulting value is written in a replace action.
// It is mandatory for replace actions. Regex capture groups are available.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) TargetLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) *string { return v.TargetLabel }).(pulumi.StringPtrOutput)
}

// UnderScoreTargetLabel - additional form of target label - target_label
// for compatibility with original relabel config.
// if set  both targetLabel and target_label, targetLabel has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput) Target_label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigs) *string { return v.Target_label }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsRelabelConfigs)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput) Index(i pulumi.IntInput) VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMStaticScrapeSpecTargetEndpointsRelabelConfigs {
		return vs[0].([]VMStaticScrapeSpecTargetEndpointsRelabelConfigs)[vs[1].(int)]
	}).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action *string `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If map[string]interface{} `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels map[string]string `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match *string `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus *int `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex map[string]interface{} `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement *string `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator *string `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels []string `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels []string `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel *string `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label *string `pulumi:"target_label"`
}

// VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs and VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs struct {
	// Action to perform based on regex matching. Default is 'replace'
	Action pulumi.StringPtrInput `pulumi:"action"`
	// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
	If pulumi.MapInput `pulumi:"if"`
	// Labels is used together with Match for `action: graphite`
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Match is used together with Labels for `action: graphite`
	Match pulumi.StringPtrInput `pulumi:"match"`
	// Modulus to take of the hash of the source label values.
	Modulus pulumi.IntPtrInput `pulumi:"modulus"`
	// Regular expression against which the extracted value is matched. Default is '(.*)'
	// victoriaMetrics supports multiline regex joined with |
	// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
	Regex pulumi.MapInput `pulumi:"regex"`
	// Replacement value against which a regex replace is performed if the
	// regular expression matches. Regex capture groups are available. Default is '$1'
	Replacement pulumi.StringPtrInput `pulumi:"replacement"`
	// Separator placed between concatenated source label values. default is ';'.
	Separator pulumi.StringPtrInput `pulumi:"separator"`
	// The source labels select values from existing labels. Their content is concatenated
	// using the configured separator and matched against the configured regular expression
	// for the replace, keep, and drop actions.
	SourceLabels pulumi.StringArrayInput `pulumi:"sourceLabels"`
	// UnderScoreSourceLabels - additional form of source labels source_labels
	// for compatibility with original relabel config.
	// if set  both sourceLabels and source_labels, sourceLabels has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Source_labels pulumi.StringArrayInput `pulumi:"source_labels"`
	// Label to which the resulting value is written in a replace action.
	// It is mandatory for replace actions. Regex capture groups are available.
	TargetLabel pulumi.StringPtrInput `pulumi:"targetLabel"`
	// UnderScoreTargetLabel - additional form of target label - target_label
	// for compatibility with original relabel config.
	// if set  both targetLabel and target_label, targetLabel has priority.
	// for details https://github.com/VictoriaMetrics/operator/issues/131
	Target_label pulumi.StringPtrInput `pulumi:"target_label"`
}

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput)
}

// VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArray and VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArray{ VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs{...} }
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput
	ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput
}

type VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArray []VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchInput

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArray) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArray) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput)
}

// RelabelConfig allows dynamic rewriting of the label set
// More info: https://docs.victoriametrics.com/#relabeling
type VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput {
	return o
}

// Action to perform based on regex matching. Default is 'replace'
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) If() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) map[string]interface{} { return v.If }).(pulumi.MapOutput)
}

// Labels is used together with Match for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Match is used together with Labels for `action: graphite`
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) *string { return v.Match }).(pulumi.StringPtrOutput)
}

// Modulus to take of the hash of the source label values.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Modulus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) *int { return v.Modulus }).(pulumi.IntPtrOutput)
}

// Regular expression against which the extracted value is matched. Default is '(.*)'
// victoriaMetrics supports multiline regex joined with |
// https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Regex() pulumi.MapOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) map[string]interface{} { return v.Regex }).(pulumi.MapOutput)
}

// Replacement value against which a regex replace is performed if the
// regular expression matches. Regex capture groups are available. Default is '$1'
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) *string { return v.Replacement }).(pulumi.StringPtrOutput)
}

// Separator placed between concatenated source label values. default is ';'.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

// The source labels select values from existing labels. Their content is concatenated
// using the configured separator and matched against the configured regular expression
// for the replace, keep, and drop actions.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) SourceLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) []string { return v.SourceLabels }).(pulumi.StringArrayOutput)
}

// UnderScoreSourceLabels - additional form of source labels source_labels
// for compatibility with original relabel config.
// if set  both sourceLabels and source_labels, sourceLabels has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Source_labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) []string { return v.Source_labels }).(pulumi.StringArrayOutput)
}

// Label to which the resulting value is written in a replace action.
// It is mandatory for replace actions. Regex capture groups are available.
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) TargetLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) *string { return v.TargetLabel }).(pulumi.StringPtrOutput)
}

// UnderScoreTargetLabel - additional form of target label - target_label
// for compatibility with original relabel config.
// if set  both targetLabel and target_label, targetLabel has priority.
// for details https://github.com/VictoriaMetrics/operator/issues/131
func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput) Target_label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch) *string { return v.Target_label }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput() VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput) ToVMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput) Index(i pulumi.IntInput) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch {
		return vs[0].([]VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatch)[vs[1].(int)]
	}).(VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput)
}

// TLSConfig configuration to use when scraping the endpoint
type VMStaticScrapeSpecTargetEndpointsTlsConfig struct {
	Ca *VMStaticScrapeSpecTargetEndpointsTlsConfigCa `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile *string                                         `pulumi:"caFile"`
	Cert   *VMStaticScrapeSpecTargetEndpointsTlsConfigCert `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile *string `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   *string                                              `pulumi:"keyFile"`
	KeySecret *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName *string `pulumi:"serverName"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigOutput
}

// TLSConfig configuration to use when scraping the endpoint
type VMStaticScrapeSpecTargetEndpointsTlsConfigArgs struct {
	Ca VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrInput `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile pulumi.StringPtrInput                                  `pulumi:"caFile"`
	Cert   VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrInput `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile pulumi.StringPtrInput `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   pulumi.StringPtrInput                                       `pulumi:"keyFile"`
	KeySecret VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrInput `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfig)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfig)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput)
}

// TLSConfig configuration to use when scraping the endpoint
type VMStaticScrapeSpecTargetEndpointsTlsConfigOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfig)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfig) *VMStaticScrapeSpecTargetEndpointsTlsConfig {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) Ca() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *VMStaticScrapeSpecTargetEndpointsTlsConfigCa {
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) Cert() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *VMStaticScrapeSpecTargetEndpointsTlsConfigCert {
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *string { return v.CertFile }).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *string { return v.KeyFile }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret {
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfig) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfig)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) VMStaticScrapeSpecTargetEndpointsTlsConfig {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfig
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) Ca() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *VMStaticScrapeSpecTargetEndpointsTlsConfigCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) Cert() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *VMStaticScrapeSpecTargetEndpointsTlsConfigCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret {
		if v == nil {
			return nil
		}
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCa struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCa)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCaPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCa)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCa)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsTlsConfigCa {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCa)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCa) VMStaticScrapeSpecTargetEndpointsTlsConfigCa {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCa
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap and VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap{ "key": VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigArgs{...} }
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCert struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCert)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCertPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCert)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCert)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsTlsConfigCert {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCert)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCert) VMStaticScrapeSpecTargetEndpointsTlsConfigCert {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCert
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap and VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap{ "key": VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigArgs{...} }
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// TLSConfig configuration to use when scraping the endpoint
type VMStaticScrapeSpecTargetEndpointsTlsConfigPatch struct {
	Ca *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile *string                                              `pulumi:"caFile"`
	Cert   *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile *string `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   *string                                                   `pulumi:"keyFile"`
	KeySecret *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName *string `pulumi:"serverName"`
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs and VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsTlsConfigPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput
}

// TLSConfig configuration to use when scraping the endpoint
type VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs struct {
	Ca VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrInput `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile pulumi.StringPtrInput                                       `pulumi:"caFile"`
	Cert   VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrInput `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile pulumi.StringPtrInput `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   pulumi.StringPtrInput                                            `pulumi:"keyFile"`
	KeySecret VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrInput `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput).ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs, VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtr and VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsTlsConfigPatchPtrType VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs

func VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtr(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsTlsConfigPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsTlsConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsTlsConfigPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput)
}

// TLSConfig configuration to use when scraping the endpoint
type VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) Ca() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch {
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) Cert() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch {
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string { return v.CertFile }).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string { return v.KeyFile }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch {
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsTlsConfigPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) VMStaticScrapeSpecTargetEndpointsTlsConfigPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsTlsConfigPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) Ca() VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatch {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) Cert() VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatch {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatch {
		if v == nil {
			return nil
		}
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// VMScrapeParams defines VictoriaMetrics specific scrape parameters
type VMStaticScrapeSpecTargetEndpointsVmScrapeParams struct {
	// DisableCompression
	Disable_compression *bool `pulumi:"disable_compression"`
	// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
	// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
	// could be re-used.
	// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
	Disable_keep_alive *bool `pulumi:"disable_keep_alive"`
	// Headers allows sending custom headers to scrape targets
	// must be in of semicolon separated header with it's value
	// eg:
	// headerName: headerValue
	// vmagent supports since 1.79.0 version
	Headers               []string                                                          `pulumi:"headers"`
	No_stale_markers      *bool                                                             `pulumi:"no_stale_markers"`
	Proxy_client_config   *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig `pulumi:"proxy_client_config"`
	Scrape_align_interval *string                                                           `pulumi:"scrape_align_interval"`
	Scrape_offset         *string                                                           `pulumi:"scrape_offset"`
	Stream_parse          *bool                                                             `pulumi:"stream_parse"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput
}

// VMScrapeParams defines VictoriaMetrics specific scrape parameters
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs struct {
	// DisableCompression
	Disable_compression pulumi.BoolPtrInput `pulumi:"disable_compression"`
	// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
	// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
	// could be re-used.
	// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
	Disable_keep_alive pulumi.BoolPtrInput `pulumi:"disable_keep_alive"`
	// Headers allows sending custom headers to scrape targets
	// must be in of semicolon separated header with it's value
	// eg:
	// headerName: headerValue
	// vmagent supports since 1.79.0 version
	Headers               pulumi.StringArrayInput                                                  `pulumi:"headers"`
	No_stale_markers      pulumi.BoolPtrInput                                                      `pulumi:"no_stale_markers"`
	Proxy_client_config   VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrInput `pulumi:"proxy_client_config"`
	Scrape_align_interval pulumi.StringPtrInput                                                    `pulumi:"scrape_align_interval"`
	Scrape_offset         pulumi.StringPtrInput                                                    `pulumi:"scrape_offset"`
	Stream_parse          pulumi.BoolPtrInput                                                      `pulumi:"stream_parse"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParams)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParams)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput)
}

// VMScrapeParams defines VictoriaMetrics specific scrape parameters
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParams)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *VMStaticScrapeSpecTargetEndpointsVmScrapeParams {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput)
}

// DisableCompression
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) Disable_compression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool { return v.Disable_compression }).(pulumi.BoolPtrOutput)
}

// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
// could be re-used.
// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) Disable_keep_alive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool { return v.Disable_keep_alive }).(pulumi.BoolPtrOutput)
}

// Headers allows sending custom headers to scrape targets
// must be in of semicolon separated header with it's value
// eg:
// headerName: headerValue
// vmagent supports since 1.79.0 version
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) No_stale_markers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool { return v.No_stale_markers }).(pulumi.BoolPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) Proxy_client_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig {
		return v.Proxy_client_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) Scrape_align_interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *string { return v.Scrape_align_interval }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) Scrape_offset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *string { return v.Scrape_offset }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput) Stream_parse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool { return v.Stream_parse }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParams)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) VMStaticScrapeSpecTargetEndpointsVmScrapeParams {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParams
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput)
}

// DisableCompression
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Disable_compression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool {
		if v == nil {
			return nil
		}
		return v.Disable_compression
	}).(pulumi.BoolPtrOutput)
}

// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
// could be re-used.
// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Disable_keep_alive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool {
		if v == nil {
			return nil
		}
		return v.Disable_keep_alive
	}).(pulumi.BoolPtrOutput)
}

// Headers allows sending custom headers to scrape targets
// must be in of semicolon separated header with it's value
// eg:
// headerName: headerValue
// vmagent supports since 1.79.0 version
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) No_stale_markers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool {
		if v == nil {
			return nil
		}
		return v.No_stale_markers
	}).(pulumi.BoolPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Proxy_client_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig {
		if v == nil {
			return nil
		}
		return v.Proxy_client_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Scrape_align_interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *string {
		if v == nil {
			return nil
		}
		return v.Scrape_align_interval
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Scrape_offset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *string {
		if v == nil {
			return nil
		}
		return v.Scrape_offset
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput) Stream_parse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParams) *bool {
		if v == nil {
			return nil
		}
		return v.Stream_parse
	}).(pulumi.BoolPtrOutput)
}

// VMScrapeParams defines VictoriaMetrics specific scrape parameters
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch struct {
	// DisableCompression
	Disable_compression *bool `pulumi:"disable_compression"`
	// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
	// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
	// could be re-used.
	// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
	Disable_keep_alive *bool `pulumi:"disable_keep_alive"`
	// Headers allows sending custom headers to scrape targets
	// must be in of semicolon separated header with it's value
	// eg:
	// headerName: headerValue
	// vmagent supports since 1.79.0 version
	Headers               []string                                                               `pulumi:"headers"`
	No_stale_markers      *bool                                                                  `pulumi:"no_stale_markers"`
	Proxy_client_config   *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch `pulumi:"proxy_client_config"`
	Scrape_align_interval *string                                                                `pulumi:"scrape_align_interval"`
	Scrape_offset         *string                                                                `pulumi:"scrape_offset"`
	Stream_parse          *bool                                                                  `pulumi:"stream_parse"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput
}

// VMScrapeParams defines VictoriaMetrics specific scrape parameters
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs struct {
	// DisableCompression
	Disable_compression pulumi.BoolPtrInput `pulumi:"disable_compression"`
	// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
	// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
	// could be re-used.
	// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
	Disable_keep_alive pulumi.BoolPtrInput `pulumi:"disable_keep_alive"`
	// Headers allows sending custom headers to scrape targets
	// must be in of semicolon separated header with it's value
	// eg:
	// headerName: headerValue
	// vmagent supports since 1.79.0 version
	Headers               pulumi.StringArrayInput                                                       `pulumi:"headers"`
	No_stale_markers      pulumi.BoolPtrInput                                                           `pulumi:"no_stale_markers"`
	Proxy_client_config   VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrInput `pulumi:"proxy_client_config"`
	Scrape_align_interval pulumi.StringPtrInput                                                         `pulumi:"scrape_align_interval"`
	Scrape_offset         pulumi.StringPtrInput                                                         `pulumi:"scrape_offset"`
	Stream_parse          pulumi.BoolPtrInput                                                           `pulumi:"stream_parse"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput)
}

// VMScrapeParams defines VictoriaMetrics specific scrape parameters
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput)
}

// DisableCompression
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) Disable_compression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool { return v.Disable_compression }).(pulumi.BoolPtrOutput)
}

// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
// could be re-used.
// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) Disable_keep_alive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool { return v.Disable_keep_alive }).(pulumi.BoolPtrOutput)
}

// Headers allows sending custom headers to scrape targets
// must be in of semicolon separated header with it's value
// eg:
// headerName: headerValue
// vmagent supports since 1.79.0 version
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) No_stale_markers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool { return v.No_stale_markers }).(pulumi.BoolPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) Proxy_client_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch {
		return v.Proxy_client_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) Scrape_align_interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *string { return v.Scrape_align_interval }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) Scrape_offset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *string { return v.Scrape_offset }).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput) Stream_parse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool { return v.Stream_parse }).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput)
}

// DisableCompression
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Disable_compression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Disable_compression
	}).(pulumi.BoolPtrOutput)
}

// disable_keepalive allows disabling HTTP keep-alive when scraping targets.
// By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
// could be re-used.
// See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Disable_keep_alive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Disable_keep_alive
	}).(pulumi.BoolPtrOutput)
}

// Headers allows sending custom headers to scrape targets
// must be in of semicolon separated header with it's value
// eg:
// headerName: headerValue
// vmagent supports since 1.79.0 version
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) No_stale_markers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.No_stale_markers
	}).(pulumi.BoolPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Proxy_client_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch {
		if v == nil {
			return nil
		}
		return v.Proxy_client_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Scrape_align_interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Scrape_align_interval
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Scrape_offset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Scrape_offset
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput) Stream_parse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Stream_parse
	}).(pulumi.BoolPtrOutput)
}

// ProxyClientConfig configures proxy auth settings for scraping
// See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig struct {
	Basic_auth        *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth   `pulumi:"basic_auth"`
	Bearer_token      *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken `pulumi:"bearer_token"`
	Bearer_token_file *string                                                                      `pulumi:"bearer_token_file"`
	Tls_config        *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig   `pulumi:"tls_config"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput
}

// ProxyClientConfig configures proxy auth settings for scraping
// See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs struct {
	Basic_auth        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrInput   `pulumi:"basic_auth"`
	Bearer_token      VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrInput `pulumi:"bearer_token"`
	Bearer_token_file pulumi.StringPtrInput                                                               `pulumi:"bearer_token_file"`
	Tls_config        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrInput   `pulumi:"tls_config"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput)
}

// ProxyClientConfig configures proxy auth settings for scraping
// See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) Basic_auth() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth {
		return v.Basic_auth
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) Bearer_token() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken {
		return v.Bearer_token
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) Bearer_token_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *string {
		return v.Bearer_token_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput) Tls_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig {
		return v.Tls_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) Basic_auth() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth {
		if v == nil {
			return nil
		}
		return v.Basic_auth
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) Bearer_token() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken {
		if v == nil {
			return nil
		}
		return v.Bearer_token
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) Bearer_token_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *string {
		if v == nil {
			return nil
		}
		return v.Bearer_token_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput) Tls_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig {
		if v == nil {
			return nil
		}
		return v.Tls_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth struct {
	Password *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file *string                                                                            `pulumi:"password_file"`
	Username      *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername `pulumi:"username"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs struct {
	Password VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrInput `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file pulumi.StringPtrInput                                                                     `pulumi:"password_file"`
	Username      VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrInput `pulumi:"username"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) Password() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword {
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) *string {
		return v.Password_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput) Username() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername {
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput) Password() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword {
		if v == nil {
			return nil
		}
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) *string {
		if v == nil {
			return nil
		}
		return v.Password_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput) Username() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuth) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername {
		if v == nil {
			return nil
		}
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPassword) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput)
}

// Password defines reference for secret with password value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch struct {
	Password *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file *string                                                                                 `pulumi:"password_file"`
	Username      *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch `pulumi:"username"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs struct {
	Password VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrInput `pulumi:"password"`
	// PasswordFile defines path to password file at disk
	// must be pre-mounted
	Password_file pulumi.StringPtrInput                                                                          `pulumi:"password_file"`
	Username      VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrInput `pulumi:"username"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput)
}

// BasicAuth allow an endpoint to authenticate over basic authentication
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) Password() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch {
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) *string {
		return v.Password_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput) Username() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch {
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput) Password() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatch {
		if v == nil {
			return nil
		}
		return v.Password
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput)
}

// PasswordFile defines path to password file at disk
// must be pre-mounted
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput) Password_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.Password_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput) Username() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch {
		if v == nil {
			return nil
		}
		return v.Username
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsername) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput)
}

// Username defines reference for secret with username value
// The secret needs to be in the same namespace as scrape object
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// SecretKeySelector selects a key of a Secret.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput
}

// SecretKeySelector selects a key of a Secret.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput)
}

// SecretKeySelector selects a key of a Secret.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerToken) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// SecretKeySelector selects a key of a Secret.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput
}

// SecretKeySelector selects a key of a Secret.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput)
}

// SecretKeySelector selects a key of a Secret.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ProxyClientConfig configures proxy auth settings for scraping
// See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch struct {
	Basic_auth        *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch   `pulumi:"basic_auth"`
	Bearer_token      *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch `pulumi:"bearer_token"`
	Bearer_token_file *string                                                                           `pulumi:"bearer_token_file"`
	Tls_config        *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch   `pulumi:"tls_config"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput
}

// ProxyClientConfig configures proxy auth settings for scraping
// See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs struct {
	Basic_auth        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrInput   `pulumi:"basic_auth"`
	Bearer_token      VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrInput `pulumi:"bearer_token"`
	Bearer_token_file pulumi.StringPtrInput                                                                    `pulumi:"bearer_token_file"`
	Tls_config        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrInput   `pulumi:"tls_config"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput)
}

// ProxyClientConfig configures proxy auth settings for scraping
// See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) Basic_auth() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch {
		return v.Basic_auth
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) Bearer_token() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch {
		return v.Bearer_token
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) Bearer_token_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *string {
		return v.Bearer_token_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput) Tls_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch {
		return v.Tls_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) Basic_auth() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatch {
		if v == nil {
			return nil
		}
		return v.Basic_auth
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) Bearer_token() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatch {
		if v == nil {
			return nil
		}
		return v.Bearer_token
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) Bearer_token_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.Bearer_token_file
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput) Tls_config() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch {
		if v == nil {
			return nil
		}
		return v.Tls_config
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig struct {
	Ca *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile *string                                                                        `pulumi:"caFile"`
	Cert   *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile *string `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   *string                                                                             `pulumi:"keyFile"`
	KeySecret *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName *string `pulumi:"serverName"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs struct {
	Ca VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrInput `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile pulumi.StringPtrInput                                                                 `pulumi:"caFile"`
	Cert   VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrInput `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile pulumi.StringPtrInput `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   pulumi.StringPtrInput                                                                      `pulumi:"keyFile"`
	KeySecret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrInput `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) Ca() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa {
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) Cert() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert {
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *bool {
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret {
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) Ca() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) Cert() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret {
		if v == nil {
			return nil
		}
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCa) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap{ "key": VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigArgs{...} }
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCert) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap{ "key": VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigArgs{...} }
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput)
}

// The key to select.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch struct {
	ConfigMap *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch `pulumi:"configMap"`
	Secret    *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch    `pulumi:"secret"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs struct {
	ConfigMap VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrInput `pulumi:"configMap"`
	Secret    VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrInput    `pulumi:"secret"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch {
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch {
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput) ConfigMap() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput) Secret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput)
}

// Secret containing the client key file for the targets.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) *bool {
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch struct {
	Ca *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile *string                                                                             `pulumi:"caFile"`
	Cert   *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile *string `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   *string                                                                                  `pulumi:"keyFile"`
	KeySecret *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName *string `pulumi:"serverName"`
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchInput` via:
//
//	VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs{...}
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs struct {
	Ca VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrInput `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile pulumi.StringPtrInput                                                                      `pulumi:"caFile"`
	Cert   VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrInput `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile pulumi.StringPtrInput `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   pulumi.StringPtrInput                                                                           `pulumi:"keyFile"`
	KeySecret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrInput `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch)(nil)).Elem()
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput)
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput).ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrInput is an input type that accepts VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs, VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtr and VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrInput` via:
//
//	        VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput
	ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput
}

type vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrType VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs

func VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtr(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrInput {
	return (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrType)(v)
}

func (*vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch)(nil)).Elem()
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return i.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrType) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return o.ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch {
		return &v
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) Ca() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch {
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) Cert() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch {
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *bool {
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch {
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

type VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch)(nil)).Elem()
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) ToVMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput {
	return o
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) Elem() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch
		return ret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) Ca() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatch {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) Cert() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatch {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) KeySecret() VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatch {
		if v == nil {
			return nil
		}
		return v.KeySecret
	}).(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// ScrapeObjectStatus defines the observed state of ScrapeObjects
type VMStaticScrapeStatus struct {
	// LastSyncError contains error message for unsuccessful config generation
	LastSyncError *string `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status *string `pulumi:"status"`
}

// VMStaticScrapeStatusInput is an input type that accepts VMStaticScrapeStatusArgs and VMStaticScrapeStatusOutput values.
// You can construct a concrete instance of `VMStaticScrapeStatusInput` via:
//
//	VMStaticScrapeStatusArgs{...}
type VMStaticScrapeStatusInput interface {
	pulumi.Input

	ToVMStaticScrapeStatusOutput() VMStaticScrapeStatusOutput
	ToVMStaticScrapeStatusOutputWithContext(context.Context) VMStaticScrapeStatusOutput
}

// ScrapeObjectStatus defines the observed state of ScrapeObjects
type VMStaticScrapeStatusArgs struct {
	// LastSyncError contains error message for unsuccessful config generation
	LastSyncError pulumi.StringPtrInput `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (VMStaticScrapeStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeStatus)(nil)).Elem()
}

func (i VMStaticScrapeStatusArgs) ToVMStaticScrapeStatusOutput() VMStaticScrapeStatusOutput {
	return i.ToVMStaticScrapeStatusOutputWithContext(context.Background())
}

func (i VMStaticScrapeStatusArgs) ToVMStaticScrapeStatusOutputWithContext(ctx context.Context) VMStaticScrapeStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeStatusOutput)
}

func (i VMStaticScrapeStatusArgs) ToVMStaticScrapeStatusPtrOutput() VMStaticScrapeStatusPtrOutput {
	return i.ToVMStaticScrapeStatusPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeStatusArgs) ToVMStaticScrapeStatusPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeStatusOutput).ToVMStaticScrapeStatusPtrOutputWithContext(ctx)
}

// VMStaticScrapeStatusPtrInput is an input type that accepts VMStaticScrapeStatusArgs, VMStaticScrapeStatusPtr and VMStaticScrapeStatusPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeStatusPtrInput` via:
//
//	        VMStaticScrapeStatusArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeStatusPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeStatusPtrOutput() VMStaticScrapeStatusPtrOutput
	ToVMStaticScrapeStatusPtrOutputWithContext(context.Context) VMStaticScrapeStatusPtrOutput
}

type vmstaticScrapeStatusPtrType VMStaticScrapeStatusArgs

func VMStaticScrapeStatusPtr(v *VMStaticScrapeStatusArgs) VMStaticScrapeStatusPtrInput {
	return (*vmstaticScrapeStatusPtrType)(v)
}

func (*vmstaticScrapeStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeStatus)(nil)).Elem()
}

func (i *vmstaticScrapeStatusPtrType) ToVMStaticScrapeStatusPtrOutput() VMStaticScrapeStatusPtrOutput {
	return i.ToVMStaticScrapeStatusPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeStatusPtrType) ToVMStaticScrapeStatusPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeStatusPtrOutput)
}

// ScrapeObjectStatus defines the observed state of ScrapeObjects
type VMStaticScrapeStatusOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeStatus)(nil)).Elem()
}

func (o VMStaticScrapeStatusOutput) ToVMStaticScrapeStatusOutput() VMStaticScrapeStatusOutput {
	return o
}

func (o VMStaticScrapeStatusOutput) ToVMStaticScrapeStatusOutputWithContext(ctx context.Context) VMStaticScrapeStatusOutput {
	return o
}

func (o VMStaticScrapeStatusOutput) ToVMStaticScrapeStatusPtrOutput() VMStaticScrapeStatusPtrOutput {
	return o.ToVMStaticScrapeStatusPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeStatusOutput) ToVMStaticScrapeStatusPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeStatus) *VMStaticScrapeStatus {
		return &v
	}).(VMStaticScrapeStatusPtrOutput)
}

// LastSyncError contains error message for unsuccessful config generation
func (o VMStaticScrapeStatusOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeStatus) *string { return v.LastSyncError }).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMStaticScrapeStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeStatusPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeStatus)(nil)).Elem()
}

func (o VMStaticScrapeStatusPtrOutput) ToVMStaticScrapeStatusPtrOutput() VMStaticScrapeStatusPtrOutput {
	return o
}

func (o VMStaticScrapeStatusPtrOutput) ToVMStaticScrapeStatusPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPtrOutput {
	return o
}

func (o VMStaticScrapeStatusPtrOutput) Elem() VMStaticScrapeStatusOutput {
	return o.ApplyT(func(v *VMStaticScrapeStatus) VMStaticScrapeStatus {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeStatus
		return ret
	}).(VMStaticScrapeStatusOutput)
}

// LastSyncError contains error message for unsuccessful config generation
func (o VMStaticScrapeStatusPtrOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastSyncError
	}).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMStaticScrapeStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// ScrapeObjectStatus defines the observed state of ScrapeObjects
type VMStaticScrapeStatusPatch struct {
	// LastSyncError contains error message for unsuccessful config generation
	LastSyncError *string `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status *string `pulumi:"status"`
}

// VMStaticScrapeStatusPatchInput is an input type that accepts VMStaticScrapeStatusPatchArgs and VMStaticScrapeStatusPatchOutput values.
// You can construct a concrete instance of `VMStaticScrapeStatusPatchInput` via:
//
//	VMStaticScrapeStatusPatchArgs{...}
type VMStaticScrapeStatusPatchInput interface {
	pulumi.Input

	ToVMStaticScrapeStatusPatchOutput() VMStaticScrapeStatusPatchOutput
	ToVMStaticScrapeStatusPatchOutputWithContext(context.Context) VMStaticScrapeStatusPatchOutput
}

// ScrapeObjectStatus defines the observed state of ScrapeObjects
type VMStaticScrapeStatusPatchArgs struct {
	// LastSyncError contains error message for unsuccessful config generation
	LastSyncError pulumi.StringPtrInput `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (VMStaticScrapeStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeStatusPatch)(nil)).Elem()
}

func (i VMStaticScrapeStatusPatchArgs) ToVMStaticScrapeStatusPatchOutput() VMStaticScrapeStatusPatchOutput {
	return i.ToVMStaticScrapeStatusPatchOutputWithContext(context.Background())
}

func (i VMStaticScrapeStatusPatchArgs) ToVMStaticScrapeStatusPatchOutputWithContext(ctx context.Context) VMStaticScrapeStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeStatusPatchOutput)
}

func (i VMStaticScrapeStatusPatchArgs) ToVMStaticScrapeStatusPatchPtrOutput() VMStaticScrapeStatusPatchPtrOutput {
	return i.ToVMStaticScrapeStatusPatchPtrOutputWithContext(context.Background())
}

func (i VMStaticScrapeStatusPatchArgs) ToVMStaticScrapeStatusPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeStatusPatchOutput).ToVMStaticScrapeStatusPatchPtrOutputWithContext(ctx)
}

// VMStaticScrapeStatusPatchPtrInput is an input type that accepts VMStaticScrapeStatusPatchArgs, VMStaticScrapeStatusPatchPtr and VMStaticScrapeStatusPatchPtrOutput values.
// You can construct a concrete instance of `VMStaticScrapeStatusPatchPtrInput` via:
//
//	        VMStaticScrapeStatusPatchArgs{...}
//
//	or:
//
//	        nil
type VMStaticScrapeStatusPatchPtrInput interface {
	pulumi.Input

	ToVMStaticScrapeStatusPatchPtrOutput() VMStaticScrapeStatusPatchPtrOutput
	ToVMStaticScrapeStatusPatchPtrOutputWithContext(context.Context) VMStaticScrapeStatusPatchPtrOutput
}

type vmstaticScrapeStatusPatchPtrType VMStaticScrapeStatusPatchArgs

func VMStaticScrapeStatusPatchPtr(v *VMStaticScrapeStatusPatchArgs) VMStaticScrapeStatusPatchPtrInput {
	return (*vmstaticScrapeStatusPatchPtrType)(v)
}

func (*vmstaticScrapeStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeStatusPatch)(nil)).Elem()
}

func (i *vmstaticScrapeStatusPatchPtrType) ToVMStaticScrapeStatusPatchPtrOutput() VMStaticScrapeStatusPatchPtrOutput {
	return i.ToVMStaticScrapeStatusPatchPtrOutputWithContext(context.Background())
}

func (i *vmstaticScrapeStatusPatchPtrType) ToVMStaticScrapeStatusPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeStatusPatchPtrOutput)
}

// ScrapeObjectStatus defines the observed state of ScrapeObjects
type VMStaticScrapeStatusPatchOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMStaticScrapeStatusPatch)(nil)).Elem()
}

func (o VMStaticScrapeStatusPatchOutput) ToVMStaticScrapeStatusPatchOutput() VMStaticScrapeStatusPatchOutput {
	return o
}

func (o VMStaticScrapeStatusPatchOutput) ToVMStaticScrapeStatusPatchOutputWithContext(ctx context.Context) VMStaticScrapeStatusPatchOutput {
	return o
}

func (o VMStaticScrapeStatusPatchOutput) ToVMStaticScrapeStatusPatchPtrOutput() VMStaticScrapeStatusPatchPtrOutput {
	return o.ToVMStaticScrapeStatusPatchPtrOutputWithContext(context.Background())
}

func (o VMStaticScrapeStatusPatchOutput) ToVMStaticScrapeStatusPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMStaticScrapeStatusPatch) *VMStaticScrapeStatusPatch {
		return &v
	}).(VMStaticScrapeStatusPatchPtrOutput)
}

// LastSyncError contains error message for unsuccessful config generation
func (o VMStaticScrapeStatusPatchOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeStatusPatch) *string { return v.LastSyncError }).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMStaticScrapeStatusPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMStaticScrapeStatusPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VMStaticScrapeStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrapeStatusPatch)(nil)).Elem()
}

func (o VMStaticScrapeStatusPatchPtrOutput) ToVMStaticScrapeStatusPatchPtrOutput() VMStaticScrapeStatusPatchPtrOutput {
	return o
}

func (o VMStaticScrapeStatusPatchPtrOutput) ToVMStaticScrapeStatusPatchPtrOutputWithContext(ctx context.Context) VMStaticScrapeStatusPatchPtrOutput {
	return o
}

func (o VMStaticScrapeStatusPatchPtrOutput) Elem() VMStaticScrapeStatusPatchOutput {
	return o.ApplyT(func(v *VMStaticScrapeStatusPatch) VMStaticScrapeStatusPatch {
		if v != nil {
			return *v
		}
		var ret VMStaticScrapeStatusPatch
		return ret
	}).(VMStaticScrapeStatusPatchOutput)
}

// LastSyncError contains error message for unsuccessful config generation
func (o VMStaticScrapeStatusPatchPtrOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastSyncError
	}).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMStaticScrapeStatusPatchPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMStaticScrapeStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// VMUser is the Schema for the vmusers API
type VMUserType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *VMUserSpec        `pulumi:"spec"`
	Status   *VMUserStatus      `pulumi:"status"`
}

// VMUserTypeInput is an input type that accepts VMUserTypeArgs and VMUserTypeOutput values.
// You can construct a concrete instance of `VMUserTypeInput` via:
//
//	VMUserTypeArgs{...}
type VMUserTypeInput interface {
	pulumi.Input

	ToVMUserTypeOutput() VMUserTypeOutput
	ToVMUserTypeOutputWithContext(context.Context) VMUserTypeOutput
}

// VMUser is the Schema for the vmusers API
type VMUserTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     VMUserSpecPtrInput        `pulumi:"spec"`
	Status   VMUserStatusPtrInput      `pulumi:"status"`
}

func (VMUserTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserType)(nil)).Elem()
}

func (i VMUserTypeArgs) ToVMUserTypeOutput() VMUserTypeOutput {
	return i.ToVMUserTypeOutputWithContext(context.Background())
}

func (i VMUserTypeArgs) ToVMUserTypeOutputWithContext(ctx context.Context) VMUserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserTypeOutput)
}

// VMUserTypeArrayInput is an input type that accepts VMUserTypeArray and VMUserTypeArrayOutput values.
// You can construct a concrete instance of `VMUserTypeArrayInput` via:
//
//	VMUserTypeArray{ VMUserTypeArgs{...} }
type VMUserTypeArrayInput interface {
	pulumi.Input

	ToVMUserTypeArrayOutput() VMUserTypeArrayOutput
	ToVMUserTypeArrayOutputWithContext(context.Context) VMUserTypeArrayOutput
}

type VMUserTypeArray []VMUserTypeInput

func (VMUserTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMUserType)(nil)).Elem()
}

func (i VMUserTypeArray) ToVMUserTypeArrayOutput() VMUserTypeArrayOutput {
	return i.ToVMUserTypeArrayOutputWithContext(context.Background())
}

func (i VMUserTypeArray) ToVMUserTypeArrayOutputWithContext(ctx context.Context) VMUserTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserTypeArrayOutput)
}

// VMUser is the Schema for the vmusers API
type VMUserTypeOutput struct{ *pulumi.OutputState }

func (VMUserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserType)(nil)).Elem()
}

func (o VMUserTypeOutput) ToVMUserTypeOutput() VMUserTypeOutput {
	return o
}

func (o VMUserTypeOutput) ToVMUserTypeOutputWithContext(ctx context.Context) VMUserTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMUserTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMUserTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VMUserTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v VMUserType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o VMUserTypeOutput) Spec() VMUserSpecPtrOutput {
	return o.ApplyT(func(v VMUserType) *VMUserSpec { return v.Spec }).(VMUserSpecPtrOutput)
}

func (o VMUserTypeOutput) Status() VMUserStatusPtrOutput {
	return o.ApplyT(func(v VMUserType) *VMUserStatus { return v.Status }).(VMUserStatusPtrOutput)
}

type VMUserTypeArrayOutput struct{ *pulumi.OutputState }

func (VMUserTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMUserType)(nil)).Elem()
}

func (o VMUserTypeArrayOutput) ToVMUserTypeArrayOutput() VMUserTypeArrayOutput {
	return o
}

func (o VMUserTypeArrayOutput) ToVMUserTypeArrayOutputWithContext(ctx context.Context) VMUserTypeArrayOutput {
	return o
}

func (o VMUserTypeArrayOutput) Index(i pulumi.IntInput) VMUserTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMUserType {
		return vs[0].([]VMUserType)[vs[1].(int)]
	}).(VMUserTypeOutput)
}

// VMUserList is a list of VMUser
type VMUserListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of vmusers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []VMUserType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// VMUserListTypeInput is an input type that accepts VMUserListTypeArgs and VMUserListTypeOutput values.
// You can construct a concrete instance of `VMUserListTypeInput` via:
//
//	VMUserListTypeArgs{...}
type VMUserListTypeInput interface {
	pulumi.Input

	ToVMUserListTypeOutput() VMUserListTypeOutput
	ToVMUserListTypeOutputWithContext(context.Context) VMUserListTypeOutput
}

// VMUserList is a list of VMUser
type VMUserListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of vmusers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VMUserTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (VMUserListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserListType)(nil)).Elem()
}

func (i VMUserListTypeArgs) ToVMUserListTypeOutput() VMUserListTypeOutput {
	return i.ToVMUserListTypeOutputWithContext(context.Background())
}

func (i VMUserListTypeArgs) ToVMUserListTypeOutputWithContext(ctx context.Context) VMUserListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserListTypeOutput)
}

// VMUserList is a list of VMUser
type VMUserListTypeOutput struct{ *pulumi.OutputState }

func (VMUserListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserListType)(nil)).Elem()
}

func (o VMUserListTypeOutput) ToVMUserListTypeOutput() VMUserListTypeOutput {
	return o
}

func (o VMUserListTypeOutput) ToVMUserListTypeOutputWithContext(ctx context.Context) VMUserListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMUserListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of vmusers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o VMUserListTypeOutput) Items() VMUserTypeArrayOutput {
	return o.ApplyT(func(v VMUserListType) []VMUserType { return v.Items }).(VMUserTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMUserListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMUserListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v VMUserListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// VMUser is the Schema for the vmusers API
type VMUserPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *VMUserSpecPatch        `pulumi:"spec"`
	Status   *VMUserStatusPatch      `pulumi:"status"`
}

// VMUserPatchTypeInput is an input type that accepts VMUserPatchTypeArgs and VMUserPatchTypeOutput values.
// You can construct a concrete instance of `VMUserPatchTypeInput` via:
//
//	VMUserPatchTypeArgs{...}
type VMUserPatchTypeInput interface {
	pulumi.Input

	ToVMUserPatchTypeOutput() VMUserPatchTypeOutput
	ToVMUserPatchTypeOutputWithContext(context.Context) VMUserPatchTypeOutput
}

// VMUser is the Schema for the vmusers API
type VMUserPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     VMUserSpecPatchPtrInput        `pulumi:"spec"`
	Status   VMUserStatusPatchPtrInput      `pulumi:"status"`
}

func (VMUserPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserPatchType)(nil)).Elem()
}

func (i VMUserPatchTypeArgs) ToVMUserPatchTypeOutput() VMUserPatchTypeOutput {
	return i.ToVMUserPatchTypeOutputWithContext(context.Background())
}

func (i VMUserPatchTypeArgs) ToVMUserPatchTypeOutputWithContext(ctx context.Context) VMUserPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserPatchTypeOutput)
}

// VMUser is the Schema for the vmusers API
type VMUserPatchTypeOutput struct{ *pulumi.OutputState }

func (VMUserPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserPatchType)(nil)).Elem()
}

func (o VMUserPatchTypeOutput) ToVMUserPatchTypeOutput() VMUserPatchTypeOutput {
	return o
}

func (o VMUserPatchTypeOutput) ToVMUserPatchTypeOutputWithContext(ctx context.Context) VMUserPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMUserPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMUserPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VMUserPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v VMUserPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o VMUserPatchTypeOutput) Spec() VMUserSpecPatchPtrOutput {
	return o.ApplyT(func(v VMUserPatchType) *VMUserSpecPatch { return v.Spec }).(VMUserSpecPatchPtrOutput)
}

func (o VMUserPatchTypeOutput) Status() VMUserStatusPatchPtrOutput {
	return o.ApplyT(func(v VMUserPatchType) *VMUserStatusPatch { return v.Status }).(VMUserStatusPatchPtrOutput)
}

// VMUserSpec defines the desired state of VMUser
type VMUserSpec struct {
	// BearerToken Authorization header value for accessing protected endpoint.
	BearerToken *string `pulumi:"bearerToken"`
	// DefaultURLs backend url for non-matching paths filter
	// usually used for default backend with error message
	Default_url []string `pulumi:"default_url"`
	// DisableSecretCreation skips related secret creation for vmuser
	Disable_secret_creation *bool `pulumi:"disable_secret_creation"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips *bool `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts *int `pulumi:"drop_src_path_prefix_parts"`
	// GeneratePassword instructs operator to generate password for user
	// if spec.password if empty.
	GeneratePassword *bool `pulumi:"generatePassword"`
	// Headers represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers    []string             `pulumi:"headers"`
	Ip_filters *VMUserSpecIpFilters `pulumi:"ip_filters"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy *string `pulumi:"load_balancing_policy"`
	// MaxConcurrentRequests defines max concurrent requests per user
	// 300 is default value for vmauth
	Max_concurrent_requests *int `pulumi:"max_concurrent_requests"`
	// MetricLabels - additional labels for metrics exported by vmauth for given user.
	Metric_labels map[string]string `pulumi:"metric_labels"`
	// Name of the VMUser object.
	Name *string `pulumi:"name"`
	// Password basic auth password for accessing protected endpoint.
	Password    *string                `pulumi:"password"`
	PasswordRef *VMUserSpecPasswordRef `pulumi:"passwordRef"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers []string `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// e.g. [429,503]
	Retry_status_codes []int `pulumi:"retry_status_codes"`
	// TargetRefs - reference to endpoints, which user may access.
	TargetRefs []VMUserSpecTargetRefs `pulumi:"targetRefs"`
	TlsConfig  *VMUserSpecTlsConfig   `pulumi:"tlsConfig"`
	TokenRef   *VMUserSpecTokenRef    `pulumi:"tokenRef"`
	// UserName basic auth user name for accessing protected endpoint,
	// will be replaced with metadata.name of VMUser if omitted.
	Username *string `pulumi:"username"`
}

// VMUserSpecInput is an input type that accepts VMUserSpecArgs and VMUserSpecOutput values.
// You can construct a concrete instance of `VMUserSpecInput` via:
//
//	VMUserSpecArgs{...}
type VMUserSpecInput interface {
	pulumi.Input

	ToVMUserSpecOutput() VMUserSpecOutput
	ToVMUserSpecOutputWithContext(context.Context) VMUserSpecOutput
}

// VMUserSpec defines the desired state of VMUser
type VMUserSpecArgs struct {
	// BearerToken Authorization header value for accessing protected endpoint.
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// DefaultURLs backend url for non-matching paths filter
	// usually used for default backend with error message
	Default_url pulumi.StringArrayInput `pulumi:"default_url"`
	// DisableSecretCreation skips related secret creation for vmuser
	Disable_secret_creation pulumi.BoolPtrInput `pulumi:"disable_secret_creation"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips pulumi.BoolPtrInput `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts pulumi.IntPtrInput `pulumi:"drop_src_path_prefix_parts"`
	// GeneratePassword instructs operator to generate password for user
	// if spec.password if empty.
	GeneratePassword pulumi.BoolPtrInput `pulumi:"generatePassword"`
	// Headers represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers    pulumi.StringArrayInput     `pulumi:"headers"`
	Ip_filters VMUserSpecIpFiltersPtrInput `pulumi:"ip_filters"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy pulumi.StringPtrInput `pulumi:"load_balancing_policy"`
	// MaxConcurrentRequests defines max concurrent requests per user
	// 300 is default value for vmauth
	Max_concurrent_requests pulumi.IntPtrInput `pulumi:"max_concurrent_requests"`
	// MetricLabels - additional labels for metrics exported by vmauth for given user.
	Metric_labels pulumi.StringMapInput `pulumi:"metric_labels"`
	// Name of the VMUser object.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password basic auth password for accessing protected endpoint.
	Password    pulumi.StringPtrInput         `pulumi:"password"`
	PasswordRef VMUserSpecPasswordRefPtrInput `pulumi:"passwordRef"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers pulumi.StringArrayInput `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// e.g. [429,503]
	Retry_status_codes pulumi.IntArrayInput `pulumi:"retry_status_codes"`
	// TargetRefs - reference to endpoints, which user may access.
	TargetRefs VMUserSpecTargetRefsArrayInput `pulumi:"targetRefs"`
	TlsConfig  VMUserSpecTlsConfigPtrInput    `pulumi:"tlsConfig"`
	TokenRef   VMUserSpecTokenRefPtrInput     `pulumi:"tokenRef"`
	// UserName basic auth user name for accessing protected endpoint,
	// will be replaced with metadata.name of VMUser if omitted.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VMUserSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpec)(nil)).Elem()
}

func (i VMUserSpecArgs) ToVMUserSpecOutput() VMUserSpecOutput {
	return i.ToVMUserSpecOutputWithContext(context.Background())
}

func (i VMUserSpecArgs) ToVMUserSpecOutputWithContext(ctx context.Context) VMUserSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecOutput)
}

func (i VMUserSpecArgs) ToVMUserSpecPtrOutput() VMUserSpecPtrOutput {
	return i.ToVMUserSpecPtrOutputWithContext(context.Background())
}

func (i VMUserSpecArgs) ToVMUserSpecPtrOutputWithContext(ctx context.Context) VMUserSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecOutput).ToVMUserSpecPtrOutputWithContext(ctx)
}

// VMUserSpecPtrInput is an input type that accepts VMUserSpecArgs, VMUserSpecPtr and VMUserSpecPtrOutput values.
// You can construct a concrete instance of `VMUserSpecPtrInput` via:
//
//	        VMUserSpecArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecPtrInput interface {
	pulumi.Input

	ToVMUserSpecPtrOutput() VMUserSpecPtrOutput
	ToVMUserSpecPtrOutputWithContext(context.Context) VMUserSpecPtrOutput
}

type vmuserSpecPtrType VMUserSpecArgs

func VMUserSpecPtr(v *VMUserSpecArgs) VMUserSpecPtrInput {
	return (*vmuserSpecPtrType)(v)
}

func (*vmuserSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpec)(nil)).Elem()
}

func (i *vmuserSpecPtrType) ToVMUserSpecPtrOutput() VMUserSpecPtrOutput {
	return i.ToVMUserSpecPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecPtrType) ToVMUserSpecPtrOutputWithContext(ctx context.Context) VMUserSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPtrOutput)
}

// VMUserSpec defines the desired state of VMUser
type VMUserSpecOutput struct{ *pulumi.OutputState }

func (VMUserSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpec)(nil)).Elem()
}

func (o VMUserSpecOutput) ToVMUserSpecOutput() VMUserSpecOutput {
	return o
}

func (o VMUserSpecOutput) ToVMUserSpecOutputWithContext(ctx context.Context) VMUserSpecOutput {
	return o
}

func (o VMUserSpecOutput) ToVMUserSpecPtrOutput() VMUserSpecPtrOutput {
	return o.ToVMUserSpecPtrOutputWithContext(context.Background())
}

func (o VMUserSpecOutput) ToVMUserSpecPtrOutputWithContext(ctx context.Context) VMUserSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpec) *VMUserSpec {
		return &v
	}).(VMUserSpecPtrOutput)
}

// BearerToken Authorization header value for accessing protected endpoint.
func (o VMUserSpecOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// DefaultURLs backend url for non-matching paths filter
// usually used for default backend with error message
func (o VMUserSpecOutput) Default_url() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpec) []string { return v.Default_url }).(pulumi.StringArrayOutput)
}

// DisableSecretCreation skips related secret creation for vmuser
func (o VMUserSpecOutput) Disable_secret_creation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *bool { return v.Disable_secret_creation }).(pulumi.BoolPtrOutput)
}

// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
func (o VMUserSpecOutput) Discover_backend_ips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *bool { return v.Discover_backend_ips }).(pulumi.BoolPtrOutput)
}

// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
func (o VMUserSpecOutput) Drop_src_path_prefix_parts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *int { return v.Drop_src_path_prefix_parts }).(pulumi.IntPtrOutput)
}

// GeneratePassword instructs operator to generate password for user
// if spec.password if empty.
func (o VMUserSpecOutput) GeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *bool { return v.GeneratePassword }).(pulumi.BoolPtrOutput)
}

// Headers represent additional http headers, that vmauth uses
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.68.0 version of vmauth
func (o VMUserSpecOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpec) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecOutput) Ip_filters() VMUserSpecIpFiltersPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *VMUserSpecIpFilters { return v.Ip_filters }).(VMUserSpecIpFiltersPtrOutput)
}

// LoadBalancingPolicy defines load balancing policy to use for backend urls.
// Supported policies: least_loaded, first_available.
// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
func (o VMUserSpecOutput) Load_balancing_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *string { return v.Load_balancing_policy }).(pulumi.StringPtrOutput)
}

// MaxConcurrentRequests defines max concurrent requests per user
// 300 is default value for vmauth
func (o VMUserSpecOutput) Max_concurrent_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *int { return v.Max_concurrent_requests }).(pulumi.IntPtrOutput)
}

// MetricLabels - additional labels for metrics exported by vmauth for given user.
func (o VMUserSpecOutput) Metric_labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMUserSpec) map[string]string { return v.Metric_labels }).(pulumi.StringMapOutput)
}

// Name of the VMUser object.
func (o VMUserSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password basic auth password for accessing protected endpoint.
func (o VMUserSpecOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o VMUserSpecOutput) PasswordRef() VMUserSpecPasswordRefPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *VMUserSpecPasswordRef { return v.PasswordRef }).(VMUserSpecPasswordRefPtrOutput)
}

// ResponseHeaders represent additional http headers, that vmauth adds for request response
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.93.0 version of vmauth
func (o VMUserSpecOutput) Response_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpec) []string { return v.Response_headers }).(pulumi.StringArrayOutput)
}

// RetryStatusCodes defines http status codes in numeric format for request retries
// e.g. [429,503]
func (o VMUserSpecOutput) Retry_status_codes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VMUserSpec) []int { return v.Retry_status_codes }).(pulumi.IntArrayOutput)
}

// TargetRefs - reference to endpoints, which user may access.
func (o VMUserSpecOutput) TargetRefs() VMUserSpecTargetRefsArrayOutput {
	return o.ApplyT(func(v VMUserSpec) []VMUserSpecTargetRefs { return v.TargetRefs }).(VMUserSpecTargetRefsArrayOutput)
}

func (o VMUserSpecOutput) TlsConfig() VMUserSpecTlsConfigPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *VMUserSpecTlsConfig { return v.TlsConfig }).(VMUserSpecTlsConfigPtrOutput)
}

func (o VMUserSpecOutput) TokenRef() VMUserSpecTokenRefPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *VMUserSpecTokenRef { return v.TokenRef }).(VMUserSpecTokenRefPtrOutput)
}

// UserName basic auth user name for accessing protected endpoint,
// will be replaced with metadata.name of VMUser if omitted.
func (o VMUserSpecOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpec) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VMUserSpecPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpec)(nil)).Elem()
}

func (o VMUserSpecPtrOutput) ToVMUserSpecPtrOutput() VMUserSpecPtrOutput {
	return o
}

func (o VMUserSpecPtrOutput) ToVMUserSpecPtrOutputWithContext(ctx context.Context) VMUserSpecPtrOutput {
	return o
}

func (o VMUserSpecPtrOutput) Elem() VMUserSpecOutput {
	return o.ApplyT(func(v *VMUserSpec) VMUserSpec {
		if v != nil {
			return *v
		}
		var ret VMUserSpec
		return ret
	}).(VMUserSpecOutput)
}

// BearerToken Authorization header value for accessing protected endpoint.
func (o VMUserSpecPtrOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *string {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(pulumi.StringPtrOutput)
}

// DefaultURLs backend url for non-matching paths filter
// usually used for default backend with error message
func (o VMUserSpecPtrOutput) Default_url() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpec) []string {
		if v == nil {
			return nil
		}
		return v.Default_url
	}).(pulumi.StringArrayOutput)
}

// DisableSecretCreation skips related secret creation for vmuser
func (o VMUserSpecPtrOutput) Disable_secret_creation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Disable_secret_creation
	}).(pulumi.BoolPtrOutput)
}

// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
func (o VMUserSpecPtrOutput) Discover_backend_ips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Discover_backend_ips
	}).(pulumi.BoolPtrOutput)
}

// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
func (o VMUserSpecPtrOutput) Drop_src_path_prefix_parts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *int {
		if v == nil {
			return nil
		}
		return v.Drop_src_path_prefix_parts
	}).(pulumi.IntPtrOutput)
}

// GeneratePassword instructs operator to generate password for user
// if spec.password if empty.
func (o VMUserSpecPtrOutput) GeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *bool {
		if v == nil {
			return nil
		}
		return v.GeneratePassword
	}).(pulumi.BoolPtrOutput)
}

// Headers represent additional http headers, that vmauth uses
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.68.0 version of vmauth
func (o VMUserSpecPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpec) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

func (o VMUserSpecPtrOutput) Ip_filters() VMUserSpecIpFiltersPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *VMUserSpecIpFilters {
		if v == nil {
			return nil
		}
		return v.Ip_filters
	}).(VMUserSpecIpFiltersPtrOutput)
}

// LoadBalancingPolicy defines load balancing policy to use for backend urls.
// Supported policies: least_loaded, first_available.
// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
func (o VMUserSpecPtrOutput) Load_balancing_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *string {
		if v == nil {
			return nil
		}
		return v.Load_balancing_policy
	}).(pulumi.StringPtrOutput)
}

// MaxConcurrentRequests defines max concurrent requests per user
// 300 is default value for vmauth
func (o VMUserSpecPtrOutput) Max_concurrent_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *int {
		if v == nil {
			return nil
		}
		return v.Max_concurrent_requests
	}).(pulumi.IntPtrOutput)
}

// MetricLabels - additional labels for metrics exported by vmauth for given user.
func (o VMUserSpecPtrOutput) Metric_labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMUserSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metric_labels
	}).(pulumi.StringMapOutput)
}

// Name of the VMUser object.
func (o VMUserSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Password basic auth password for accessing protected endpoint.
func (o VMUserSpecPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o VMUserSpecPtrOutput) PasswordRef() VMUserSpecPasswordRefPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *VMUserSpecPasswordRef {
		if v == nil {
			return nil
		}
		return v.PasswordRef
	}).(VMUserSpecPasswordRefPtrOutput)
}

// ResponseHeaders represent additional http headers, that vmauth adds for request response
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.93.0 version of vmauth
func (o VMUserSpecPtrOutput) Response_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpec) []string {
		if v == nil {
			return nil
		}
		return v.Response_headers
	}).(pulumi.StringArrayOutput)
}

// RetryStatusCodes defines http status codes in numeric format for request retries
// e.g. [429,503]
func (o VMUserSpecPtrOutput) Retry_status_codes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VMUserSpec) []int {
		if v == nil {
			return nil
		}
		return v.Retry_status_codes
	}).(pulumi.IntArrayOutput)
}

// TargetRefs - reference to endpoints, which user may access.
func (o VMUserSpecPtrOutput) TargetRefs() VMUserSpecTargetRefsArrayOutput {
	return o.ApplyT(func(v *VMUserSpec) []VMUserSpecTargetRefs {
		if v == nil {
			return nil
		}
		return v.TargetRefs
	}).(VMUserSpecTargetRefsArrayOutput)
}

func (o VMUserSpecPtrOutput) TlsConfig() VMUserSpecTlsConfigPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *VMUserSpecTlsConfig {
		if v == nil {
			return nil
		}
		return v.TlsConfig
	}).(VMUserSpecTlsConfigPtrOutput)
}

func (o VMUserSpecPtrOutput) TokenRef() VMUserSpecTokenRefPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *VMUserSpecTokenRef {
		if v == nil {
			return nil
		}
		return v.TokenRef
	}).(VMUserSpecTokenRefPtrOutput)
}

// UserName basic auth user name for accessing protected endpoint,
// will be replaced with metadata.name of VMUser if omitted.
func (o VMUserSpecPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpec) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// IPFilters defines per target src ip filters
// supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
type VMUserSpecIpFilters struct {
	Allow_list []string `pulumi:"allow_list"`
	Deny_list  []string `pulumi:"deny_list"`
}

// VMUserSpecIpFiltersInput is an input type that accepts VMUserSpecIpFiltersArgs and VMUserSpecIpFiltersOutput values.
// You can construct a concrete instance of `VMUserSpecIpFiltersInput` via:
//
//	VMUserSpecIpFiltersArgs{...}
type VMUserSpecIpFiltersInput interface {
	pulumi.Input

	ToVMUserSpecIpFiltersOutput() VMUserSpecIpFiltersOutput
	ToVMUserSpecIpFiltersOutputWithContext(context.Context) VMUserSpecIpFiltersOutput
}

// IPFilters defines per target src ip filters
// supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
type VMUserSpecIpFiltersArgs struct {
	Allow_list pulumi.StringArrayInput `pulumi:"allow_list"`
	Deny_list  pulumi.StringArrayInput `pulumi:"deny_list"`
}

func (VMUserSpecIpFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecIpFilters)(nil)).Elem()
}

func (i VMUserSpecIpFiltersArgs) ToVMUserSpecIpFiltersOutput() VMUserSpecIpFiltersOutput {
	return i.ToVMUserSpecIpFiltersOutputWithContext(context.Background())
}

func (i VMUserSpecIpFiltersArgs) ToVMUserSpecIpFiltersOutputWithContext(ctx context.Context) VMUserSpecIpFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecIpFiltersOutput)
}

func (i VMUserSpecIpFiltersArgs) ToVMUserSpecIpFiltersPtrOutput() VMUserSpecIpFiltersPtrOutput {
	return i.ToVMUserSpecIpFiltersPtrOutputWithContext(context.Background())
}

func (i VMUserSpecIpFiltersArgs) ToVMUserSpecIpFiltersPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecIpFiltersOutput).ToVMUserSpecIpFiltersPtrOutputWithContext(ctx)
}

// VMUserSpecIpFiltersPtrInput is an input type that accepts VMUserSpecIpFiltersArgs, VMUserSpecIpFiltersPtr and VMUserSpecIpFiltersPtrOutput values.
// You can construct a concrete instance of `VMUserSpecIpFiltersPtrInput` via:
//
//	        VMUserSpecIpFiltersArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecIpFiltersPtrInput interface {
	pulumi.Input

	ToVMUserSpecIpFiltersPtrOutput() VMUserSpecIpFiltersPtrOutput
	ToVMUserSpecIpFiltersPtrOutputWithContext(context.Context) VMUserSpecIpFiltersPtrOutput
}

type vmuserSpecIpFiltersPtrType VMUserSpecIpFiltersArgs

func VMUserSpecIpFiltersPtr(v *VMUserSpecIpFiltersArgs) VMUserSpecIpFiltersPtrInput {
	return (*vmuserSpecIpFiltersPtrType)(v)
}

func (*vmuserSpecIpFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecIpFilters)(nil)).Elem()
}

func (i *vmuserSpecIpFiltersPtrType) ToVMUserSpecIpFiltersPtrOutput() VMUserSpecIpFiltersPtrOutput {
	return i.ToVMUserSpecIpFiltersPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecIpFiltersPtrType) ToVMUserSpecIpFiltersPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecIpFiltersPtrOutput)
}

// IPFilters defines per target src ip filters
// supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
type VMUserSpecIpFiltersOutput struct{ *pulumi.OutputState }

func (VMUserSpecIpFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecIpFilters)(nil)).Elem()
}

func (o VMUserSpecIpFiltersOutput) ToVMUserSpecIpFiltersOutput() VMUserSpecIpFiltersOutput {
	return o
}

func (o VMUserSpecIpFiltersOutput) ToVMUserSpecIpFiltersOutputWithContext(ctx context.Context) VMUserSpecIpFiltersOutput {
	return o
}

func (o VMUserSpecIpFiltersOutput) ToVMUserSpecIpFiltersPtrOutput() VMUserSpecIpFiltersPtrOutput {
	return o.ToVMUserSpecIpFiltersPtrOutputWithContext(context.Background())
}

func (o VMUserSpecIpFiltersOutput) ToVMUserSpecIpFiltersPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecIpFilters) *VMUserSpecIpFilters {
		return &v
	}).(VMUserSpecIpFiltersPtrOutput)
}

func (o VMUserSpecIpFiltersOutput) Allow_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecIpFilters) []string { return v.Allow_list }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecIpFiltersOutput) Deny_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecIpFilters) []string { return v.Deny_list }).(pulumi.StringArrayOutput)
}

type VMUserSpecIpFiltersPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecIpFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecIpFilters)(nil)).Elem()
}

func (o VMUserSpecIpFiltersPtrOutput) ToVMUserSpecIpFiltersPtrOutput() VMUserSpecIpFiltersPtrOutput {
	return o
}

func (o VMUserSpecIpFiltersPtrOutput) ToVMUserSpecIpFiltersPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPtrOutput {
	return o
}

func (o VMUserSpecIpFiltersPtrOutput) Elem() VMUserSpecIpFiltersOutput {
	return o.ApplyT(func(v *VMUserSpecIpFilters) VMUserSpecIpFilters {
		if v != nil {
			return *v
		}
		var ret VMUserSpecIpFilters
		return ret
	}).(VMUserSpecIpFiltersOutput)
}

func (o VMUserSpecIpFiltersPtrOutput) Allow_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecIpFilters) []string {
		if v == nil {
			return nil
		}
		return v.Allow_list
	}).(pulumi.StringArrayOutput)
}

func (o VMUserSpecIpFiltersPtrOutput) Deny_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecIpFilters) []string {
		if v == nil {
			return nil
		}
		return v.Deny_list
	}).(pulumi.StringArrayOutput)
}

// IPFilters defines per target src ip filters
// supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
type VMUserSpecIpFiltersPatch struct {
	Allow_list []string `pulumi:"allow_list"`
	Deny_list  []string `pulumi:"deny_list"`
}

// VMUserSpecIpFiltersPatchInput is an input type that accepts VMUserSpecIpFiltersPatchArgs and VMUserSpecIpFiltersPatchOutput values.
// You can construct a concrete instance of `VMUserSpecIpFiltersPatchInput` via:
//
//	VMUserSpecIpFiltersPatchArgs{...}
type VMUserSpecIpFiltersPatchInput interface {
	pulumi.Input

	ToVMUserSpecIpFiltersPatchOutput() VMUserSpecIpFiltersPatchOutput
	ToVMUserSpecIpFiltersPatchOutputWithContext(context.Context) VMUserSpecIpFiltersPatchOutput
}

// IPFilters defines per target src ip filters
// supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
type VMUserSpecIpFiltersPatchArgs struct {
	Allow_list pulumi.StringArrayInput `pulumi:"allow_list"`
	Deny_list  pulumi.StringArrayInput `pulumi:"deny_list"`
}

func (VMUserSpecIpFiltersPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecIpFiltersPatch)(nil)).Elem()
}

func (i VMUserSpecIpFiltersPatchArgs) ToVMUserSpecIpFiltersPatchOutput() VMUserSpecIpFiltersPatchOutput {
	return i.ToVMUserSpecIpFiltersPatchOutputWithContext(context.Background())
}

func (i VMUserSpecIpFiltersPatchArgs) ToVMUserSpecIpFiltersPatchOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecIpFiltersPatchOutput)
}

func (i VMUserSpecIpFiltersPatchArgs) ToVMUserSpecIpFiltersPatchPtrOutput() VMUserSpecIpFiltersPatchPtrOutput {
	return i.ToVMUserSpecIpFiltersPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecIpFiltersPatchArgs) ToVMUserSpecIpFiltersPatchPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecIpFiltersPatchOutput).ToVMUserSpecIpFiltersPatchPtrOutputWithContext(ctx)
}

// VMUserSpecIpFiltersPatchPtrInput is an input type that accepts VMUserSpecIpFiltersPatchArgs, VMUserSpecIpFiltersPatchPtr and VMUserSpecIpFiltersPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecIpFiltersPatchPtrInput` via:
//
//	        VMUserSpecIpFiltersPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecIpFiltersPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecIpFiltersPatchPtrOutput() VMUserSpecIpFiltersPatchPtrOutput
	ToVMUserSpecIpFiltersPatchPtrOutputWithContext(context.Context) VMUserSpecIpFiltersPatchPtrOutput
}

type vmuserSpecIpFiltersPatchPtrType VMUserSpecIpFiltersPatchArgs

func VMUserSpecIpFiltersPatchPtr(v *VMUserSpecIpFiltersPatchArgs) VMUserSpecIpFiltersPatchPtrInput {
	return (*vmuserSpecIpFiltersPatchPtrType)(v)
}

func (*vmuserSpecIpFiltersPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecIpFiltersPatch)(nil)).Elem()
}

func (i *vmuserSpecIpFiltersPatchPtrType) ToVMUserSpecIpFiltersPatchPtrOutput() VMUserSpecIpFiltersPatchPtrOutput {
	return i.ToVMUserSpecIpFiltersPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecIpFiltersPatchPtrType) ToVMUserSpecIpFiltersPatchPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecIpFiltersPatchPtrOutput)
}

// IPFilters defines per target src ip filters
// supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
type VMUserSpecIpFiltersPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecIpFiltersPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecIpFiltersPatch)(nil)).Elem()
}

func (o VMUserSpecIpFiltersPatchOutput) ToVMUserSpecIpFiltersPatchOutput() VMUserSpecIpFiltersPatchOutput {
	return o
}

func (o VMUserSpecIpFiltersPatchOutput) ToVMUserSpecIpFiltersPatchOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPatchOutput {
	return o
}

func (o VMUserSpecIpFiltersPatchOutput) ToVMUserSpecIpFiltersPatchPtrOutput() VMUserSpecIpFiltersPatchPtrOutput {
	return o.ToVMUserSpecIpFiltersPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecIpFiltersPatchOutput) ToVMUserSpecIpFiltersPatchPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecIpFiltersPatch) *VMUserSpecIpFiltersPatch {
		return &v
	}).(VMUserSpecIpFiltersPatchPtrOutput)
}

func (o VMUserSpecIpFiltersPatchOutput) Allow_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecIpFiltersPatch) []string { return v.Allow_list }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecIpFiltersPatchOutput) Deny_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecIpFiltersPatch) []string { return v.Deny_list }).(pulumi.StringArrayOutput)
}

type VMUserSpecIpFiltersPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecIpFiltersPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecIpFiltersPatch)(nil)).Elem()
}

func (o VMUserSpecIpFiltersPatchPtrOutput) ToVMUserSpecIpFiltersPatchPtrOutput() VMUserSpecIpFiltersPatchPtrOutput {
	return o
}

func (o VMUserSpecIpFiltersPatchPtrOutput) ToVMUserSpecIpFiltersPatchPtrOutputWithContext(ctx context.Context) VMUserSpecIpFiltersPatchPtrOutput {
	return o
}

func (o VMUserSpecIpFiltersPatchPtrOutput) Elem() VMUserSpecIpFiltersPatchOutput {
	return o.ApplyT(func(v *VMUserSpecIpFiltersPatch) VMUserSpecIpFiltersPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecIpFiltersPatch
		return ret
	}).(VMUserSpecIpFiltersPatchOutput)
}

func (o VMUserSpecIpFiltersPatchPtrOutput) Allow_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecIpFiltersPatch) []string {
		if v == nil {
			return nil
		}
		return v.Allow_list
	}).(pulumi.StringArrayOutput)
}

func (o VMUserSpecIpFiltersPatchPtrOutput) Deny_list() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecIpFiltersPatch) []string {
		if v == nil {
			return nil
		}
		return v.Deny_list
	}).(pulumi.StringArrayOutput)
}

// PasswordRef allows fetching password from user-create secret by its name and key.
type VMUserSpecPasswordRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecPasswordRefInput is an input type that accepts VMUserSpecPasswordRefArgs and VMUserSpecPasswordRefOutput values.
// You can construct a concrete instance of `VMUserSpecPasswordRefInput` via:
//
//	VMUserSpecPasswordRefArgs{...}
type VMUserSpecPasswordRefInput interface {
	pulumi.Input

	ToVMUserSpecPasswordRefOutput() VMUserSpecPasswordRefOutput
	ToVMUserSpecPasswordRefOutputWithContext(context.Context) VMUserSpecPasswordRefOutput
}

// PasswordRef allows fetching password from user-create secret by its name and key.
type VMUserSpecPasswordRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecPasswordRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecPasswordRef)(nil)).Elem()
}

func (i VMUserSpecPasswordRefArgs) ToVMUserSpecPasswordRefOutput() VMUserSpecPasswordRefOutput {
	return i.ToVMUserSpecPasswordRefOutputWithContext(context.Background())
}

func (i VMUserSpecPasswordRefArgs) ToVMUserSpecPasswordRefOutputWithContext(ctx context.Context) VMUserSpecPasswordRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPasswordRefOutput)
}

func (i VMUserSpecPasswordRefArgs) ToVMUserSpecPasswordRefPtrOutput() VMUserSpecPasswordRefPtrOutput {
	return i.ToVMUserSpecPasswordRefPtrOutputWithContext(context.Background())
}

func (i VMUserSpecPasswordRefArgs) ToVMUserSpecPasswordRefPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPasswordRefOutput).ToVMUserSpecPasswordRefPtrOutputWithContext(ctx)
}

// VMUserSpecPasswordRefPtrInput is an input type that accepts VMUserSpecPasswordRefArgs, VMUserSpecPasswordRefPtr and VMUserSpecPasswordRefPtrOutput values.
// You can construct a concrete instance of `VMUserSpecPasswordRefPtrInput` via:
//
//	        VMUserSpecPasswordRefArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecPasswordRefPtrInput interface {
	pulumi.Input

	ToVMUserSpecPasswordRefPtrOutput() VMUserSpecPasswordRefPtrOutput
	ToVMUserSpecPasswordRefPtrOutputWithContext(context.Context) VMUserSpecPasswordRefPtrOutput
}

type vmuserSpecPasswordRefPtrType VMUserSpecPasswordRefArgs

func VMUserSpecPasswordRefPtr(v *VMUserSpecPasswordRefArgs) VMUserSpecPasswordRefPtrInput {
	return (*vmuserSpecPasswordRefPtrType)(v)
}

func (*vmuserSpecPasswordRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecPasswordRef)(nil)).Elem()
}

func (i *vmuserSpecPasswordRefPtrType) ToVMUserSpecPasswordRefPtrOutput() VMUserSpecPasswordRefPtrOutput {
	return i.ToVMUserSpecPasswordRefPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecPasswordRefPtrType) ToVMUserSpecPasswordRefPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPasswordRefPtrOutput)
}

// PasswordRef allows fetching password from user-create secret by its name and key.
type VMUserSpecPasswordRefOutput struct{ *pulumi.OutputState }

func (VMUserSpecPasswordRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecPasswordRef)(nil)).Elem()
}

func (o VMUserSpecPasswordRefOutput) ToVMUserSpecPasswordRefOutput() VMUserSpecPasswordRefOutput {
	return o
}

func (o VMUserSpecPasswordRefOutput) ToVMUserSpecPasswordRefOutputWithContext(ctx context.Context) VMUserSpecPasswordRefOutput {
	return o
}

func (o VMUserSpecPasswordRefOutput) ToVMUserSpecPasswordRefPtrOutput() VMUserSpecPasswordRefPtrOutput {
	return o.ToVMUserSpecPasswordRefPtrOutputWithContext(context.Background())
}

func (o VMUserSpecPasswordRefOutput) ToVMUserSpecPasswordRefPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecPasswordRef) *VMUserSpecPasswordRef {
		return &v
	}).(VMUserSpecPasswordRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecPasswordRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPasswordRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecPasswordRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPasswordRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecPasswordRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecPasswordRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecPasswordRefPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecPasswordRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecPasswordRef)(nil)).Elem()
}

func (o VMUserSpecPasswordRefPtrOutput) ToVMUserSpecPasswordRefPtrOutput() VMUserSpecPasswordRefPtrOutput {
	return o
}

func (o VMUserSpecPasswordRefPtrOutput) ToVMUserSpecPasswordRefPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPtrOutput {
	return o
}

func (o VMUserSpecPasswordRefPtrOutput) Elem() VMUserSpecPasswordRefOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRef) VMUserSpecPasswordRef {
		if v != nil {
			return *v
		}
		var ret VMUserSpecPasswordRef
		return ret
	}).(VMUserSpecPasswordRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecPasswordRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecPasswordRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecPasswordRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// PasswordRef allows fetching password from user-create secret by its name and key.
type VMUserSpecPasswordRefPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecPasswordRefPatchInput is an input type that accepts VMUserSpecPasswordRefPatchArgs and VMUserSpecPasswordRefPatchOutput values.
// You can construct a concrete instance of `VMUserSpecPasswordRefPatchInput` via:
//
//	VMUserSpecPasswordRefPatchArgs{...}
type VMUserSpecPasswordRefPatchInput interface {
	pulumi.Input

	ToVMUserSpecPasswordRefPatchOutput() VMUserSpecPasswordRefPatchOutput
	ToVMUserSpecPasswordRefPatchOutputWithContext(context.Context) VMUserSpecPasswordRefPatchOutput
}

// PasswordRef allows fetching password from user-create secret by its name and key.
type VMUserSpecPasswordRefPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecPasswordRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecPasswordRefPatch)(nil)).Elem()
}

func (i VMUserSpecPasswordRefPatchArgs) ToVMUserSpecPasswordRefPatchOutput() VMUserSpecPasswordRefPatchOutput {
	return i.ToVMUserSpecPasswordRefPatchOutputWithContext(context.Background())
}

func (i VMUserSpecPasswordRefPatchArgs) ToVMUserSpecPasswordRefPatchOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPasswordRefPatchOutput)
}

func (i VMUserSpecPasswordRefPatchArgs) ToVMUserSpecPasswordRefPatchPtrOutput() VMUserSpecPasswordRefPatchPtrOutput {
	return i.ToVMUserSpecPasswordRefPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecPasswordRefPatchArgs) ToVMUserSpecPasswordRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPasswordRefPatchOutput).ToVMUserSpecPasswordRefPatchPtrOutputWithContext(ctx)
}

// VMUserSpecPasswordRefPatchPtrInput is an input type that accepts VMUserSpecPasswordRefPatchArgs, VMUserSpecPasswordRefPatchPtr and VMUserSpecPasswordRefPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecPasswordRefPatchPtrInput` via:
//
//	        VMUserSpecPasswordRefPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecPasswordRefPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecPasswordRefPatchPtrOutput() VMUserSpecPasswordRefPatchPtrOutput
	ToVMUserSpecPasswordRefPatchPtrOutputWithContext(context.Context) VMUserSpecPasswordRefPatchPtrOutput
}

type vmuserSpecPasswordRefPatchPtrType VMUserSpecPasswordRefPatchArgs

func VMUserSpecPasswordRefPatchPtr(v *VMUserSpecPasswordRefPatchArgs) VMUserSpecPasswordRefPatchPtrInput {
	return (*vmuserSpecPasswordRefPatchPtrType)(v)
}

func (*vmuserSpecPasswordRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecPasswordRefPatch)(nil)).Elem()
}

func (i *vmuserSpecPasswordRefPatchPtrType) ToVMUserSpecPasswordRefPatchPtrOutput() VMUserSpecPasswordRefPatchPtrOutput {
	return i.ToVMUserSpecPasswordRefPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecPasswordRefPatchPtrType) ToVMUserSpecPasswordRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPasswordRefPatchPtrOutput)
}

// PasswordRef allows fetching password from user-create secret by its name and key.
type VMUserSpecPasswordRefPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecPasswordRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecPasswordRefPatch)(nil)).Elem()
}

func (o VMUserSpecPasswordRefPatchOutput) ToVMUserSpecPasswordRefPatchOutput() VMUserSpecPasswordRefPatchOutput {
	return o
}

func (o VMUserSpecPasswordRefPatchOutput) ToVMUserSpecPasswordRefPatchOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPatchOutput {
	return o
}

func (o VMUserSpecPasswordRefPatchOutput) ToVMUserSpecPasswordRefPatchPtrOutput() VMUserSpecPasswordRefPatchPtrOutput {
	return o.ToVMUserSpecPasswordRefPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecPasswordRefPatchOutput) ToVMUserSpecPasswordRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecPasswordRefPatch) *VMUserSpecPasswordRefPatch {
		return &v
	}).(VMUserSpecPasswordRefPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecPasswordRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPasswordRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecPasswordRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPasswordRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecPasswordRefPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecPasswordRefPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecPasswordRefPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecPasswordRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecPasswordRefPatch)(nil)).Elem()
}

func (o VMUserSpecPasswordRefPatchPtrOutput) ToVMUserSpecPasswordRefPatchPtrOutput() VMUserSpecPasswordRefPatchPtrOutput {
	return o
}

func (o VMUserSpecPasswordRefPatchPtrOutput) ToVMUserSpecPasswordRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPasswordRefPatchPtrOutput {
	return o
}

func (o VMUserSpecPasswordRefPatchPtrOutput) Elem() VMUserSpecPasswordRefPatchOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRefPatch) VMUserSpecPasswordRefPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecPasswordRefPatch
		return ret
	}).(VMUserSpecPasswordRefPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecPasswordRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecPasswordRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecPasswordRefPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPasswordRefPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// VMUserSpec defines the desired state of VMUser
type VMUserSpecPatch struct {
	// BearerToken Authorization header value for accessing protected endpoint.
	BearerToken *string `pulumi:"bearerToken"`
	// DefaultURLs backend url for non-matching paths filter
	// usually used for default backend with error message
	Default_url []string `pulumi:"default_url"`
	// DisableSecretCreation skips related secret creation for vmuser
	Disable_secret_creation *bool `pulumi:"disable_secret_creation"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips *bool `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts *int `pulumi:"drop_src_path_prefix_parts"`
	// GeneratePassword instructs operator to generate password for user
	// if spec.password if empty.
	GeneratePassword *bool `pulumi:"generatePassword"`
	// Headers represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers    []string                  `pulumi:"headers"`
	Ip_filters *VMUserSpecIpFiltersPatch `pulumi:"ip_filters"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy *string `pulumi:"load_balancing_policy"`
	// MaxConcurrentRequests defines max concurrent requests per user
	// 300 is default value for vmauth
	Max_concurrent_requests *int `pulumi:"max_concurrent_requests"`
	// MetricLabels - additional labels for metrics exported by vmauth for given user.
	Metric_labels map[string]string `pulumi:"metric_labels"`
	// Name of the VMUser object.
	Name *string `pulumi:"name"`
	// Password basic auth password for accessing protected endpoint.
	Password    *string                     `pulumi:"password"`
	PasswordRef *VMUserSpecPasswordRefPatch `pulumi:"passwordRef"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers []string `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// e.g. [429,503]
	Retry_status_codes []int `pulumi:"retry_status_codes"`
	// TargetRefs - reference to endpoints, which user may access.
	TargetRefs []VMUserSpecTargetRefsPatch `pulumi:"targetRefs"`
	TlsConfig  *VMUserSpecTlsConfigPatch   `pulumi:"tlsConfig"`
	TokenRef   *VMUserSpecTokenRefPatch    `pulumi:"tokenRef"`
	// UserName basic auth user name for accessing protected endpoint,
	// will be replaced with metadata.name of VMUser if omitted.
	Username *string `pulumi:"username"`
}

// VMUserSpecPatchInput is an input type that accepts VMUserSpecPatchArgs and VMUserSpecPatchOutput values.
// You can construct a concrete instance of `VMUserSpecPatchInput` via:
//
//	VMUserSpecPatchArgs{...}
type VMUserSpecPatchInput interface {
	pulumi.Input

	ToVMUserSpecPatchOutput() VMUserSpecPatchOutput
	ToVMUserSpecPatchOutputWithContext(context.Context) VMUserSpecPatchOutput
}

// VMUserSpec defines the desired state of VMUser
type VMUserSpecPatchArgs struct {
	// BearerToken Authorization header value for accessing protected endpoint.
	BearerToken pulumi.StringPtrInput `pulumi:"bearerToken"`
	// DefaultURLs backend url for non-matching paths filter
	// usually used for default backend with error message
	Default_url pulumi.StringArrayInput `pulumi:"default_url"`
	// DisableSecretCreation skips related secret creation for vmuser
	Disable_secret_creation pulumi.BoolPtrInput `pulumi:"disable_secret_creation"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips pulumi.BoolPtrInput `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts pulumi.IntPtrInput `pulumi:"drop_src_path_prefix_parts"`
	// GeneratePassword instructs operator to generate password for user
	// if spec.password if empty.
	GeneratePassword pulumi.BoolPtrInput `pulumi:"generatePassword"`
	// Headers represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers    pulumi.StringArrayInput          `pulumi:"headers"`
	Ip_filters VMUserSpecIpFiltersPatchPtrInput `pulumi:"ip_filters"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy pulumi.StringPtrInput `pulumi:"load_balancing_policy"`
	// MaxConcurrentRequests defines max concurrent requests per user
	// 300 is default value for vmauth
	Max_concurrent_requests pulumi.IntPtrInput `pulumi:"max_concurrent_requests"`
	// MetricLabels - additional labels for metrics exported by vmauth for given user.
	Metric_labels pulumi.StringMapInput `pulumi:"metric_labels"`
	// Name of the VMUser object.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password basic auth password for accessing protected endpoint.
	Password    pulumi.StringPtrInput              `pulumi:"password"`
	PasswordRef VMUserSpecPasswordRefPatchPtrInput `pulumi:"passwordRef"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers pulumi.StringArrayInput `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// e.g. [429,503]
	Retry_status_codes pulumi.IntArrayInput `pulumi:"retry_status_codes"`
	// TargetRefs - reference to endpoints, which user may access.
	TargetRefs VMUserSpecTargetRefsPatchArrayInput `pulumi:"targetRefs"`
	TlsConfig  VMUserSpecTlsConfigPatchPtrInput    `pulumi:"tlsConfig"`
	TokenRef   VMUserSpecTokenRefPatchPtrInput     `pulumi:"tokenRef"`
	// UserName basic auth user name for accessing protected endpoint,
	// will be replaced with metadata.name of VMUser if omitted.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (VMUserSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecPatch)(nil)).Elem()
}

func (i VMUserSpecPatchArgs) ToVMUserSpecPatchOutput() VMUserSpecPatchOutput {
	return i.ToVMUserSpecPatchOutputWithContext(context.Background())
}

func (i VMUserSpecPatchArgs) ToVMUserSpecPatchOutputWithContext(ctx context.Context) VMUserSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPatchOutput)
}

func (i VMUserSpecPatchArgs) ToVMUserSpecPatchPtrOutput() VMUserSpecPatchPtrOutput {
	return i.ToVMUserSpecPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecPatchArgs) ToVMUserSpecPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPatchOutput).ToVMUserSpecPatchPtrOutputWithContext(ctx)
}

// VMUserSpecPatchPtrInput is an input type that accepts VMUserSpecPatchArgs, VMUserSpecPatchPtr and VMUserSpecPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecPatchPtrInput` via:
//
//	        VMUserSpecPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecPatchPtrOutput() VMUserSpecPatchPtrOutput
	ToVMUserSpecPatchPtrOutputWithContext(context.Context) VMUserSpecPatchPtrOutput
}

type vmuserSpecPatchPtrType VMUserSpecPatchArgs

func VMUserSpecPatchPtr(v *VMUserSpecPatchArgs) VMUserSpecPatchPtrInput {
	return (*vmuserSpecPatchPtrType)(v)
}

func (*vmuserSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecPatch)(nil)).Elem()
}

func (i *vmuserSpecPatchPtrType) ToVMUserSpecPatchPtrOutput() VMUserSpecPatchPtrOutput {
	return i.ToVMUserSpecPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecPatchPtrType) ToVMUserSpecPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecPatchPtrOutput)
}

// VMUserSpec defines the desired state of VMUser
type VMUserSpecPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecPatch)(nil)).Elem()
}

func (o VMUserSpecPatchOutput) ToVMUserSpecPatchOutput() VMUserSpecPatchOutput {
	return o
}

func (o VMUserSpecPatchOutput) ToVMUserSpecPatchOutputWithContext(ctx context.Context) VMUserSpecPatchOutput {
	return o
}

func (o VMUserSpecPatchOutput) ToVMUserSpecPatchPtrOutput() VMUserSpecPatchPtrOutput {
	return o.ToVMUserSpecPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecPatchOutput) ToVMUserSpecPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecPatch) *VMUserSpecPatch {
		return &v
	}).(VMUserSpecPatchPtrOutput)
}

// BearerToken Authorization header value for accessing protected endpoint.
func (o VMUserSpecPatchOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

// DefaultURLs backend url for non-matching paths filter
// usually used for default backend with error message
func (o VMUserSpecPatchOutput) Default_url() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecPatch) []string { return v.Default_url }).(pulumi.StringArrayOutput)
}

// DisableSecretCreation skips related secret creation for vmuser
func (o VMUserSpecPatchOutput) Disable_secret_creation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *bool { return v.Disable_secret_creation }).(pulumi.BoolPtrOutput)
}

// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
func (o VMUserSpecPatchOutput) Discover_backend_ips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *bool { return v.Discover_backend_ips }).(pulumi.BoolPtrOutput)
}

// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
func (o VMUserSpecPatchOutput) Drop_src_path_prefix_parts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *int { return v.Drop_src_path_prefix_parts }).(pulumi.IntPtrOutput)
}

// GeneratePassword instructs operator to generate password for user
// if spec.password if empty.
func (o VMUserSpecPatchOutput) GeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *bool { return v.GeneratePassword }).(pulumi.BoolPtrOutput)
}

// Headers represent additional http headers, that vmauth uses
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.68.0 version of vmauth
func (o VMUserSpecPatchOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecPatch) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecPatchOutput) Ip_filters() VMUserSpecIpFiltersPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *VMUserSpecIpFiltersPatch { return v.Ip_filters }).(VMUserSpecIpFiltersPatchPtrOutput)
}

// LoadBalancingPolicy defines load balancing policy to use for backend urls.
// Supported policies: least_loaded, first_available.
// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
func (o VMUserSpecPatchOutput) Load_balancing_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *string { return v.Load_balancing_policy }).(pulumi.StringPtrOutput)
}

// MaxConcurrentRequests defines max concurrent requests per user
// 300 is default value for vmauth
func (o VMUserSpecPatchOutput) Max_concurrent_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *int { return v.Max_concurrent_requests }).(pulumi.IntPtrOutput)
}

// MetricLabels - additional labels for metrics exported by vmauth for given user.
func (o VMUserSpecPatchOutput) Metric_labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMUserSpecPatch) map[string]string { return v.Metric_labels }).(pulumi.StringMapOutput)
}

// Name of the VMUser object.
func (o VMUserSpecPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password basic auth password for accessing protected endpoint.
func (o VMUserSpecPatchOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o VMUserSpecPatchOutput) PasswordRef() VMUserSpecPasswordRefPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *VMUserSpecPasswordRefPatch { return v.PasswordRef }).(VMUserSpecPasswordRefPatchPtrOutput)
}

// ResponseHeaders represent additional http headers, that vmauth adds for request response
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.93.0 version of vmauth
func (o VMUserSpecPatchOutput) Response_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecPatch) []string { return v.Response_headers }).(pulumi.StringArrayOutput)
}

// RetryStatusCodes defines http status codes in numeric format for request retries
// e.g. [429,503]
func (o VMUserSpecPatchOutput) Retry_status_codes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VMUserSpecPatch) []int { return v.Retry_status_codes }).(pulumi.IntArrayOutput)
}

// TargetRefs - reference to endpoints, which user may access.
func (o VMUserSpecPatchOutput) TargetRefs() VMUserSpecTargetRefsPatchArrayOutput {
	return o.ApplyT(func(v VMUserSpecPatch) []VMUserSpecTargetRefsPatch { return v.TargetRefs }).(VMUserSpecTargetRefsPatchArrayOutput)
}

func (o VMUserSpecPatchOutput) TlsConfig() VMUserSpecTlsConfigPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *VMUserSpecTlsConfigPatch { return v.TlsConfig }).(VMUserSpecTlsConfigPatchPtrOutput)
}

func (o VMUserSpecPatchOutput) TokenRef() VMUserSpecTokenRefPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *VMUserSpecTokenRefPatch { return v.TokenRef }).(VMUserSpecTokenRefPatchPtrOutput)
}

// UserName basic auth user name for accessing protected endpoint,
// will be replaced with metadata.name of VMUser if omitted.
func (o VMUserSpecPatchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecPatch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VMUserSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecPatch)(nil)).Elem()
}

func (o VMUserSpecPatchPtrOutput) ToVMUserSpecPatchPtrOutput() VMUserSpecPatchPtrOutput {
	return o
}

func (o VMUserSpecPatchPtrOutput) ToVMUserSpecPatchPtrOutputWithContext(ctx context.Context) VMUserSpecPatchPtrOutput {
	return o
}

func (o VMUserSpecPatchPtrOutput) Elem() VMUserSpecPatchOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) VMUserSpecPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecPatch
		return ret
	}).(VMUserSpecPatchOutput)
}

// BearerToken Authorization header value for accessing protected endpoint.
func (o VMUserSpecPatchPtrOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(pulumi.StringPtrOutput)
}

// DefaultURLs backend url for non-matching paths filter
// usually used for default backend with error message
func (o VMUserSpecPatchPtrOutput) Default_url() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Default_url
	}).(pulumi.StringArrayOutput)
}

// DisableSecretCreation skips related secret creation for vmuser
func (o VMUserSpecPatchPtrOutput) Disable_secret_creation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Disable_secret_creation
	}).(pulumi.BoolPtrOutput)
}

// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
func (o VMUserSpecPatchPtrOutput) Discover_backend_ips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Discover_backend_ips
	}).(pulumi.BoolPtrOutput)
}

// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
func (o VMUserSpecPatchPtrOutput) Drop_src_path_prefix_parts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.Drop_src_path_prefix_parts
	}).(pulumi.IntPtrOutput)
}

// GeneratePassword instructs operator to generate password for user
// if spec.password if empty.
func (o VMUserSpecPatchPtrOutput) GeneratePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.GeneratePassword
	}).(pulumi.BoolPtrOutput)
}

// Headers represent additional http headers, that vmauth uses
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.68.0 version of vmauth
func (o VMUserSpecPatchPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

func (o VMUserSpecPatchPtrOutput) Ip_filters() VMUserSpecIpFiltersPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *VMUserSpecIpFiltersPatch {
		if v == nil {
			return nil
		}
		return v.Ip_filters
	}).(VMUserSpecIpFiltersPatchPtrOutput)
}

// LoadBalancingPolicy defines load balancing policy to use for backend urls.
// Supported policies: least_loaded, first_available.
// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
func (o VMUserSpecPatchPtrOutput) Load_balancing_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Load_balancing_policy
	}).(pulumi.StringPtrOutput)
}

// MaxConcurrentRequests defines max concurrent requests per user
// 300 is default value for vmauth
func (o VMUserSpecPatchPtrOutput) Max_concurrent_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.Max_concurrent_requests
	}).(pulumi.IntPtrOutput)
}

// MetricLabels - additional labels for metrics exported by vmauth for given user.
func (o VMUserSpecPatchPtrOutput) Metric_labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metric_labels
	}).(pulumi.StringMapOutput)
}

// Name of the VMUser object.
func (o VMUserSpecPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Password basic auth password for accessing protected endpoint.
func (o VMUserSpecPatchPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o VMUserSpecPatchPtrOutput) PasswordRef() VMUserSpecPasswordRefPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *VMUserSpecPasswordRefPatch {
		if v == nil {
			return nil
		}
		return v.PasswordRef
	}).(VMUserSpecPasswordRefPatchPtrOutput)
}

// ResponseHeaders represent additional http headers, that vmauth adds for request response
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.93.0 version of vmauth
func (o VMUserSpecPatchPtrOutput) Response_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) []string {
		if v == nil {
			return nil
		}
		return v.Response_headers
	}).(pulumi.StringArrayOutput)
}

// RetryStatusCodes defines http status codes in numeric format for request retries
// e.g. [429,503]
func (o VMUserSpecPatchPtrOutput) Retry_status_codes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) []int {
		if v == nil {
			return nil
		}
		return v.Retry_status_codes
	}).(pulumi.IntArrayOutput)
}

// TargetRefs - reference to endpoints, which user may access.
func (o VMUserSpecPatchPtrOutput) TargetRefs() VMUserSpecTargetRefsPatchArrayOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) []VMUserSpecTargetRefsPatch {
		if v == nil {
			return nil
		}
		return v.TargetRefs
	}).(VMUserSpecTargetRefsPatchArrayOutput)
}

func (o VMUserSpecPatchPtrOutput) TlsConfig() VMUserSpecTlsConfigPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *VMUserSpecTlsConfigPatch {
		if v == nil {
			return nil
		}
		return v.TlsConfig
	}).(VMUserSpecTlsConfigPatchPtrOutput)
}

func (o VMUserSpecPatchPtrOutput) TokenRef() VMUserSpecTokenRefPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *VMUserSpecTokenRefPatch {
		if v == nil {
			return nil
		}
		return v.TokenRef
	}).(VMUserSpecTokenRefPatchPtrOutput)
}

// UserName basic auth user name for accessing protected endpoint,
// will be replaced with metadata.name of VMUser if omitted.
func (o VMUserSpecPatchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// TargetRef describes target for user traffic forwarding.
// one of target types can be chosen:
// crd or static per targetRef.
// user can define multiple targetRefs with different ref Types.
type VMUserSpecTargetRefs struct {
	Crd *VMUserSpecTargetRefsCrd `pulumi:"crd"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips *bool `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts *int `pulumi:"drop_src_path_prefix_parts"`
	// RequestHeaders represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers []string `pulumi:"headers"`
	Hosts   []string `pulumi:"hosts"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy *string `pulumi:"load_balancing_policy"`
	// Paths - matched path to route.
	Paths []string `pulumi:"paths"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers []string `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// Can be defined per target or at VMUser.spec level
	// e.g. [429,503]
	Retry_status_codes []int `pulumi:"retry_status_codes"`
	// SrcHeaders is an optional list of headers, which must match request headers.
	Src_headers []string `pulumi:"src_headers"`
	// SrcQueryArgs is an optional list of query args, which must match request URL query args.
	Src_query_args     []string                                `pulumi:"src_query_args"`
	Static             *VMUserSpecTargetRefsStatic             `pulumi:"static"`
	TargetRefBasicAuth *VMUserSpecTargetRefsTargetRefBasicAuth `pulumi:"targetRefBasicAuth"`
	// TargetPathSuffix allows to add some suffix to the target path
	// It allows to hide tenant configuration from user with crd as ref.
	// it also may contain any url encoded params.
	Target_path_suffix *string `pulumi:"target_path_suffix"`
}

// VMUserSpecTargetRefsInput is an input type that accepts VMUserSpecTargetRefsArgs and VMUserSpecTargetRefsOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsInput` via:
//
//	VMUserSpecTargetRefsArgs{...}
type VMUserSpecTargetRefsInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsOutput() VMUserSpecTargetRefsOutput
	ToVMUserSpecTargetRefsOutputWithContext(context.Context) VMUserSpecTargetRefsOutput
}

// TargetRef describes target for user traffic forwarding.
// one of target types can be chosen:
// crd or static per targetRef.
// user can define multiple targetRefs with different ref Types.
type VMUserSpecTargetRefsArgs struct {
	Crd VMUserSpecTargetRefsCrdPtrInput `pulumi:"crd"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips pulumi.BoolPtrInput `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts pulumi.IntPtrInput `pulumi:"drop_src_path_prefix_parts"`
	// RequestHeaders represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers pulumi.StringArrayInput `pulumi:"headers"`
	Hosts   pulumi.StringArrayInput `pulumi:"hosts"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy pulumi.StringPtrInput `pulumi:"load_balancing_policy"`
	// Paths - matched path to route.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers pulumi.StringArrayInput `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// Can be defined per target or at VMUser.spec level
	// e.g. [429,503]
	Retry_status_codes pulumi.IntArrayInput `pulumi:"retry_status_codes"`
	// SrcHeaders is an optional list of headers, which must match request headers.
	Src_headers pulumi.StringArrayInput `pulumi:"src_headers"`
	// SrcQueryArgs is an optional list of query args, which must match request URL query args.
	Src_query_args     pulumi.StringArrayInput                        `pulumi:"src_query_args"`
	Static             VMUserSpecTargetRefsStaticPtrInput             `pulumi:"static"`
	TargetRefBasicAuth VMUserSpecTargetRefsTargetRefBasicAuthPtrInput `pulumi:"targetRefBasicAuth"`
	// TargetPathSuffix allows to add some suffix to the target path
	// It allows to hide tenant configuration from user with crd as ref.
	// it also may contain any url encoded params.
	Target_path_suffix pulumi.StringPtrInput `pulumi:"target_path_suffix"`
}

func (VMUserSpecTargetRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefs)(nil)).Elem()
}

func (i VMUserSpecTargetRefsArgs) ToVMUserSpecTargetRefsOutput() VMUserSpecTargetRefsOutput {
	return i.ToVMUserSpecTargetRefsOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsArgs) ToVMUserSpecTargetRefsOutputWithContext(ctx context.Context) VMUserSpecTargetRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsOutput)
}

// VMUserSpecTargetRefsArrayInput is an input type that accepts VMUserSpecTargetRefsArray and VMUserSpecTargetRefsArrayOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsArrayInput` via:
//
//	VMUserSpecTargetRefsArray{ VMUserSpecTargetRefsArgs{...} }
type VMUserSpecTargetRefsArrayInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsArrayOutput() VMUserSpecTargetRefsArrayOutput
	ToVMUserSpecTargetRefsArrayOutputWithContext(context.Context) VMUserSpecTargetRefsArrayOutput
}

type VMUserSpecTargetRefsArray []VMUserSpecTargetRefsInput

func (VMUserSpecTargetRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMUserSpecTargetRefs)(nil)).Elem()
}

func (i VMUserSpecTargetRefsArray) ToVMUserSpecTargetRefsArrayOutput() VMUserSpecTargetRefsArrayOutput {
	return i.ToVMUserSpecTargetRefsArrayOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsArray) ToVMUserSpecTargetRefsArrayOutputWithContext(ctx context.Context) VMUserSpecTargetRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsArrayOutput)
}

// TargetRef describes target for user traffic forwarding.
// one of target types can be chosen:
// crd or static per targetRef.
// user can define multiple targetRefs with different ref Types.
type VMUserSpecTargetRefsOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefs)(nil)).Elem()
}

func (o VMUserSpecTargetRefsOutput) ToVMUserSpecTargetRefsOutput() VMUserSpecTargetRefsOutput {
	return o
}

func (o VMUserSpecTargetRefsOutput) ToVMUserSpecTargetRefsOutputWithContext(ctx context.Context) VMUserSpecTargetRefsOutput {
	return o
}

func (o VMUserSpecTargetRefsOutput) Crd() VMUserSpecTargetRefsCrdPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) *VMUserSpecTargetRefsCrd { return v.Crd }).(VMUserSpecTargetRefsCrdPtrOutput)
}

// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
func (o VMUserSpecTargetRefsOutput) Discover_backend_ips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) *bool { return v.Discover_backend_ips }).(pulumi.BoolPtrOutput)
}

// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
func (o VMUserSpecTargetRefsOutput) Drop_src_path_prefix_parts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) *int { return v.Drop_src_path_prefix_parts }).(pulumi.IntPtrOutput)
}

// RequestHeaders represent additional http headers, that vmauth uses
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.68.0 version of vmauth
func (o VMUserSpecTargetRefsOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecTargetRefsOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// LoadBalancingPolicy defines load balancing policy to use for backend urls.
// Supported policies: least_loaded, first_available.
// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
func (o VMUserSpecTargetRefsOutput) Load_balancing_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) *string { return v.Load_balancing_policy }).(pulumi.StringPtrOutput)
}

// Paths - matched path to route.
func (o VMUserSpecTargetRefsOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// ResponseHeaders represent additional http headers, that vmauth adds for request response
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.93.0 version of vmauth
func (o VMUserSpecTargetRefsOutput) Response_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) []string { return v.Response_headers }).(pulumi.StringArrayOutput)
}

// RetryStatusCodes defines http status codes in numeric format for request retries
// Can be defined per target or at VMUser.spec level
// e.g. [429,503]
func (o VMUserSpecTargetRefsOutput) Retry_status_codes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) []int { return v.Retry_status_codes }).(pulumi.IntArrayOutput)
}

// SrcHeaders is an optional list of headers, which must match request headers.
func (o VMUserSpecTargetRefsOutput) Src_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) []string { return v.Src_headers }).(pulumi.StringArrayOutput)
}

// SrcQueryArgs is an optional list of query args, which must match request URL query args.
func (o VMUserSpecTargetRefsOutput) Src_query_args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) []string { return v.Src_query_args }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecTargetRefsOutput) Static() VMUserSpecTargetRefsStaticPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) *VMUserSpecTargetRefsStatic { return v.Static }).(VMUserSpecTargetRefsStaticPtrOutput)
}

func (o VMUserSpecTargetRefsOutput) TargetRefBasicAuth() VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) *VMUserSpecTargetRefsTargetRefBasicAuth { return v.TargetRefBasicAuth }).(VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput)
}

// TargetPathSuffix allows to add some suffix to the target path
// It allows to hide tenant configuration from user with crd as ref.
// it also may contain any url encoded params.
func (o VMUserSpecTargetRefsOutput) Target_path_suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefs) *string { return v.Target_path_suffix }).(pulumi.StringPtrOutput)
}

type VMUserSpecTargetRefsArrayOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMUserSpecTargetRefs)(nil)).Elem()
}

func (o VMUserSpecTargetRefsArrayOutput) ToVMUserSpecTargetRefsArrayOutput() VMUserSpecTargetRefsArrayOutput {
	return o
}

func (o VMUserSpecTargetRefsArrayOutput) ToVMUserSpecTargetRefsArrayOutputWithContext(ctx context.Context) VMUserSpecTargetRefsArrayOutput {
	return o
}

func (o VMUserSpecTargetRefsArrayOutput) Index(i pulumi.IntInput) VMUserSpecTargetRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMUserSpecTargetRefs {
		return vs[0].([]VMUserSpecTargetRefs)[vs[1].(int)]
	}).(VMUserSpecTargetRefsOutput)
}

// CRD describes exist operator's CRD object,
// operator generates access url based on CRD params.
type VMUserSpecTargetRefsCrd struct {
	// Kind one of:
	// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
	Kind *string `pulumi:"kind"`
	// Name target CRD object name
	Name *string `pulumi:"name"`
	// Namespace target CRD object namespace.
	Namespace *string `pulumi:"namespace"`
}

// VMUserSpecTargetRefsCrdInput is an input type that accepts VMUserSpecTargetRefsCrdArgs and VMUserSpecTargetRefsCrdOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsCrdInput` via:
//
//	VMUserSpecTargetRefsCrdArgs{...}
type VMUserSpecTargetRefsCrdInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsCrdOutput() VMUserSpecTargetRefsCrdOutput
	ToVMUserSpecTargetRefsCrdOutputWithContext(context.Context) VMUserSpecTargetRefsCrdOutput
}

// CRD describes exist operator's CRD object,
// operator generates access url based on CRD params.
type VMUserSpecTargetRefsCrdArgs struct {
	// Kind one of:
	// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name target CRD object name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace target CRD object namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (VMUserSpecTargetRefsCrdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsCrd)(nil)).Elem()
}

func (i VMUserSpecTargetRefsCrdArgs) ToVMUserSpecTargetRefsCrdOutput() VMUserSpecTargetRefsCrdOutput {
	return i.ToVMUserSpecTargetRefsCrdOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsCrdArgs) ToVMUserSpecTargetRefsCrdOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsCrdOutput)
}

func (i VMUserSpecTargetRefsCrdArgs) ToVMUserSpecTargetRefsCrdPtrOutput() VMUserSpecTargetRefsCrdPtrOutput {
	return i.ToVMUserSpecTargetRefsCrdPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsCrdArgs) ToVMUserSpecTargetRefsCrdPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsCrdOutput).ToVMUserSpecTargetRefsCrdPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsCrdPtrInput is an input type that accepts VMUserSpecTargetRefsCrdArgs, VMUserSpecTargetRefsCrdPtr and VMUserSpecTargetRefsCrdPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsCrdPtrInput` via:
//
//	        VMUserSpecTargetRefsCrdArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsCrdPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsCrdPtrOutput() VMUserSpecTargetRefsCrdPtrOutput
	ToVMUserSpecTargetRefsCrdPtrOutputWithContext(context.Context) VMUserSpecTargetRefsCrdPtrOutput
}

type vmuserSpecTargetRefsCrdPtrType VMUserSpecTargetRefsCrdArgs

func VMUserSpecTargetRefsCrdPtr(v *VMUserSpecTargetRefsCrdArgs) VMUserSpecTargetRefsCrdPtrInput {
	return (*vmuserSpecTargetRefsCrdPtrType)(v)
}

func (*vmuserSpecTargetRefsCrdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsCrd)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsCrdPtrType) ToVMUserSpecTargetRefsCrdPtrOutput() VMUserSpecTargetRefsCrdPtrOutput {
	return i.ToVMUserSpecTargetRefsCrdPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsCrdPtrType) ToVMUserSpecTargetRefsCrdPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsCrdPtrOutput)
}

// CRD describes exist operator's CRD object,
// operator generates access url based on CRD params.
type VMUserSpecTargetRefsCrdOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsCrdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsCrd)(nil)).Elem()
}

func (o VMUserSpecTargetRefsCrdOutput) ToVMUserSpecTargetRefsCrdOutput() VMUserSpecTargetRefsCrdOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdOutput) ToVMUserSpecTargetRefsCrdOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdOutput) ToVMUserSpecTargetRefsCrdPtrOutput() VMUserSpecTargetRefsCrdPtrOutput {
	return o.ToVMUserSpecTargetRefsCrdPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsCrdOutput) ToVMUserSpecTargetRefsCrdPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsCrd) *VMUserSpecTargetRefsCrd {
		return &v
	}).(VMUserSpecTargetRefsCrdPtrOutput)
}

// Kind one of:
// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
func (o VMUserSpecTargetRefsCrdOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsCrd) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name target CRD object name
func (o VMUserSpecTargetRefsCrdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsCrd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace target CRD object namespace.
func (o VMUserSpecTargetRefsCrdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsCrd) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type VMUserSpecTargetRefsCrdPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsCrdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsCrd)(nil)).Elem()
}

func (o VMUserSpecTargetRefsCrdPtrOutput) ToVMUserSpecTargetRefsCrdPtrOutput() VMUserSpecTargetRefsCrdPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdPtrOutput) ToVMUserSpecTargetRefsCrdPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdPtrOutput) Elem() VMUserSpecTargetRefsCrdOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrd) VMUserSpecTargetRefsCrd {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsCrd
		return ret
	}).(VMUserSpecTargetRefsCrdOutput)
}

// Kind one of:
// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
func (o VMUserSpecTargetRefsCrdPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrd) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name target CRD object name
func (o VMUserSpecTargetRefsCrdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrd) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace target CRD object namespace.
func (o VMUserSpecTargetRefsCrdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrd) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// CRD describes exist operator's CRD object,
// operator generates access url based on CRD params.
type VMUserSpecTargetRefsCrdPatch struct {
	// Kind one of:
	// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
	Kind *string `pulumi:"kind"`
	// Name target CRD object name
	Name *string `pulumi:"name"`
	// Namespace target CRD object namespace.
	Namespace *string `pulumi:"namespace"`
}

// VMUserSpecTargetRefsCrdPatchInput is an input type that accepts VMUserSpecTargetRefsCrdPatchArgs and VMUserSpecTargetRefsCrdPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsCrdPatchInput` via:
//
//	VMUserSpecTargetRefsCrdPatchArgs{...}
type VMUserSpecTargetRefsCrdPatchInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsCrdPatchOutput() VMUserSpecTargetRefsCrdPatchOutput
	ToVMUserSpecTargetRefsCrdPatchOutputWithContext(context.Context) VMUserSpecTargetRefsCrdPatchOutput
}

// CRD describes exist operator's CRD object,
// operator generates access url based on CRD params.
type VMUserSpecTargetRefsCrdPatchArgs struct {
	// Kind one of:
	// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name target CRD object name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace target CRD object namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (VMUserSpecTargetRefsCrdPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsCrdPatch)(nil)).Elem()
}

func (i VMUserSpecTargetRefsCrdPatchArgs) ToVMUserSpecTargetRefsCrdPatchOutput() VMUserSpecTargetRefsCrdPatchOutput {
	return i.ToVMUserSpecTargetRefsCrdPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsCrdPatchArgs) ToVMUserSpecTargetRefsCrdPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsCrdPatchOutput)
}

func (i VMUserSpecTargetRefsCrdPatchArgs) ToVMUserSpecTargetRefsCrdPatchPtrOutput() VMUserSpecTargetRefsCrdPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsCrdPatchArgs) ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsCrdPatchOutput).ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsCrdPatchPtrInput is an input type that accepts VMUserSpecTargetRefsCrdPatchArgs, VMUserSpecTargetRefsCrdPatchPtr and VMUserSpecTargetRefsCrdPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsCrdPatchPtrInput` via:
//
//	        VMUserSpecTargetRefsCrdPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsCrdPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsCrdPatchPtrOutput() VMUserSpecTargetRefsCrdPatchPtrOutput
	ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(context.Context) VMUserSpecTargetRefsCrdPatchPtrOutput
}

type vmuserSpecTargetRefsCrdPatchPtrType VMUserSpecTargetRefsCrdPatchArgs

func VMUserSpecTargetRefsCrdPatchPtr(v *VMUserSpecTargetRefsCrdPatchArgs) VMUserSpecTargetRefsCrdPatchPtrInput {
	return (*vmuserSpecTargetRefsCrdPatchPtrType)(v)
}

func (*vmuserSpecTargetRefsCrdPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsCrdPatch)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsCrdPatchPtrType) ToVMUserSpecTargetRefsCrdPatchPtrOutput() VMUserSpecTargetRefsCrdPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsCrdPatchPtrType) ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsCrdPatchPtrOutput)
}

// CRD describes exist operator's CRD object,
// operator generates access url based on CRD params.
type VMUserSpecTargetRefsCrdPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsCrdPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsCrdPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsCrdPatchOutput) ToVMUserSpecTargetRefsCrdPatchOutput() VMUserSpecTargetRefsCrdPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdPatchOutput) ToVMUserSpecTargetRefsCrdPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdPatchOutput) ToVMUserSpecTargetRefsCrdPatchPtrOutput() VMUserSpecTargetRefsCrdPatchPtrOutput {
	return o.ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsCrdPatchOutput) ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsCrdPatch) *VMUserSpecTargetRefsCrdPatch {
		return &v
	}).(VMUserSpecTargetRefsCrdPatchPtrOutput)
}

// Kind one of:
// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
func (o VMUserSpecTargetRefsCrdPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsCrdPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name target CRD object name
func (o VMUserSpecTargetRefsCrdPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsCrdPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace target CRD object namespace.
func (o VMUserSpecTargetRefsCrdPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsCrdPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type VMUserSpecTargetRefsCrdPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsCrdPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsCrdPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsCrdPatchPtrOutput) ToVMUserSpecTargetRefsCrdPatchPtrOutput() VMUserSpecTargetRefsCrdPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdPatchPtrOutput) ToVMUserSpecTargetRefsCrdPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsCrdPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsCrdPatchPtrOutput) Elem() VMUserSpecTargetRefsCrdPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrdPatch) VMUserSpecTargetRefsCrdPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsCrdPatch
		return ret
	}).(VMUserSpecTargetRefsCrdPatchOutput)
}

// Kind one of:
// VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
func (o VMUserSpecTargetRefsCrdPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name target CRD object name
func (o VMUserSpecTargetRefsCrdPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace target CRD object namespace.
func (o VMUserSpecTargetRefsCrdPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsCrdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// TargetRef describes target for user traffic forwarding.
// one of target types can be chosen:
// crd or static per targetRef.
// user can define multiple targetRefs with different ref Types.
type VMUserSpecTargetRefsPatch struct {
	Crd *VMUserSpecTargetRefsCrdPatch `pulumi:"crd"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips *bool `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts *int `pulumi:"drop_src_path_prefix_parts"`
	// RequestHeaders represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers []string `pulumi:"headers"`
	Hosts   []string `pulumi:"hosts"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy *string `pulumi:"load_balancing_policy"`
	// Paths - matched path to route.
	Paths []string `pulumi:"paths"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers []string `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// Can be defined per target or at VMUser.spec level
	// e.g. [429,503]
	Retry_status_codes []int `pulumi:"retry_status_codes"`
	// SrcHeaders is an optional list of headers, which must match request headers.
	Src_headers []string `pulumi:"src_headers"`
	// SrcQueryArgs is an optional list of query args, which must match request URL query args.
	Src_query_args     []string                                     `pulumi:"src_query_args"`
	Static             *VMUserSpecTargetRefsStaticPatch             `pulumi:"static"`
	TargetRefBasicAuth *VMUserSpecTargetRefsTargetRefBasicAuthPatch `pulumi:"targetRefBasicAuth"`
	// TargetPathSuffix allows to add some suffix to the target path
	// It allows to hide tenant configuration from user with crd as ref.
	// it also may contain any url encoded params.
	Target_path_suffix *string `pulumi:"target_path_suffix"`
}

// VMUserSpecTargetRefsPatchInput is an input type that accepts VMUserSpecTargetRefsPatchArgs and VMUserSpecTargetRefsPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsPatchInput` via:
//
//	VMUserSpecTargetRefsPatchArgs{...}
type VMUserSpecTargetRefsPatchInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsPatchOutput() VMUserSpecTargetRefsPatchOutput
	ToVMUserSpecTargetRefsPatchOutputWithContext(context.Context) VMUserSpecTargetRefsPatchOutput
}

// TargetRef describes target for user traffic forwarding.
// one of target types can be chosen:
// crd or static per targetRef.
// user can define multiple targetRefs with different ref Types.
type VMUserSpecTargetRefsPatchArgs struct {
	Crd VMUserSpecTargetRefsCrdPatchPtrInput `pulumi:"crd"`
	// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
	Discover_backend_ips pulumi.BoolPtrInput `pulumi:"discover_backend_ips"`
	// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
	// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
	Drop_src_path_prefix_parts pulumi.IntPtrInput `pulumi:"drop_src_path_prefix_parts"`
	// RequestHeaders represent additional http headers, that vmauth uses
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.68.0 version of vmauth
	Headers pulumi.StringArrayInput `pulumi:"headers"`
	Hosts   pulumi.StringArrayInput `pulumi:"hosts"`
	// LoadBalancingPolicy defines load balancing policy to use for backend urls.
	// Supported policies: least_loaded, first_available.
	// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
	Load_balancing_policy pulumi.StringPtrInput `pulumi:"load_balancing_policy"`
	// Paths - matched path to route.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// ResponseHeaders represent additional http headers, that vmauth adds for request response
	// in form of ["header_key: header_value"]
	// multiple values for header key:
	// ["header_key: value1,value2"]
	// it's available since 1.93.0 version of vmauth
	Response_headers pulumi.StringArrayInput `pulumi:"response_headers"`
	// RetryStatusCodes defines http status codes in numeric format for request retries
	// Can be defined per target or at VMUser.spec level
	// e.g. [429,503]
	Retry_status_codes pulumi.IntArrayInput `pulumi:"retry_status_codes"`
	// SrcHeaders is an optional list of headers, which must match request headers.
	Src_headers pulumi.StringArrayInput `pulumi:"src_headers"`
	// SrcQueryArgs is an optional list of query args, which must match request URL query args.
	Src_query_args     pulumi.StringArrayInput                             `pulumi:"src_query_args"`
	Static             VMUserSpecTargetRefsStaticPatchPtrInput             `pulumi:"static"`
	TargetRefBasicAuth VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrInput `pulumi:"targetRefBasicAuth"`
	// TargetPathSuffix allows to add some suffix to the target path
	// It allows to hide tenant configuration from user with crd as ref.
	// it also may contain any url encoded params.
	Target_path_suffix pulumi.StringPtrInput `pulumi:"target_path_suffix"`
}

func (VMUserSpecTargetRefsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsPatch)(nil)).Elem()
}

func (i VMUserSpecTargetRefsPatchArgs) ToVMUserSpecTargetRefsPatchOutput() VMUserSpecTargetRefsPatchOutput {
	return i.ToVMUserSpecTargetRefsPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsPatchArgs) ToVMUserSpecTargetRefsPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsPatchOutput)
}

// VMUserSpecTargetRefsPatchArrayInput is an input type that accepts VMUserSpecTargetRefsPatchArray and VMUserSpecTargetRefsPatchArrayOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsPatchArrayInput` via:
//
//	VMUserSpecTargetRefsPatchArray{ VMUserSpecTargetRefsPatchArgs{...} }
type VMUserSpecTargetRefsPatchArrayInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsPatchArrayOutput() VMUserSpecTargetRefsPatchArrayOutput
	ToVMUserSpecTargetRefsPatchArrayOutputWithContext(context.Context) VMUserSpecTargetRefsPatchArrayOutput
}

type VMUserSpecTargetRefsPatchArray []VMUserSpecTargetRefsPatchInput

func (VMUserSpecTargetRefsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMUserSpecTargetRefsPatch)(nil)).Elem()
}

func (i VMUserSpecTargetRefsPatchArray) ToVMUserSpecTargetRefsPatchArrayOutput() VMUserSpecTargetRefsPatchArrayOutput {
	return i.ToVMUserSpecTargetRefsPatchArrayOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsPatchArray) ToVMUserSpecTargetRefsPatchArrayOutputWithContext(ctx context.Context) VMUserSpecTargetRefsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsPatchArrayOutput)
}

// TargetRef describes target for user traffic forwarding.
// one of target types can be chosen:
// crd or static per targetRef.
// user can define multiple targetRefs with different ref Types.
type VMUserSpecTargetRefsPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsPatchOutput) ToVMUserSpecTargetRefsPatchOutput() VMUserSpecTargetRefsPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsPatchOutput) ToVMUserSpecTargetRefsPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsPatchOutput) Crd() VMUserSpecTargetRefsCrdPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) *VMUserSpecTargetRefsCrdPatch { return v.Crd }).(VMUserSpecTargetRefsCrdPatchPtrOutput)
}

// DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.
func (o VMUserSpecTargetRefsPatchOutput) Discover_backend_ips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) *bool { return v.Discover_backend_ips }).(pulumi.BoolPtrOutput)
}

// DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
// See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
func (o VMUserSpecTargetRefsPatchOutput) Drop_src_path_prefix_parts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) *int { return v.Drop_src_path_prefix_parts }).(pulumi.IntPtrOutput)
}

// RequestHeaders represent additional http headers, that vmauth uses
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.68.0 version of vmauth
func (o VMUserSpecTargetRefsPatchOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecTargetRefsPatchOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

// LoadBalancingPolicy defines load balancing policy to use for backend urls.
// Supported policies: least_loaded, first_available.
// See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
func (o VMUserSpecTargetRefsPatchOutput) Load_balancing_policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) *string { return v.Load_balancing_policy }).(pulumi.StringPtrOutput)
}

// Paths - matched path to route.
func (o VMUserSpecTargetRefsPatchOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// ResponseHeaders represent additional http headers, that vmauth adds for request response
// in form of ["header_key: header_value"]
// multiple values for header key:
// ["header_key: value1,value2"]
// it's available since 1.93.0 version of vmauth
func (o VMUserSpecTargetRefsPatchOutput) Response_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) []string { return v.Response_headers }).(pulumi.StringArrayOutput)
}

// RetryStatusCodes defines http status codes in numeric format for request retries
// Can be defined per target or at VMUser.spec level
// e.g. [429,503]
func (o VMUserSpecTargetRefsPatchOutput) Retry_status_codes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) []int { return v.Retry_status_codes }).(pulumi.IntArrayOutput)
}

// SrcHeaders is an optional list of headers, which must match request headers.
func (o VMUserSpecTargetRefsPatchOutput) Src_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) []string { return v.Src_headers }).(pulumi.StringArrayOutput)
}

// SrcQueryArgs is an optional list of query args, which must match request URL query args.
func (o VMUserSpecTargetRefsPatchOutput) Src_query_args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) []string { return v.Src_query_args }).(pulumi.StringArrayOutput)
}

func (o VMUserSpecTargetRefsPatchOutput) Static() VMUserSpecTargetRefsStaticPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) *VMUserSpecTargetRefsStaticPatch { return v.Static }).(VMUserSpecTargetRefsStaticPatchPtrOutput)
}

func (o VMUserSpecTargetRefsPatchOutput) TargetRefBasicAuth() VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) *VMUserSpecTargetRefsTargetRefBasicAuthPatch {
		return v.TargetRefBasicAuth
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput)
}

// TargetPathSuffix allows to add some suffix to the target path
// It allows to hide tenant configuration from user with crd as ref.
// it also may contain any url encoded params.
func (o VMUserSpecTargetRefsPatchOutput) Target_path_suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsPatch) *string { return v.Target_path_suffix }).(pulumi.StringPtrOutput)
}

type VMUserSpecTargetRefsPatchArrayOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VMUserSpecTargetRefsPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsPatchArrayOutput) ToVMUserSpecTargetRefsPatchArrayOutput() VMUserSpecTargetRefsPatchArrayOutput {
	return o
}

func (o VMUserSpecTargetRefsPatchArrayOutput) ToVMUserSpecTargetRefsPatchArrayOutputWithContext(ctx context.Context) VMUserSpecTargetRefsPatchArrayOutput {
	return o
}

func (o VMUserSpecTargetRefsPatchArrayOutput) Index(i pulumi.IntInput) VMUserSpecTargetRefsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VMUserSpecTargetRefsPatch {
		return vs[0].([]VMUserSpecTargetRefsPatch)[vs[1].(int)]
	}).(VMUserSpecTargetRefsPatchOutput)
}

// Static - user defined url for traffic forward,
// for instance http://vmsingle:8429
type VMUserSpecTargetRefsStatic struct {
	// URL http url for given staticRef.
	Url *string `pulumi:"url"`
	// URLs allows setting multiple urls for load-balancing at vmauth-side.
	Urls []string `pulumi:"urls"`
}

// VMUserSpecTargetRefsStaticInput is an input type that accepts VMUserSpecTargetRefsStaticArgs and VMUserSpecTargetRefsStaticOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsStaticInput` via:
//
//	VMUserSpecTargetRefsStaticArgs{...}
type VMUserSpecTargetRefsStaticInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsStaticOutput() VMUserSpecTargetRefsStaticOutput
	ToVMUserSpecTargetRefsStaticOutputWithContext(context.Context) VMUserSpecTargetRefsStaticOutput
}

// Static - user defined url for traffic forward,
// for instance http://vmsingle:8429
type VMUserSpecTargetRefsStaticArgs struct {
	// URL http url for given staticRef.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// URLs allows setting multiple urls for load-balancing at vmauth-side.
	Urls pulumi.StringArrayInput `pulumi:"urls"`
}

func (VMUserSpecTargetRefsStaticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsStatic)(nil)).Elem()
}

func (i VMUserSpecTargetRefsStaticArgs) ToVMUserSpecTargetRefsStaticOutput() VMUserSpecTargetRefsStaticOutput {
	return i.ToVMUserSpecTargetRefsStaticOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsStaticArgs) ToVMUserSpecTargetRefsStaticOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsStaticOutput)
}

func (i VMUserSpecTargetRefsStaticArgs) ToVMUserSpecTargetRefsStaticPtrOutput() VMUserSpecTargetRefsStaticPtrOutput {
	return i.ToVMUserSpecTargetRefsStaticPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsStaticArgs) ToVMUserSpecTargetRefsStaticPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsStaticOutput).ToVMUserSpecTargetRefsStaticPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsStaticPtrInput is an input type that accepts VMUserSpecTargetRefsStaticArgs, VMUserSpecTargetRefsStaticPtr and VMUserSpecTargetRefsStaticPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsStaticPtrInput` via:
//
//	        VMUserSpecTargetRefsStaticArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsStaticPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsStaticPtrOutput() VMUserSpecTargetRefsStaticPtrOutput
	ToVMUserSpecTargetRefsStaticPtrOutputWithContext(context.Context) VMUserSpecTargetRefsStaticPtrOutput
}

type vmuserSpecTargetRefsStaticPtrType VMUserSpecTargetRefsStaticArgs

func VMUserSpecTargetRefsStaticPtr(v *VMUserSpecTargetRefsStaticArgs) VMUserSpecTargetRefsStaticPtrInput {
	return (*vmuserSpecTargetRefsStaticPtrType)(v)
}

func (*vmuserSpecTargetRefsStaticPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsStatic)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsStaticPtrType) ToVMUserSpecTargetRefsStaticPtrOutput() VMUserSpecTargetRefsStaticPtrOutput {
	return i.ToVMUserSpecTargetRefsStaticPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsStaticPtrType) ToVMUserSpecTargetRefsStaticPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsStaticPtrOutput)
}

// Static - user defined url for traffic forward,
// for instance http://vmsingle:8429
type VMUserSpecTargetRefsStaticOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsStaticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsStatic)(nil)).Elem()
}

func (o VMUserSpecTargetRefsStaticOutput) ToVMUserSpecTargetRefsStaticOutput() VMUserSpecTargetRefsStaticOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticOutput) ToVMUserSpecTargetRefsStaticOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticOutput) ToVMUserSpecTargetRefsStaticPtrOutput() VMUserSpecTargetRefsStaticPtrOutput {
	return o.ToVMUserSpecTargetRefsStaticPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsStaticOutput) ToVMUserSpecTargetRefsStaticPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsStatic) *VMUserSpecTargetRefsStatic {
		return &v
	}).(VMUserSpecTargetRefsStaticPtrOutput)
}

// URL http url for given staticRef.
func (o VMUserSpecTargetRefsStaticOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsStatic) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// URLs allows setting multiple urls for load-balancing at vmauth-side.
func (o VMUserSpecTargetRefsStaticOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsStatic) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type VMUserSpecTargetRefsStaticPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsStaticPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsStatic)(nil)).Elem()
}

func (o VMUserSpecTargetRefsStaticPtrOutput) ToVMUserSpecTargetRefsStaticPtrOutput() VMUserSpecTargetRefsStaticPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticPtrOutput) ToVMUserSpecTargetRefsStaticPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticPtrOutput) Elem() VMUserSpecTargetRefsStaticOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsStatic) VMUserSpecTargetRefsStatic {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsStatic
		return ret
	}).(VMUserSpecTargetRefsStaticOutput)
}

// URL http url for given staticRef.
func (o VMUserSpecTargetRefsStaticPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsStatic) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// URLs allows setting multiple urls for load-balancing at vmauth-side.
func (o VMUserSpecTargetRefsStaticPtrOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsStatic) []string {
		if v == nil {
			return nil
		}
		return v.Urls
	}).(pulumi.StringArrayOutput)
}

// Static - user defined url for traffic forward,
// for instance http://vmsingle:8429
type VMUserSpecTargetRefsStaticPatch struct {
	// URL http url for given staticRef.
	Url *string `pulumi:"url"`
	// URLs allows setting multiple urls for load-balancing at vmauth-side.
	Urls []string `pulumi:"urls"`
}

// VMUserSpecTargetRefsStaticPatchInput is an input type that accepts VMUserSpecTargetRefsStaticPatchArgs and VMUserSpecTargetRefsStaticPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsStaticPatchInput` via:
//
//	VMUserSpecTargetRefsStaticPatchArgs{...}
type VMUserSpecTargetRefsStaticPatchInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsStaticPatchOutput() VMUserSpecTargetRefsStaticPatchOutput
	ToVMUserSpecTargetRefsStaticPatchOutputWithContext(context.Context) VMUserSpecTargetRefsStaticPatchOutput
}

// Static - user defined url for traffic forward,
// for instance http://vmsingle:8429
type VMUserSpecTargetRefsStaticPatchArgs struct {
	// URL http url for given staticRef.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// URLs allows setting multiple urls for load-balancing at vmauth-side.
	Urls pulumi.StringArrayInput `pulumi:"urls"`
}

func (VMUserSpecTargetRefsStaticPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsStaticPatch)(nil)).Elem()
}

func (i VMUserSpecTargetRefsStaticPatchArgs) ToVMUserSpecTargetRefsStaticPatchOutput() VMUserSpecTargetRefsStaticPatchOutput {
	return i.ToVMUserSpecTargetRefsStaticPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsStaticPatchArgs) ToVMUserSpecTargetRefsStaticPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsStaticPatchOutput)
}

func (i VMUserSpecTargetRefsStaticPatchArgs) ToVMUserSpecTargetRefsStaticPatchPtrOutput() VMUserSpecTargetRefsStaticPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsStaticPatchArgs) ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsStaticPatchOutput).ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsStaticPatchPtrInput is an input type that accepts VMUserSpecTargetRefsStaticPatchArgs, VMUserSpecTargetRefsStaticPatchPtr and VMUserSpecTargetRefsStaticPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsStaticPatchPtrInput` via:
//
//	        VMUserSpecTargetRefsStaticPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsStaticPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsStaticPatchPtrOutput() VMUserSpecTargetRefsStaticPatchPtrOutput
	ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(context.Context) VMUserSpecTargetRefsStaticPatchPtrOutput
}

type vmuserSpecTargetRefsStaticPatchPtrType VMUserSpecTargetRefsStaticPatchArgs

func VMUserSpecTargetRefsStaticPatchPtr(v *VMUserSpecTargetRefsStaticPatchArgs) VMUserSpecTargetRefsStaticPatchPtrInput {
	return (*vmuserSpecTargetRefsStaticPatchPtrType)(v)
}

func (*vmuserSpecTargetRefsStaticPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsStaticPatch)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsStaticPatchPtrType) ToVMUserSpecTargetRefsStaticPatchPtrOutput() VMUserSpecTargetRefsStaticPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsStaticPatchPtrType) ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsStaticPatchPtrOutput)
}

// Static - user defined url for traffic forward,
// for instance http://vmsingle:8429
type VMUserSpecTargetRefsStaticPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsStaticPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsStaticPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsStaticPatchOutput) ToVMUserSpecTargetRefsStaticPatchOutput() VMUserSpecTargetRefsStaticPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticPatchOutput) ToVMUserSpecTargetRefsStaticPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticPatchOutput) ToVMUserSpecTargetRefsStaticPatchPtrOutput() VMUserSpecTargetRefsStaticPatchPtrOutput {
	return o.ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsStaticPatchOutput) ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsStaticPatch) *VMUserSpecTargetRefsStaticPatch {
		return &v
	}).(VMUserSpecTargetRefsStaticPatchPtrOutput)
}

// URL http url for given staticRef.
func (o VMUserSpecTargetRefsStaticPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsStaticPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// URLs allows setting multiple urls for load-balancing at vmauth-side.
func (o VMUserSpecTargetRefsStaticPatchOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsStaticPatch) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type VMUserSpecTargetRefsStaticPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsStaticPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsStaticPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsStaticPatchPtrOutput) ToVMUserSpecTargetRefsStaticPatchPtrOutput() VMUserSpecTargetRefsStaticPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticPatchPtrOutput) ToVMUserSpecTargetRefsStaticPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsStaticPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsStaticPatchPtrOutput) Elem() VMUserSpecTargetRefsStaticPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsStaticPatch) VMUserSpecTargetRefsStaticPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsStaticPatch
		return ret
	}).(VMUserSpecTargetRefsStaticPatchOutput)
}

// URL http url for given staticRef.
func (o VMUserSpecTargetRefsStaticPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsStaticPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// URLs allows setting multiple urls for load-balancing at vmauth-side.
func (o VMUserSpecTargetRefsStaticPatchPtrOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsStaticPatch) []string {
		if v == nil {
			return nil
		}
		return v.Urls
	}).(pulumi.StringArrayOutput)
}

// TargetRefBasicAuth allow an target endpoint to authenticate over basic authentication
type VMUserSpecTargetRefsTargetRefBasicAuth struct {
	Password *VMUserSpecTargetRefsTargetRefBasicAuthPassword `pulumi:"password"`
	Username *VMUserSpecTargetRefsTargetRefBasicAuthUsername `pulumi:"username"`
}

// VMUserSpecTargetRefsTargetRefBasicAuthInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthArgs and VMUserSpecTargetRefsTargetRefBasicAuthOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthInput` via:
//
//	VMUserSpecTargetRefsTargetRefBasicAuthArgs{...}
type VMUserSpecTargetRefsTargetRefBasicAuthInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthOutput() VMUserSpecTargetRefsTargetRefBasicAuthOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthOutput
}

// TargetRefBasicAuth allow an target endpoint to authenticate over basic authentication
type VMUserSpecTargetRefsTargetRefBasicAuthArgs struct {
	Password VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrInput `pulumi:"password"`
	Username VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrInput `pulumi:"username"`
}

func (VMUserSpecTargetRefsTargetRefBasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuth)(nil)).Elem()
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthOutput() VMUserSpecTargetRefsTargetRefBasicAuthOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthOutput)
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthOutput).ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsTargetRefBasicAuthPtrInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthArgs, VMUserSpecTargetRefsTargetRefBasicAuthPtr and VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthPtrInput` via:
//
//	        VMUserSpecTargetRefsTargetRefBasicAuthArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsTargetRefBasicAuthPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput
}

type vmuserSpecTargetRefsTargetRefBasicAuthPtrType VMUserSpecTargetRefsTargetRefBasicAuthArgs

func VMUserSpecTargetRefsTargetRefBasicAuthPtr(v *VMUserSpecTargetRefsTargetRefBasicAuthArgs) VMUserSpecTargetRefsTargetRefBasicAuthPtrInput {
	return (*vmuserSpecTargetRefsTargetRefBasicAuthPtrType)(v)
}

func (*vmuserSpecTargetRefsTargetRefBasicAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuth)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput)
}

// TargetRefBasicAuth allow an target endpoint to authenticate over basic authentication
type VMUserSpecTargetRefsTargetRefBasicAuthOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuth)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthOutput() VMUserSpecTargetRefsTargetRefBasicAuthOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return o.ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsTargetRefBasicAuth) *VMUserSpecTargetRefsTargetRefBasicAuth {
		return &v
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthOutput) Password() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuth) *VMUserSpecTargetRefsTargetRefBasicAuthPassword {
		return v.Password
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthOutput) Username() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuth) *VMUserSpecTargetRefsTargetRefBasicAuthUsername {
		return v.Username
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput)
}

type VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuth)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput) Elem() VMUserSpecTargetRefsTargetRefBasicAuthOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuth) VMUserSpecTargetRefsTargetRefBasicAuth {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsTargetRefBasicAuth
		return ret
	}).(VMUserSpecTargetRefsTargetRefBasicAuthOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput) Password() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuth) *VMUserSpecTargetRefsTargetRefBasicAuthPassword {
		if v == nil {
			return nil
		}
		return v.Password
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput) Username() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuth) *VMUserSpecTargetRefsTargetRefBasicAuthUsername {
		if v == nil {
			return nil
		}
		return v.Username
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput)
}

// The secret in the service scrape namespace that contains the password
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthPassword struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTargetRefsTargetRefBasicAuthPasswordInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs and VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthPasswordInput` via:
//
//	VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs{...}
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput
}

// The secret in the service scrape namespace that contains the password
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPassword)(nil)).Elem()
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput)
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput).ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs, VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtr and VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrInput` via:
//
//	        VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput
}

type vmuserSpecTargetRefsTargetRefBasicAuthPasswordPtrType VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs

func VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtr(v *VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrInput {
	return (*vmuserSpecTargetRefsTargetRefBasicAuthPasswordPtrType)(v)
}

func (*vmuserSpecTargetRefsTargetRefBasicAuthPasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthPassword)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPasswordPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPasswordPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput)
}

// The secret in the service scrape namespace that contains the password
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPassword)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return o.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsTargetRefBasicAuthPassword) *VMUserSpecTargetRefsTargetRefBasicAuthPassword {
		return &v
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPassword) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPassword) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPassword) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthPassword)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput) Elem() VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPassword) VMUserSpecTargetRefsTargetRefBasicAuthPassword {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsTargetRefBasicAuthPassword
		return ret
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPassword) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPassword) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPassword) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The secret in the service scrape namespace that contains the password
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs and VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchInput` via:
//
//	VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs{...}
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput
}

// The secret in the service scrape namespace that contains the password
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch)(nil)).Elem()
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput)
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput).ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs, VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtr and VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrInput` via:
//
//	        VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput
}

type vmuserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrType VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs

func VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtr(v *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrInput {
	return (*vmuserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrType)(v)
}

func (*vmuserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput)
}

// The secret in the service scrape namespace that contains the password
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return o.ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch {
		return &v
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput) Elem() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch
		return ret
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// TargetRefBasicAuth allow an target endpoint to authenticate over basic authentication
type VMUserSpecTargetRefsTargetRefBasicAuthPatch struct {
	Password *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch `pulumi:"password"`
	Username *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch `pulumi:"username"`
}

// VMUserSpecTargetRefsTargetRefBasicAuthPatchInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs and VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthPatchInput` via:
//
//	VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs{...}
type VMUserSpecTargetRefsTargetRefBasicAuthPatchInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthPatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthPatchOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput
}

// TargetRefBasicAuth allow an target endpoint to authenticate over basic authentication
type VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs struct {
	Password VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrInput `pulumi:"password"`
	Username VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrInput `pulumi:"username"`
}

func (VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPatch)(nil)).Elem()
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput)
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput).ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs, VMUserSpecTargetRefsTargetRefBasicAuthPatchPtr and VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrInput` via:
//
//	        VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput
}

type vmuserSpecTargetRefsTargetRefBasicAuthPatchPtrType VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs

func VMUserSpecTargetRefsTargetRefBasicAuthPatchPtr(v *VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs) VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrInput {
	return (*vmuserSpecTargetRefsTargetRefBasicAuthPatchPtrType)(v)
}

func (*vmuserSpecTargetRefsTargetRefBasicAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthPatch)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPatchPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthPatchPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput)
}

// TargetRefBasicAuth allow an target endpoint to authenticate over basic authentication
type VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return o.ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsTargetRefBasicAuthPatch) *VMUserSpecTargetRefsTargetRefBasicAuthPatch {
		return &v
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput) Password() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPatch) *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch {
		return v.Password
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput) Username() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthPatch) *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch {
		return v.Username
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput)
}

type VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthPatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput) Elem() VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPatch) VMUserSpecTargetRefsTargetRefBasicAuthPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsTargetRefBasicAuthPatch
		return ret
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput) Password() VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPatch) *VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatch {
		if v == nil {
			return nil
		}
		return v.Password
	}).(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput)
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput) Username() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthPatch) *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch {
		if v == nil {
			return nil
		}
		return v.Username
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput)
}

// The secret in the service scrape namespace that contains the username
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthUsername struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTargetRefsTargetRefBasicAuthUsernameInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs and VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthUsernameInput` via:
//
//	VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs{...}
type VMUserSpecTargetRefsTargetRefBasicAuthUsernameInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernameOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput
}

// The secret in the service scrape namespace that contains the username
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsername)(nil)).Elem()
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernameOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernameOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput)
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput).ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs, VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtr and VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrInput` via:
//
//	        VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput
}

type vmuserSpecTargetRefsTargetRefBasicAuthUsernamePtrType VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs

func VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtr(v *VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrInput {
	return (*vmuserSpecTargetRefsTargetRefBasicAuthUsernamePtrType)(v)
}

func (*vmuserSpecTargetRefsTargetRefBasicAuthUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthUsername)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthUsernamePtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthUsernamePtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput)
}

// The secret in the service scrape namespace that contains the username
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsername)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernameOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return o.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsTargetRefBasicAuthUsername) *VMUserSpecTargetRefsTargetRefBasicAuthUsername {
		return &v
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthUsername) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthUsername) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthUsername) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthUsername)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput) Elem() VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsername) VMUserSpecTargetRefsTargetRefBasicAuthUsername {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsTargetRefBasicAuthUsername
		return ret
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsername) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsername) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsername) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// The secret in the service scrape namespace that contains the username
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs and VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchInput` via:
//
//	VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs{...}
type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput
}

// The secret in the service scrape namespace that contains the username
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch)(nil)).Elem()
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput)
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput).ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(ctx)
}

// VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrInput is an input type that accepts VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs, VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtr and VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrInput` via:
//
//	        VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput
	ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput
}

type vmuserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrType VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs

func VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtr(v *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrInput {
	return (*vmuserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrType)(v)
}

func (*vmuserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch)(nil)).Elem()
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return i.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrType) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput)
}

// The secret in the service scrape namespace that contains the username
// for authentication.
// It must be at them same namespace as CRD
type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return o.ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch {
		return &v
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch)(nil)).Elem()
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput) ToVMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutputWithContext(ctx context.Context) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput {
	return o
}

func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput) Elem() VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch
		return ret
	}).(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMUserSpecTlsConfig struct {
	Ca *VMUserSpecTlsConfigCa `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile *string                  `pulumi:"caFile"`
	Cert   *VMUserSpecTlsConfigCert `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile *string `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   *string                       `pulumi:"keyFile"`
	KeySecret *VMUserSpecTlsConfigKeySecret `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName *string `pulumi:"serverName"`
}

// VMUserSpecTlsConfigInput is an input type that accepts VMUserSpecTlsConfigArgs and VMUserSpecTlsConfigOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigInput` via:
//
//	VMUserSpecTlsConfigArgs{...}
type VMUserSpecTlsConfigInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigOutput() VMUserSpecTlsConfigOutput
	ToVMUserSpecTlsConfigOutputWithContext(context.Context) VMUserSpecTlsConfigOutput
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMUserSpecTlsConfigArgs struct {
	Ca VMUserSpecTlsConfigCaPtrInput `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile pulumi.StringPtrInput           `pulumi:"caFile"`
	Cert   VMUserSpecTlsConfigCertPtrInput `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile pulumi.StringPtrInput `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   pulumi.StringPtrInput                `pulumi:"keyFile"`
	KeySecret VMUserSpecTlsConfigKeySecretPtrInput `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (VMUserSpecTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfig)(nil)).Elem()
}

func (i VMUserSpecTlsConfigArgs) ToVMUserSpecTlsConfigOutput() VMUserSpecTlsConfigOutput {
	return i.ToVMUserSpecTlsConfigOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigArgs) ToVMUserSpecTlsConfigOutputWithContext(ctx context.Context) VMUserSpecTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigOutput)
}

func (i VMUserSpecTlsConfigArgs) ToVMUserSpecTlsConfigPtrOutput() VMUserSpecTlsConfigPtrOutput {
	return i.ToVMUserSpecTlsConfigPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigArgs) ToVMUserSpecTlsConfigPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigOutput).ToVMUserSpecTlsConfigPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigPtrInput is an input type that accepts VMUserSpecTlsConfigArgs, VMUserSpecTlsConfigPtr and VMUserSpecTlsConfigPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigPtrInput` via:
//
//	        VMUserSpecTlsConfigArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigPtrOutput() VMUserSpecTlsConfigPtrOutput
	ToVMUserSpecTlsConfigPtrOutputWithContext(context.Context) VMUserSpecTlsConfigPtrOutput
}

type vmuserSpecTlsConfigPtrType VMUserSpecTlsConfigArgs

func VMUserSpecTlsConfigPtr(v *VMUserSpecTlsConfigArgs) VMUserSpecTlsConfigPtrInput {
	return (*vmuserSpecTlsConfigPtrType)(v)
}

func (*vmuserSpecTlsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfig)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigPtrType) ToVMUserSpecTlsConfigPtrOutput() VMUserSpecTlsConfigPtrOutput {
	return i.ToVMUserSpecTlsConfigPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigPtrType) ToVMUserSpecTlsConfigPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMUserSpecTlsConfigOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfig)(nil)).Elem()
}

func (o VMUserSpecTlsConfigOutput) ToVMUserSpecTlsConfigOutput() VMUserSpecTlsConfigOutput {
	return o
}

func (o VMUserSpecTlsConfigOutput) ToVMUserSpecTlsConfigOutputWithContext(ctx context.Context) VMUserSpecTlsConfigOutput {
	return o
}

func (o VMUserSpecTlsConfigOutput) ToVMUserSpecTlsConfigPtrOutput() VMUserSpecTlsConfigPtrOutput {
	return o.ToVMUserSpecTlsConfigPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigOutput) ToVMUserSpecTlsConfigPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfig) *VMUserSpecTlsConfig {
		return &v
	}).(VMUserSpecTlsConfigPtrOutput)
}

func (o VMUserSpecTlsConfigOutput) Ca() VMUserSpecTlsConfigCaPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *VMUserSpecTlsConfigCa { return v.Ca }).(VMUserSpecTlsConfigCaPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMUserSpecTlsConfigOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigOutput) Cert() VMUserSpecTlsConfigCertPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *VMUserSpecTlsConfigCert { return v.Cert }).(VMUserSpecTlsConfigCertPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMUserSpecTlsConfigOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *string { return v.CertFile }).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMUserSpecTlsConfigOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMUserSpecTlsConfigOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *string { return v.KeyFile }).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigOutput) KeySecret() VMUserSpecTlsConfigKeySecretPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *VMUserSpecTlsConfigKeySecret { return v.KeySecret }).(VMUserSpecTlsConfigKeySecretPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMUserSpecTlsConfigOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfig) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type VMUserSpecTlsConfigPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfig)(nil)).Elem()
}

func (o VMUserSpecTlsConfigPtrOutput) ToVMUserSpecTlsConfigPtrOutput() VMUserSpecTlsConfigPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigPtrOutput) ToVMUserSpecTlsConfigPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigPtrOutput) Elem() VMUserSpecTlsConfigOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) VMUserSpecTlsConfig {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfig
		return ret
	}).(VMUserSpecTlsConfigOutput)
}

func (o VMUserSpecTlsConfigPtrOutput) Ca() VMUserSpecTlsConfigCaPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *VMUserSpecTlsConfigCa {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(VMUserSpecTlsConfigCaPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMUserSpecTlsConfigPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigPtrOutput) Cert() VMUserSpecTlsConfigCertPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *VMUserSpecTlsConfigCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(VMUserSpecTlsConfigCertPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMUserSpecTlsConfigPtrOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMUserSpecTlsConfigPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMUserSpecTlsConfigPtrOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigPtrOutput) KeySecret() VMUserSpecTlsConfigKeySecretPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *VMUserSpecTlsConfigKeySecret {
		if v == nil {
			return nil
		}
		return v.KeySecret
	}).(VMUserSpecTlsConfigKeySecretPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMUserSpecTlsConfigPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMUserSpecTlsConfigCa struct {
	ConfigMap *VMUserSpecTlsConfigCaConfigMap `pulumi:"configMap"`
	Secret    *VMUserSpecTlsConfigCaSecret    `pulumi:"secret"`
}

// VMUserSpecTlsConfigCaInput is an input type that accepts VMUserSpecTlsConfigCaArgs and VMUserSpecTlsConfigCaOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaInput` via:
//
//	VMUserSpecTlsConfigCaArgs{...}
type VMUserSpecTlsConfigCaInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaOutput() VMUserSpecTlsConfigCaOutput
	ToVMUserSpecTlsConfigCaOutputWithContext(context.Context) VMUserSpecTlsConfigCaOutput
}

// Stuct containing the CA cert to use for the targets.
type VMUserSpecTlsConfigCaArgs struct {
	ConfigMap VMUserSpecTlsConfigCaConfigMapPtrInput `pulumi:"configMap"`
	Secret    VMUserSpecTlsConfigCaSecretPtrInput    `pulumi:"secret"`
}

func (VMUserSpecTlsConfigCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCa)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCaArgs) ToVMUserSpecTlsConfigCaOutput() VMUserSpecTlsConfigCaOutput {
	return i.ToVMUserSpecTlsConfigCaOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaArgs) ToVMUserSpecTlsConfigCaOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaOutput)
}

func (i VMUserSpecTlsConfigCaArgs) ToVMUserSpecTlsConfigCaPtrOutput() VMUserSpecTlsConfigCaPtrOutput {
	return i.ToVMUserSpecTlsConfigCaPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaArgs) ToVMUserSpecTlsConfigCaPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaOutput).ToVMUserSpecTlsConfigCaPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCaPtrInput is an input type that accepts VMUserSpecTlsConfigCaArgs, VMUserSpecTlsConfigCaPtr and VMUserSpecTlsConfigCaPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaPtrInput` via:
//
//	        VMUserSpecTlsConfigCaArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCaPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaPtrOutput() VMUserSpecTlsConfigCaPtrOutput
	ToVMUserSpecTlsConfigCaPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCaPtrOutput
}

type vmuserSpecTlsConfigCaPtrType VMUserSpecTlsConfigCaArgs

func VMUserSpecTlsConfigCaPtr(v *VMUserSpecTlsConfigCaArgs) VMUserSpecTlsConfigCaPtrInput {
	return (*vmuserSpecTlsConfigCaPtrType)(v)
}

func (*vmuserSpecTlsConfigCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCa)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCaPtrType) ToVMUserSpecTlsConfigCaPtrOutput() VMUserSpecTlsConfigCaPtrOutput {
	return i.ToVMUserSpecTlsConfigCaPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCaPtrType) ToVMUserSpecTlsConfigCaPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMUserSpecTlsConfigCaOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCa)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaOutput) ToVMUserSpecTlsConfigCaOutput() VMUserSpecTlsConfigCaOutput {
	return o
}

func (o VMUserSpecTlsConfigCaOutput) ToVMUserSpecTlsConfigCaOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaOutput {
	return o
}

func (o VMUserSpecTlsConfigCaOutput) ToVMUserSpecTlsConfigCaPtrOutput() VMUserSpecTlsConfigCaPtrOutput {
	return o.ToVMUserSpecTlsConfigCaPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCaOutput) ToVMUserSpecTlsConfigCaPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCa) *VMUserSpecTlsConfigCa {
		return &v
	}).(VMUserSpecTlsConfigCaPtrOutput)
}

func (o VMUserSpecTlsConfigCaOutput) ConfigMap() VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCa) *VMUserSpecTlsConfigCaConfigMap { return v.ConfigMap }).(VMUserSpecTlsConfigCaConfigMapPtrOutput)
}

func (o VMUserSpecTlsConfigCaOutput) Secret() VMUserSpecTlsConfigCaSecretPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCa) *VMUserSpecTlsConfigCaSecret { return v.Secret }).(VMUserSpecTlsConfigCaSecretPtrOutput)
}

type VMUserSpecTlsConfigCaPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCa)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaPtrOutput) ToVMUserSpecTlsConfigCaPtrOutput() VMUserSpecTlsConfigCaPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaPtrOutput) ToVMUserSpecTlsConfigCaPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaPtrOutput) Elem() VMUserSpecTlsConfigCaOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCa) VMUserSpecTlsConfigCa {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCa
		return ret
	}).(VMUserSpecTlsConfigCaOutput)
}

func (o VMUserSpecTlsConfigCaPtrOutput) ConfigMap() VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCa) *VMUserSpecTlsConfigCaConfigMap {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMUserSpecTlsConfigCaConfigMapPtrOutput)
}

func (o VMUserSpecTlsConfigCaPtrOutput) Secret() VMUserSpecTlsConfigCaSecretPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCa) *VMUserSpecTlsConfigCaSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMUserSpecTlsConfigCaSecretPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCaConfigMap struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCaConfigMapInput is an input type that accepts VMUserSpecTlsConfigCaConfigMap and VMUserSpecTlsConfigCaConfigMapOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaConfigMapInput` via:
//
//	VMUserSpecTlsConfigCaConfigMap{ "key": VMUserSpecTlsConfigCaConfigArgs{...} }
type VMUserSpecTlsConfigCaConfigMapInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaConfigMapOutput() VMUserSpecTlsConfigCaConfigMapOutput
	ToVMUserSpecTlsConfigCaConfigMapOutputWithContext(context.Context) VMUserSpecTlsConfigCaConfigMapOutput
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCaConfigMapArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCaConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMap)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCaConfigMapArgs) ToVMUserSpecTlsConfigCaConfigMapOutput() VMUserSpecTlsConfigCaConfigMapOutput {
	return i.ToVMUserSpecTlsConfigCaConfigMapOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaConfigMapArgs) ToVMUserSpecTlsConfigCaConfigMapOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaConfigMapOutput)
}

func (i VMUserSpecTlsConfigCaConfigMapArgs) ToVMUserSpecTlsConfigCaConfigMapPtrOutput() VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return i.ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaConfigMapArgs) ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaConfigMapOutput).ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCaConfigMapPtrInput is an input type that accepts VMUserSpecTlsConfigCaConfigMapArgs, VMUserSpecTlsConfigCaConfigMapPtr and VMUserSpecTlsConfigCaConfigMapPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaConfigMapPtrInput` via:
//
//	        VMUserSpecTlsConfigCaConfigMapArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCaConfigMapPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaConfigMapPtrOutput() VMUserSpecTlsConfigCaConfigMapPtrOutput
	ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCaConfigMapPtrOutput
}

type vmuserSpecTlsConfigCaConfigMapPtrType VMUserSpecTlsConfigCaConfigMapArgs

func VMUserSpecTlsConfigCaConfigMapPtr(v *VMUserSpecTlsConfigCaConfigMapArgs) VMUserSpecTlsConfigCaConfigMapPtrInput {
	return (*vmuserSpecTlsConfigCaConfigMapPtrType)(v)
}

func (*vmuserSpecTlsConfigCaConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaConfigMap)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCaConfigMapPtrType) ToVMUserSpecTlsConfigCaConfigMapPtrOutput() VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return i.ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCaConfigMapPtrType) ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaConfigMapPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCaConfigMapOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMap)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaConfigMapOutput) ToVMUserSpecTlsConfigCaConfigMapOutput() VMUserSpecTlsConfigCaConfigMapOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapOutput) ToVMUserSpecTlsConfigCaConfigMapOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapOutput) ToVMUserSpecTlsConfigCaConfigMapPtrOutput() VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return o.ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCaConfigMapOutput) ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCaConfigMap) *VMUserSpecTlsConfigCaConfigMap {
		return &v
	}).(VMUserSpecTlsConfigCaConfigMapPtrOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCaConfigMapOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaConfigMap) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCaConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCaConfigMapPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaConfigMap)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaConfigMapPtrOutput) ToVMUserSpecTlsConfigCaConfigMapPtrOutput() VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapPtrOutput) ToVMUserSpecTlsConfigCaConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapPtrOutput) Elem() VMUserSpecTlsConfigCaConfigMapOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMap) VMUserSpecTlsConfigCaConfigMap {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCaConfigMap
		return ret
	}).(VMUserSpecTlsConfigCaConfigMapOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCaConfigMapPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCaConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCaConfigMapPatch struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCaConfigMapPatchInput is an input type that accepts VMUserSpecTlsConfigCaConfigMapPatchArgs and VMUserSpecTlsConfigCaConfigMapPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaConfigMapPatchInput` via:
//
//	VMUserSpecTlsConfigCaConfigMapPatchArgs{...}
type VMUserSpecTlsConfigCaConfigMapPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaConfigMapPatchOutput() VMUserSpecTlsConfigCaConfigMapPatchOutput
	ToVMUserSpecTlsConfigCaConfigMapPatchOutputWithContext(context.Context) VMUserSpecTlsConfigCaConfigMapPatchOutput
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCaConfigMapPatchArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCaConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCaConfigMapPatchArgs) ToVMUserSpecTlsConfigCaConfigMapPatchOutput() VMUserSpecTlsConfigCaConfigMapPatchOutput {
	return i.ToVMUserSpecTlsConfigCaConfigMapPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaConfigMapPatchArgs) ToVMUserSpecTlsConfigCaConfigMapPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaConfigMapPatchOutput)
}

func (i VMUserSpecTlsConfigCaConfigMapPatchArgs) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutput() VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaConfigMapPatchArgs) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaConfigMapPatchOutput).ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCaConfigMapPatchPtrInput is an input type that accepts VMUserSpecTlsConfigCaConfigMapPatchArgs, VMUserSpecTlsConfigCaConfigMapPatchPtr and VMUserSpecTlsConfigCaConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaConfigMapPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigCaConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCaConfigMapPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutput() VMUserSpecTlsConfigCaConfigMapPatchPtrOutput
	ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCaConfigMapPatchPtrOutput
}

type vmuserSpecTlsConfigCaConfigMapPatchPtrType VMUserSpecTlsConfigCaConfigMapPatchArgs

func VMUserSpecTlsConfigCaConfigMapPatchPtr(v *VMUserSpecTlsConfigCaConfigMapPatchArgs) VMUserSpecTlsConfigCaConfigMapPatchPtrInput {
	return (*vmuserSpecTlsConfigCaConfigMapPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigCaConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCaConfigMapPatchPtrType) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutput() VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCaConfigMapPatchPtrType) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaConfigMapPatchPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCaConfigMapPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaConfigMapPatchOutput) ToVMUserSpecTlsConfigCaConfigMapPatchOutput() VMUserSpecTlsConfigCaConfigMapPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapPatchOutput) ToVMUserSpecTlsConfigCaConfigMapPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapPatchOutput) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutput() VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCaConfigMapPatchOutput) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCaConfigMapPatch) *VMUserSpecTlsConfigCaConfigMapPatch {
		return &v
	}).(VMUserSpecTlsConfigCaConfigMapPatchPtrOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCaConfigMapPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaConfigMapPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCaConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCaConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaConfigMapPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaConfigMapPatchPtrOutput) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutput() VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapPatchPtrOutput) ToVMUserSpecTlsConfigCaConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaConfigMapPatchPtrOutput) Elem() VMUserSpecTlsConfigCaConfigMapPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMapPatch) VMUserSpecTlsConfigCaConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCaConfigMapPatch
		return ret
	}).(VMUserSpecTlsConfigCaConfigMapPatchOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCaConfigMapPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCaConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMUserSpecTlsConfigCaPatch struct {
	ConfigMap *VMUserSpecTlsConfigCaConfigMapPatch `pulumi:"configMap"`
	Secret    *VMUserSpecTlsConfigCaSecretPatch    `pulumi:"secret"`
}

// VMUserSpecTlsConfigCaPatchInput is an input type that accepts VMUserSpecTlsConfigCaPatchArgs and VMUserSpecTlsConfigCaPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaPatchInput` via:
//
//	VMUserSpecTlsConfigCaPatchArgs{...}
type VMUserSpecTlsConfigCaPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaPatchOutput() VMUserSpecTlsConfigCaPatchOutput
	ToVMUserSpecTlsConfigCaPatchOutputWithContext(context.Context) VMUserSpecTlsConfigCaPatchOutput
}

// Stuct containing the CA cert to use for the targets.
type VMUserSpecTlsConfigCaPatchArgs struct {
	ConfigMap VMUserSpecTlsConfigCaConfigMapPatchPtrInput `pulumi:"configMap"`
	Secret    VMUserSpecTlsConfigCaSecretPatchPtrInput    `pulumi:"secret"`
}

func (VMUserSpecTlsConfigCaPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCaPatchArgs) ToVMUserSpecTlsConfigCaPatchOutput() VMUserSpecTlsConfigCaPatchOutput {
	return i.ToVMUserSpecTlsConfigCaPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaPatchArgs) ToVMUserSpecTlsConfigCaPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaPatchOutput)
}

func (i VMUserSpecTlsConfigCaPatchArgs) ToVMUserSpecTlsConfigCaPatchPtrOutput() VMUserSpecTlsConfigCaPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaPatchArgs) ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaPatchOutput).ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCaPatchPtrInput is an input type that accepts VMUserSpecTlsConfigCaPatchArgs, VMUserSpecTlsConfigCaPatchPtr and VMUserSpecTlsConfigCaPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigCaPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCaPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaPatchPtrOutput() VMUserSpecTlsConfigCaPatchPtrOutput
	ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCaPatchPtrOutput
}

type vmuserSpecTlsConfigCaPatchPtrType VMUserSpecTlsConfigCaPatchArgs

func VMUserSpecTlsConfigCaPatchPtr(v *VMUserSpecTlsConfigCaPatchArgs) VMUserSpecTlsConfigCaPatchPtrInput {
	return (*vmuserSpecTlsConfigCaPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigCaPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCaPatchPtrType) ToVMUserSpecTlsConfigCaPatchPtrOutput() VMUserSpecTlsConfigCaPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCaPatchPtrType) ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaPatchPtrOutput)
}

// Stuct containing the CA cert to use for the targets.
type VMUserSpecTlsConfigCaPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaPatchOutput) ToVMUserSpecTlsConfigCaPatchOutput() VMUserSpecTlsConfigCaPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCaPatchOutput) ToVMUserSpecTlsConfigCaPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCaPatchOutput) ToVMUserSpecTlsConfigCaPatchPtrOutput() VMUserSpecTlsConfigCaPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCaPatchOutput) ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCaPatch) *VMUserSpecTlsConfigCaPatch {
		return &v
	}).(VMUserSpecTlsConfigCaPatchPtrOutput)
}

func (o VMUserSpecTlsConfigCaPatchOutput) ConfigMap() VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaPatch) *VMUserSpecTlsConfigCaConfigMapPatch { return v.ConfigMap }).(VMUserSpecTlsConfigCaConfigMapPatchPtrOutput)
}

func (o VMUserSpecTlsConfigCaPatchOutput) Secret() VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaPatch) *VMUserSpecTlsConfigCaSecretPatch { return v.Secret }).(VMUserSpecTlsConfigCaSecretPatchPtrOutput)
}

type VMUserSpecTlsConfigCaPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaPatchPtrOutput) ToVMUserSpecTlsConfigCaPatchPtrOutput() VMUserSpecTlsConfigCaPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaPatchPtrOutput) ToVMUserSpecTlsConfigCaPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaPatchPtrOutput) Elem() VMUserSpecTlsConfigCaPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaPatch) VMUserSpecTlsConfigCaPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCaPatch
		return ret
	}).(VMUserSpecTlsConfigCaPatchOutput)
}

func (o VMUserSpecTlsConfigCaPatchPtrOutput) ConfigMap() VMUserSpecTlsConfigCaConfigMapPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaPatch) *VMUserSpecTlsConfigCaConfigMapPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMUserSpecTlsConfigCaConfigMapPatchPtrOutput)
}

func (o VMUserSpecTlsConfigCaPatchPtrOutput) Secret() VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaPatch) *VMUserSpecTlsConfigCaSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMUserSpecTlsConfigCaSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCaSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCaSecretInput is an input type that accepts VMUserSpecTlsConfigCaSecretArgs and VMUserSpecTlsConfigCaSecretOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaSecretInput` via:
//
//	VMUserSpecTlsConfigCaSecretArgs{...}
type VMUserSpecTlsConfigCaSecretInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaSecretOutput() VMUserSpecTlsConfigCaSecretOutput
	ToVMUserSpecTlsConfigCaSecretOutputWithContext(context.Context) VMUserSpecTlsConfigCaSecretOutput
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCaSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCaSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaSecret)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCaSecretArgs) ToVMUserSpecTlsConfigCaSecretOutput() VMUserSpecTlsConfigCaSecretOutput {
	return i.ToVMUserSpecTlsConfigCaSecretOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaSecretArgs) ToVMUserSpecTlsConfigCaSecretOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaSecretOutput)
}

func (i VMUserSpecTlsConfigCaSecretArgs) ToVMUserSpecTlsConfigCaSecretPtrOutput() VMUserSpecTlsConfigCaSecretPtrOutput {
	return i.ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaSecretArgs) ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaSecretOutput).ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCaSecretPtrInput is an input type that accepts VMUserSpecTlsConfigCaSecretArgs, VMUserSpecTlsConfigCaSecretPtr and VMUserSpecTlsConfigCaSecretPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaSecretPtrInput` via:
//
//	        VMUserSpecTlsConfigCaSecretArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCaSecretPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaSecretPtrOutput() VMUserSpecTlsConfigCaSecretPtrOutput
	ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCaSecretPtrOutput
}

type vmuserSpecTlsConfigCaSecretPtrType VMUserSpecTlsConfigCaSecretArgs

func VMUserSpecTlsConfigCaSecretPtr(v *VMUserSpecTlsConfigCaSecretArgs) VMUserSpecTlsConfigCaSecretPtrInput {
	return (*vmuserSpecTlsConfigCaSecretPtrType)(v)
}

func (*vmuserSpecTlsConfigCaSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaSecret)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCaSecretPtrType) ToVMUserSpecTlsConfigCaSecretPtrOutput() VMUserSpecTlsConfigCaSecretPtrOutput {
	return i.ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCaSecretPtrType) ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaSecretPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCaSecretOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaSecret)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaSecretOutput) ToVMUserSpecTlsConfigCaSecretOutput() VMUserSpecTlsConfigCaSecretOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretOutput) ToVMUserSpecTlsConfigCaSecretOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretOutput) ToVMUserSpecTlsConfigCaSecretPtrOutput() VMUserSpecTlsConfigCaSecretPtrOutput {
	return o.ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCaSecretOutput) ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCaSecret) *VMUserSpecTlsConfigCaSecret {
		return &v
	}).(VMUserSpecTlsConfigCaSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCaSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCaSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCaSecretPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaSecret)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaSecretPtrOutput) ToVMUserSpecTlsConfigCaSecretPtrOutput() VMUserSpecTlsConfigCaSecretPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretPtrOutput) ToVMUserSpecTlsConfigCaSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretPtrOutput) Elem() VMUserSpecTlsConfigCaSecretOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecret) VMUserSpecTlsConfigCaSecret {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCaSecret
		return ret
	}).(VMUserSpecTlsConfigCaSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCaSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCaSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCaSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCaSecretPatchInput is an input type that accepts VMUserSpecTlsConfigCaSecretPatchArgs and VMUserSpecTlsConfigCaSecretPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaSecretPatchInput` via:
//
//	VMUserSpecTlsConfigCaSecretPatchArgs{...}
type VMUserSpecTlsConfigCaSecretPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaSecretPatchOutput() VMUserSpecTlsConfigCaSecretPatchOutput
	ToVMUserSpecTlsConfigCaSecretPatchOutputWithContext(context.Context) VMUserSpecTlsConfigCaSecretPatchOutput
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCaSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCaSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaSecretPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCaSecretPatchArgs) ToVMUserSpecTlsConfigCaSecretPatchOutput() VMUserSpecTlsConfigCaSecretPatchOutput {
	return i.ToVMUserSpecTlsConfigCaSecretPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaSecretPatchArgs) ToVMUserSpecTlsConfigCaSecretPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaSecretPatchOutput)
}

func (i VMUserSpecTlsConfigCaSecretPatchArgs) ToVMUserSpecTlsConfigCaSecretPatchPtrOutput() VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCaSecretPatchArgs) ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaSecretPatchOutput).ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCaSecretPatchPtrInput is an input type that accepts VMUserSpecTlsConfigCaSecretPatchArgs, VMUserSpecTlsConfigCaSecretPatchPtr and VMUserSpecTlsConfigCaSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCaSecretPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigCaSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCaSecretPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCaSecretPatchPtrOutput() VMUserSpecTlsConfigCaSecretPatchPtrOutput
	ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCaSecretPatchPtrOutput
}

type vmuserSpecTlsConfigCaSecretPatchPtrType VMUserSpecTlsConfigCaSecretPatchArgs

func VMUserSpecTlsConfigCaSecretPatchPtr(v *VMUserSpecTlsConfigCaSecretPatchArgs) VMUserSpecTlsConfigCaSecretPatchPtrInput {
	return (*vmuserSpecTlsConfigCaSecretPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigCaSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaSecretPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCaSecretPatchPtrType) ToVMUserSpecTlsConfigCaSecretPatchPtrOutput() VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCaSecretPatchPtrType) ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCaSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCaSecretPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCaSecretPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaSecretPatchOutput) ToVMUserSpecTlsConfigCaSecretPatchOutput() VMUserSpecTlsConfigCaSecretPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretPatchOutput) ToVMUserSpecTlsConfigCaSecretPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretPatchOutput) ToVMUserSpecTlsConfigCaSecretPatchPtrOutput() VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCaSecretPatchOutput) ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCaSecretPatch) *VMUserSpecTlsConfigCaSecretPatch {
		return &v
	}).(VMUserSpecTlsConfigCaSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCaSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCaSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCaSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCaSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCaSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCaSecretPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCaSecretPatchPtrOutput) ToVMUserSpecTlsConfigCaSecretPatchPtrOutput() VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretPatchPtrOutput) ToVMUserSpecTlsConfigCaSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCaSecretPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCaSecretPatchPtrOutput) Elem() VMUserSpecTlsConfigCaSecretPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecretPatch) VMUserSpecTlsConfigCaSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCaSecretPatch
		return ret
	}).(VMUserSpecTlsConfigCaSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCaSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCaSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCaSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCaSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMUserSpecTlsConfigCert struct {
	ConfigMap *VMUserSpecTlsConfigCertConfigMap `pulumi:"configMap"`
	Secret    *VMUserSpecTlsConfigCertSecret    `pulumi:"secret"`
}

// VMUserSpecTlsConfigCertInput is an input type that accepts VMUserSpecTlsConfigCertArgs and VMUserSpecTlsConfigCertOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertInput` via:
//
//	VMUserSpecTlsConfigCertArgs{...}
type VMUserSpecTlsConfigCertInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertOutput() VMUserSpecTlsConfigCertOutput
	ToVMUserSpecTlsConfigCertOutputWithContext(context.Context) VMUserSpecTlsConfigCertOutput
}

// Struct containing the client cert file for the targets.
type VMUserSpecTlsConfigCertArgs struct {
	ConfigMap VMUserSpecTlsConfigCertConfigMapPtrInput `pulumi:"configMap"`
	Secret    VMUserSpecTlsConfigCertSecretPtrInput    `pulumi:"secret"`
}

func (VMUserSpecTlsConfigCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCert)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCertArgs) ToVMUserSpecTlsConfigCertOutput() VMUserSpecTlsConfigCertOutput {
	return i.ToVMUserSpecTlsConfigCertOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertArgs) ToVMUserSpecTlsConfigCertOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertOutput)
}

func (i VMUserSpecTlsConfigCertArgs) ToVMUserSpecTlsConfigCertPtrOutput() VMUserSpecTlsConfigCertPtrOutput {
	return i.ToVMUserSpecTlsConfigCertPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertArgs) ToVMUserSpecTlsConfigCertPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertOutput).ToVMUserSpecTlsConfigCertPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCertPtrInput is an input type that accepts VMUserSpecTlsConfigCertArgs, VMUserSpecTlsConfigCertPtr and VMUserSpecTlsConfigCertPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertPtrInput` via:
//
//	        VMUserSpecTlsConfigCertArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCertPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertPtrOutput() VMUserSpecTlsConfigCertPtrOutput
	ToVMUserSpecTlsConfigCertPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCertPtrOutput
}

type vmuserSpecTlsConfigCertPtrType VMUserSpecTlsConfigCertArgs

func VMUserSpecTlsConfigCertPtr(v *VMUserSpecTlsConfigCertArgs) VMUserSpecTlsConfigCertPtrInput {
	return (*vmuserSpecTlsConfigCertPtrType)(v)
}

func (*vmuserSpecTlsConfigCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCert)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCertPtrType) ToVMUserSpecTlsConfigCertPtrOutput() VMUserSpecTlsConfigCertPtrOutput {
	return i.ToVMUserSpecTlsConfigCertPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCertPtrType) ToVMUserSpecTlsConfigCertPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMUserSpecTlsConfigCertOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCert)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertOutput) ToVMUserSpecTlsConfigCertOutput() VMUserSpecTlsConfigCertOutput {
	return o
}

func (o VMUserSpecTlsConfigCertOutput) ToVMUserSpecTlsConfigCertOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertOutput {
	return o
}

func (o VMUserSpecTlsConfigCertOutput) ToVMUserSpecTlsConfigCertPtrOutput() VMUserSpecTlsConfigCertPtrOutput {
	return o.ToVMUserSpecTlsConfigCertPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCertOutput) ToVMUserSpecTlsConfigCertPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCert) *VMUserSpecTlsConfigCert {
		return &v
	}).(VMUserSpecTlsConfigCertPtrOutput)
}

func (o VMUserSpecTlsConfigCertOutput) ConfigMap() VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCert) *VMUserSpecTlsConfigCertConfigMap { return v.ConfigMap }).(VMUserSpecTlsConfigCertConfigMapPtrOutput)
}

func (o VMUserSpecTlsConfigCertOutput) Secret() VMUserSpecTlsConfigCertSecretPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCert) *VMUserSpecTlsConfigCertSecret { return v.Secret }).(VMUserSpecTlsConfigCertSecretPtrOutput)
}

type VMUserSpecTlsConfigCertPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCert)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertPtrOutput) ToVMUserSpecTlsConfigCertPtrOutput() VMUserSpecTlsConfigCertPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertPtrOutput) ToVMUserSpecTlsConfigCertPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertPtrOutput) Elem() VMUserSpecTlsConfigCertOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCert) VMUserSpecTlsConfigCert {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCert
		return ret
	}).(VMUserSpecTlsConfigCertOutput)
}

func (o VMUserSpecTlsConfigCertPtrOutput) ConfigMap() VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCert) *VMUserSpecTlsConfigCertConfigMap {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMUserSpecTlsConfigCertConfigMapPtrOutput)
}

func (o VMUserSpecTlsConfigCertPtrOutput) Secret() VMUserSpecTlsConfigCertSecretPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCert) *VMUserSpecTlsConfigCertSecret {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMUserSpecTlsConfigCertSecretPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCertConfigMap struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCertConfigMapInput is an input type that accepts VMUserSpecTlsConfigCertConfigMap and VMUserSpecTlsConfigCertConfigMapOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertConfigMapInput` via:
//
//	VMUserSpecTlsConfigCertConfigMap{ "key": VMUserSpecTlsConfigCertConfigArgs{...} }
type VMUserSpecTlsConfigCertConfigMapInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertConfigMapOutput() VMUserSpecTlsConfigCertConfigMapOutput
	ToVMUserSpecTlsConfigCertConfigMapOutputWithContext(context.Context) VMUserSpecTlsConfigCertConfigMapOutput
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCertConfigMapArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCertConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMap)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCertConfigMapArgs) ToVMUserSpecTlsConfigCertConfigMapOutput() VMUserSpecTlsConfigCertConfigMapOutput {
	return i.ToVMUserSpecTlsConfigCertConfigMapOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertConfigMapArgs) ToVMUserSpecTlsConfigCertConfigMapOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertConfigMapOutput)
}

func (i VMUserSpecTlsConfigCertConfigMapArgs) ToVMUserSpecTlsConfigCertConfigMapPtrOutput() VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return i.ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertConfigMapArgs) ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertConfigMapOutput).ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCertConfigMapPtrInput is an input type that accepts VMUserSpecTlsConfigCertConfigMapArgs, VMUserSpecTlsConfigCertConfigMapPtr and VMUserSpecTlsConfigCertConfigMapPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertConfigMapPtrInput` via:
//
//	        VMUserSpecTlsConfigCertConfigMapArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCertConfigMapPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertConfigMapPtrOutput() VMUserSpecTlsConfigCertConfigMapPtrOutput
	ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCertConfigMapPtrOutput
}

type vmuserSpecTlsConfigCertConfigMapPtrType VMUserSpecTlsConfigCertConfigMapArgs

func VMUserSpecTlsConfigCertConfigMapPtr(v *VMUserSpecTlsConfigCertConfigMapArgs) VMUserSpecTlsConfigCertConfigMapPtrInput {
	return (*vmuserSpecTlsConfigCertConfigMapPtrType)(v)
}

func (*vmuserSpecTlsConfigCertConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertConfigMap)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCertConfigMapPtrType) ToVMUserSpecTlsConfigCertConfigMapPtrOutput() VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return i.ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCertConfigMapPtrType) ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertConfigMapPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCertConfigMapOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMap)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertConfigMapOutput) ToVMUserSpecTlsConfigCertConfigMapOutput() VMUserSpecTlsConfigCertConfigMapOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapOutput) ToVMUserSpecTlsConfigCertConfigMapOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapOutput) ToVMUserSpecTlsConfigCertConfigMapPtrOutput() VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return o.ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCertConfigMapOutput) ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCertConfigMap) *VMUserSpecTlsConfigCertConfigMap {
		return &v
	}).(VMUserSpecTlsConfigCertConfigMapPtrOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCertConfigMapOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertConfigMap) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCertConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCertConfigMapPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertConfigMap)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertConfigMapPtrOutput) ToVMUserSpecTlsConfigCertConfigMapPtrOutput() VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapPtrOutput) ToVMUserSpecTlsConfigCertConfigMapPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapPtrOutput) Elem() VMUserSpecTlsConfigCertConfigMapOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMap) VMUserSpecTlsConfigCertConfigMap {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCertConfigMap
		return ret
	}).(VMUserSpecTlsConfigCertConfigMapOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCertConfigMapPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCertConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCertConfigMapPatch struct {
	// The key to select.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCertConfigMapPatchInput is an input type that accepts VMUserSpecTlsConfigCertConfigMapPatchArgs and VMUserSpecTlsConfigCertConfigMapPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertConfigMapPatchInput` via:
//
//	VMUserSpecTlsConfigCertConfigMapPatchArgs{...}
type VMUserSpecTlsConfigCertConfigMapPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertConfigMapPatchOutput() VMUserSpecTlsConfigCertConfigMapPatchOutput
	ToVMUserSpecTlsConfigCertConfigMapPatchOutputWithContext(context.Context) VMUserSpecTlsConfigCertConfigMapPatchOutput
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCertConfigMapPatchArgs struct {
	// The key to select.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the ConfigMap or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCertConfigMapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCertConfigMapPatchArgs) ToVMUserSpecTlsConfigCertConfigMapPatchOutput() VMUserSpecTlsConfigCertConfigMapPatchOutput {
	return i.ToVMUserSpecTlsConfigCertConfigMapPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertConfigMapPatchArgs) ToVMUserSpecTlsConfigCertConfigMapPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertConfigMapPatchOutput)
}

func (i VMUserSpecTlsConfigCertConfigMapPatchArgs) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutput() VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertConfigMapPatchArgs) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertConfigMapPatchOutput).ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCertConfigMapPatchPtrInput is an input type that accepts VMUserSpecTlsConfigCertConfigMapPatchArgs, VMUserSpecTlsConfigCertConfigMapPatchPtr and VMUserSpecTlsConfigCertConfigMapPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertConfigMapPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigCertConfigMapPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCertConfigMapPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutput() VMUserSpecTlsConfigCertConfigMapPatchPtrOutput
	ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCertConfigMapPatchPtrOutput
}

type vmuserSpecTlsConfigCertConfigMapPatchPtrType VMUserSpecTlsConfigCertConfigMapPatchArgs

func VMUserSpecTlsConfigCertConfigMapPatchPtr(v *VMUserSpecTlsConfigCertConfigMapPatchArgs) VMUserSpecTlsConfigCertConfigMapPatchPtrInput {
	return (*vmuserSpecTlsConfigCertConfigMapPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigCertConfigMapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCertConfigMapPatchPtrType) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutput() VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCertConfigMapPatchPtrType) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertConfigMapPatchPtrOutput)
}

// ConfigMap containing data to use for the targets.
type VMUserSpecTlsConfigCertConfigMapPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertConfigMapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertConfigMapPatchOutput) ToVMUserSpecTlsConfigCertConfigMapPatchOutput() VMUserSpecTlsConfigCertConfigMapPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapPatchOutput) ToVMUserSpecTlsConfigCertConfigMapPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapPatchOutput) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutput() VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCertConfigMapPatchOutput) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCertConfigMapPatch) *VMUserSpecTlsConfigCertConfigMapPatch {
		return &v
	}).(VMUserSpecTlsConfigCertConfigMapPatchPtrOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCertConfigMapPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertConfigMapPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertConfigMapPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertConfigMapPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCertConfigMapPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertConfigMapPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCertConfigMapPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertConfigMapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertConfigMapPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertConfigMapPatchPtrOutput) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutput() VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapPatchPtrOutput) ToVMUserSpecTlsConfigCertConfigMapPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertConfigMapPatchPtrOutput) Elem() VMUserSpecTlsConfigCertConfigMapPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMapPatch) VMUserSpecTlsConfigCertConfigMapPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCertConfigMapPatch
		return ret
	}).(VMUserSpecTlsConfigCertConfigMapPatchOutput)
}

// The key to select.
func (o VMUserSpecTlsConfigCertConfigMapPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertConfigMapPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the ConfigMap or its key must be defined
func (o VMUserSpecTlsConfigCertConfigMapPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertConfigMapPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMUserSpecTlsConfigCertPatch struct {
	ConfigMap *VMUserSpecTlsConfigCertConfigMapPatch `pulumi:"configMap"`
	Secret    *VMUserSpecTlsConfigCertSecretPatch    `pulumi:"secret"`
}

// VMUserSpecTlsConfigCertPatchInput is an input type that accepts VMUserSpecTlsConfigCertPatchArgs and VMUserSpecTlsConfigCertPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertPatchInput` via:
//
//	VMUserSpecTlsConfigCertPatchArgs{...}
type VMUserSpecTlsConfigCertPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertPatchOutput() VMUserSpecTlsConfigCertPatchOutput
	ToVMUserSpecTlsConfigCertPatchOutputWithContext(context.Context) VMUserSpecTlsConfigCertPatchOutput
}

// Struct containing the client cert file for the targets.
type VMUserSpecTlsConfigCertPatchArgs struct {
	ConfigMap VMUserSpecTlsConfigCertConfigMapPatchPtrInput `pulumi:"configMap"`
	Secret    VMUserSpecTlsConfigCertSecretPatchPtrInput    `pulumi:"secret"`
}

func (VMUserSpecTlsConfigCertPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCertPatchArgs) ToVMUserSpecTlsConfigCertPatchOutput() VMUserSpecTlsConfigCertPatchOutput {
	return i.ToVMUserSpecTlsConfigCertPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertPatchArgs) ToVMUserSpecTlsConfigCertPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertPatchOutput)
}

func (i VMUserSpecTlsConfigCertPatchArgs) ToVMUserSpecTlsConfigCertPatchPtrOutput() VMUserSpecTlsConfigCertPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertPatchArgs) ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertPatchOutput).ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCertPatchPtrInput is an input type that accepts VMUserSpecTlsConfigCertPatchArgs, VMUserSpecTlsConfigCertPatchPtr and VMUserSpecTlsConfigCertPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigCertPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCertPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertPatchPtrOutput() VMUserSpecTlsConfigCertPatchPtrOutput
	ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCertPatchPtrOutput
}

type vmuserSpecTlsConfigCertPatchPtrType VMUserSpecTlsConfigCertPatchArgs

func VMUserSpecTlsConfigCertPatchPtr(v *VMUserSpecTlsConfigCertPatchArgs) VMUserSpecTlsConfigCertPatchPtrInput {
	return (*vmuserSpecTlsConfigCertPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigCertPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCertPatchPtrType) ToVMUserSpecTlsConfigCertPatchPtrOutput() VMUserSpecTlsConfigCertPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCertPatchPtrType) ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertPatchPtrOutput)
}

// Struct containing the client cert file for the targets.
type VMUserSpecTlsConfigCertPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertPatchOutput) ToVMUserSpecTlsConfigCertPatchOutput() VMUserSpecTlsConfigCertPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCertPatchOutput) ToVMUserSpecTlsConfigCertPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCertPatchOutput) ToVMUserSpecTlsConfigCertPatchPtrOutput() VMUserSpecTlsConfigCertPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCertPatchOutput) ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCertPatch) *VMUserSpecTlsConfigCertPatch {
		return &v
	}).(VMUserSpecTlsConfigCertPatchPtrOutput)
}

func (o VMUserSpecTlsConfigCertPatchOutput) ConfigMap() VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertPatch) *VMUserSpecTlsConfigCertConfigMapPatch { return v.ConfigMap }).(VMUserSpecTlsConfigCertConfigMapPatchPtrOutput)
}

func (o VMUserSpecTlsConfigCertPatchOutput) Secret() VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertPatch) *VMUserSpecTlsConfigCertSecretPatch { return v.Secret }).(VMUserSpecTlsConfigCertSecretPatchPtrOutput)
}

type VMUserSpecTlsConfigCertPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertPatchPtrOutput) ToVMUserSpecTlsConfigCertPatchPtrOutput() VMUserSpecTlsConfigCertPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertPatchPtrOutput) ToVMUserSpecTlsConfigCertPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertPatchPtrOutput) Elem() VMUserSpecTlsConfigCertPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertPatch) VMUserSpecTlsConfigCertPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCertPatch
		return ret
	}).(VMUserSpecTlsConfigCertPatchOutput)
}

func (o VMUserSpecTlsConfigCertPatchPtrOutput) ConfigMap() VMUserSpecTlsConfigCertConfigMapPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertPatch) *VMUserSpecTlsConfigCertConfigMapPatch {
		if v == nil {
			return nil
		}
		return v.ConfigMap
	}).(VMUserSpecTlsConfigCertConfigMapPatchPtrOutput)
}

func (o VMUserSpecTlsConfigCertPatchPtrOutput) Secret() VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertPatch) *VMUserSpecTlsConfigCertSecretPatch {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(VMUserSpecTlsConfigCertSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCertSecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCertSecretInput is an input type that accepts VMUserSpecTlsConfigCertSecretArgs and VMUserSpecTlsConfigCertSecretOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertSecretInput` via:
//
//	VMUserSpecTlsConfigCertSecretArgs{...}
type VMUserSpecTlsConfigCertSecretInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertSecretOutput() VMUserSpecTlsConfigCertSecretOutput
	ToVMUserSpecTlsConfigCertSecretOutputWithContext(context.Context) VMUserSpecTlsConfigCertSecretOutput
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCertSecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCertSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertSecret)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCertSecretArgs) ToVMUserSpecTlsConfigCertSecretOutput() VMUserSpecTlsConfigCertSecretOutput {
	return i.ToVMUserSpecTlsConfigCertSecretOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertSecretArgs) ToVMUserSpecTlsConfigCertSecretOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertSecretOutput)
}

func (i VMUserSpecTlsConfigCertSecretArgs) ToVMUserSpecTlsConfigCertSecretPtrOutput() VMUserSpecTlsConfigCertSecretPtrOutput {
	return i.ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertSecretArgs) ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertSecretOutput).ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCertSecretPtrInput is an input type that accepts VMUserSpecTlsConfigCertSecretArgs, VMUserSpecTlsConfigCertSecretPtr and VMUserSpecTlsConfigCertSecretPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertSecretPtrInput` via:
//
//	        VMUserSpecTlsConfigCertSecretArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCertSecretPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertSecretPtrOutput() VMUserSpecTlsConfigCertSecretPtrOutput
	ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCertSecretPtrOutput
}

type vmuserSpecTlsConfigCertSecretPtrType VMUserSpecTlsConfigCertSecretArgs

func VMUserSpecTlsConfigCertSecretPtr(v *VMUserSpecTlsConfigCertSecretArgs) VMUserSpecTlsConfigCertSecretPtrInput {
	return (*vmuserSpecTlsConfigCertSecretPtrType)(v)
}

func (*vmuserSpecTlsConfigCertSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertSecret)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCertSecretPtrType) ToVMUserSpecTlsConfigCertSecretPtrOutput() VMUserSpecTlsConfigCertSecretPtrOutput {
	return i.ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCertSecretPtrType) ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertSecretPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCertSecretOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertSecret)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertSecretOutput) ToVMUserSpecTlsConfigCertSecretOutput() VMUserSpecTlsConfigCertSecretOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretOutput) ToVMUserSpecTlsConfigCertSecretOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretOutput) ToVMUserSpecTlsConfigCertSecretPtrOutput() VMUserSpecTlsConfigCertSecretPtrOutput {
	return o.ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCertSecretOutput) ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCertSecret) *VMUserSpecTlsConfigCertSecret {
		return &v
	}).(VMUserSpecTlsConfigCertSecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCertSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCertSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCertSecretPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertSecret)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertSecretPtrOutput) ToVMUserSpecTlsConfigCertSecretPtrOutput() VMUserSpecTlsConfigCertSecretPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretPtrOutput) ToVMUserSpecTlsConfigCertSecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretPtrOutput) Elem() VMUserSpecTlsConfigCertSecretOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecret) VMUserSpecTlsConfigCertSecret {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCertSecret
		return ret
	}).(VMUserSpecTlsConfigCertSecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCertSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCertSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCertSecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigCertSecretPatchInput is an input type that accepts VMUserSpecTlsConfigCertSecretPatchArgs and VMUserSpecTlsConfigCertSecretPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertSecretPatchInput` via:
//
//	VMUserSpecTlsConfigCertSecretPatchArgs{...}
type VMUserSpecTlsConfigCertSecretPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertSecretPatchOutput() VMUserSpecTlsConfigCertSecretPatchOutput
	ToVMUserSpecTlsConfigCertSecretPatchOutputWithContext(context.Context) VMUserSpecTlsConfigCertSecretPatchOutput
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCertSecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigCertSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertSecretPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigCertSecretPatchArgs) ToVMUserSpecTlsConfigCertSecretPatchOutput() VMUserSpecTlsConfigCertSecretPatchOutput {
	return i.ToVMUserSpecTlsConfigCertSecretPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertSecretPatchArgs) ToVMUserSpecTlsConfigCertSecretPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertSecretPatchOutput)
}

func (i VMUserSpecTlsConfigCertSecretPatchArgs) ToVMUserSpecTlsConfigCertSecretPatchPtrOutput() VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigCertSecretPatchArgs) ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertSecretPatchOutput).ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigCertSecretPatchPtrInput is an input type that accepts VMUserSpecTlsConfigCertSecretPatchArgs, VMUserSpecTlsConfigCertSecretPatchPtr and VMUserSpecTlsConfigCertSecretPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigCertSecretPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigCertSecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigCertSecretPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigCertSecretPatchPtrOutput() VMUserSpecTlsConfigCertSecretPatchPtrOutput
	ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigCertSecretPatchPtrOutput
}

type vmuserSpecTlsConfigCertSecretPatchPtrType VMUserSpecTlsConfigCertSecretPatchArgs

func VMUserSpecTlsConfigCertSecretPatchPtr(v *VMUserSpecTlsConfigCertSecretPatchArgs) VMUserSpecTlsConfigCertSecretPatchPtrInput {
	return (*vmuserSpecTlsConfigCertSecretPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigCertSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertSecretPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigCertSecretPatchPtrType) ToVMUserSpecTlsConfigCertSecretPatchPtrOutput() VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigCertSecretPatchPtrType) ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigCertSecretPatchPtrOutput)
}

// Secret containing data to use for the targets.
type VMUserSpecTlsConfigCertSecretPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigCertSecretPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertSecretPatchOutput) ToVMUserSpecTlsConfigCertSecretPatchOutput() VMUserSpecTlsConfigCertSecretPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretPatchOutput) ToVMUserSpecTlsConfigCertSecretPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretPatchOutput) ToVMUserSpecTlsConfigCertSecretPatchPtrOutput() VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigCertSecretPatchOutput) ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigCertSecretPatch) *VMUserSpecTlsConfigCertSecretPatch {
		return &v
	}).(VMUserSpecTlsConfigCertSecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCertSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCertSecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigCertSecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigCertSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigCertSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigCertSecretPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigCertSecretPatchPtrOutput) ToVMUserSpecTlsConfigCertSecretPatchPtrOutput() VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretPatchPtrOutput) ToVMUserSpecTlsConfigCertSecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigCertSecretPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigCertSecretPatchPtrOutput) Elem() VMUserSpecTlsConfigCertSecretPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecretPatch) VMUserSpecTlsConfigCertSecretPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigCertSecretPatch
		return ret
	}).(VMUserSpecTlsConfigCertSecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigCertSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigCertSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigCertSecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigCertSecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing the client key file for the targets.
type VMUserSpecTlsConfigKeySecret struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigKeySecretInput is an input type that accepts VMUserSpecTlsConfigKeySecretArgs and VMUserSpecTlsConfigKeySecretOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigKeySecretInput` via:
//
//	VMUserSpecTlsConfigKeySecretArgs{...}
type VMUserSpecTlsConfigKeySecretInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigKeySecretOutput() VMUserSpecTlsConfigKeySecretOutput
	ToVMUserSpecTlsConfigKeySecretOutputWithContext(context.Context) VMUserSpecTlsConfigKeySecretOutput
}

// Secret containing the client key file for the targets.
type VMUserSpecTlsConfigKeySecretArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigKeySecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigKeySecret)(nil)).Elem()
}

func (i VMUserSpecTlsConfigKeySecretArgs) ToVMUserSpecTlsConfigKeySecretOutput() VMUserSpecTlsConfigKeySecretOutput {
	return i.ToVMUserSpecTlsConfigKeySecretOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigKeySecretArgs) ToVMUserSpecTlsConfigKeySecretOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigKeySecretOutput)
}

func (i VMUserSpecTlsConfigKeySecretArgs) ToVMUserSpecTlsConfigKeySecretPtrOutput() VMUserSpecTlsConfigKeySecretPtrOutput {
	return i.ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigKeySecretArgs) ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigKeySecretOutput).ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigKeySecretPtrInput is an input type that accepts VMUserSpecTlsConfigKeySecretArgs, VMUserSpecTlsConfigKeySecretPtr and VMUserSpecTlsConfigKeySecretPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigKeySecretPtrInput` via:
//
//	        VMUserSpecTlsConfigKeySecretArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigKeySecretPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigKeySecretPtrOutput() VMUserSpecTlsConfigKeySecretPtrOutput
	ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(context.Context) VMUserSpecTlsConfigKeySecretPtrOutput
}

type vmuserSpecTlsConfigKeySecretPtrType VMUserSpecTlsConfigKeySecretArgs

func VMUserSpecTlsConfigKeySecretPtr(v *VMUserSpecTlsConfigKeySecretArgs) VMUserSpecTlsConfigKeySecretPtrInput {
	return (*vmuserSpecTlsConfigKeySecretPtrType)(v)
}

func (*vmuserSpecTlsConfigKeySecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigKeySecret)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigKeySecretPtrType) ToVMUserSpecTlsConfigKeySecretPtrOutput() VMUserSpecTlsConfigKeySecretPtrOutput {
	return i.ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigKeySecretPtrType) ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigKeySecretPtrOutput)
}

// Secret containing the client key file for the targets.
type VMUserSpecTlsConfigKeySecretOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigKeySecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigKeySecret)(nil)).Elem()
}

func (o VMUserSpecTlsConfigKeySecretOutput) ToVMUserSpecTlsConfigKeySecretOutput() VMUserSpecTlsConfigKeySecretOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretOutput) ToVMUserSpecTlsConfigKeySecretOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretOutput) ToVMUserSpecTlsConfigKeySecretPtrOutput() VMUserSpecTlsConfigKeySecretPtrOutput {
	return o.ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigKeySecretOutput) ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigKeySecret) *VMUserSpecTlsConfigKeySecret {
		return &v
	}).(VMUserSpecTlsConfigKeySecretPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigKeySecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigKeySecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigKeySecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigKeySecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigKeySecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigKeySecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigKeySecretPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigKeySecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigKeySecret)(nil)).Elem()
}

func (o VMUserSpecTlsConfigKeySecretPtrOutput) ToVMUserSpecTlsConfigKeySecretPtrOutput() VMUserSpecTlsConfigKeySecretPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretPtrOutput) ToVMUserSpecTlsConfigKeySecretPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretPtrOutput) Elem() VMUserSpecTlsConfigKeySecretOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecret) VMUserSpecTlsConfigKeySecret {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigKeySecret
		return ret
	}).(VMUserSpecTlsConfigKeySecretOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigKeySecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigKeySecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigKeySecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Secret containing the client key file for the targets.
type VMUserSpecTlsConfigKeySecretPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTlsConfigKeySecretPatchInput is an input type that accepts VMUserSpecTlsConfigKeySecretPatchArgs and VMUserSpecTlsConfigKeySecretPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigKeySecretPatchInput` via:
//
//	VMUserSpecTlsConfigKeySecretPatchArgs{...}
type VMUserSpecTlsConfigKeySecretPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigKeySecretPatchOutput() VMUserSpecTlsConfigKeySecretPatchOutput
	ToVMUserSpecTlsConfigKeySecretPatchOutputWithContext(context.Context) VMUserSpecTlsConfigKeySecretPatchOutput
}

// Secret containing the client key file for the targets.
type VMUserSpecTlsConfigKeySecretPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTlsConfigKeySecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigKeySecretPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigKeySecretPatchArgs) ToVMUserSpecTlsConfigKeySecretPatchOutput() VMUserSpecTlsConfigKeySecretPatchOutput {
	return i.ToVMUserSpecTlsConfigKeySecretPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigKeySecretPatchArgs) ToVMUserSpecTlsConfigKeySecretPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigKeySecretPatchOutput)
}

func (i VMUserSpecTlsConfigKeySecretPatchArgs) ToVMUserSpecTlsConfigKeySecretPatchPtrOutput() VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigKeySecretPatchArgs) ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigKeySecretPatchOutput).ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigKeySecretPatchPtrInput is an input type that accepts VMUserSpecTlsConfigKeySecretPatchArgs, VMUserSpecTlsConfigKeySecretPatchPtr and VMUserSpecTlsConfigKeySecretPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigKeySecretPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigKeySecretPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigKeySecretPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigKeySecretPatchPtrOutput() VMUserSpecTlsConfigKeySecretPatchPtrOutput
	ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigKeySecretPatchPtrOutput
}

type vmuserSpecTlsConfigKeySecretPatchPtrType VMUserSpecTlsConfigKeySecretPatchArgs

func VMUserSpecTlsConfigKeySecretPatchPtr(v *VMUserSpecTlsConfigKeySecretPatchArgs) VMUserSpecTlsConfigKeySecretPatchPtrInput {
	return (*vmuserSpecTlsConfigKeySecretPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigKeySecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigKeySecretPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigKeySecretPatchPtrType) ToVMUserSpecTlsConfigKeySecretPatchPtrOutput() VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigKeySecretPatchPtrType) ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigKeySecretPatchPtrOutput)
}

// Secret containing the client key file for the targets.
type VMUserSpecTlsConfigKeySecretPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigKeySecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigKeySecretPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigKeySecretPatchOutput) ToVMUserSpecTlsConfigKeySecretPatchOutput() VMUserSpecTlsConfigKeySecretPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretPatchOutput) ToVMUserSpecTlsConfigKeySecretPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretPatchOutput) ToVMUserSpecTlsConfigKeySecretPatchPtrOutput() VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigKeySecretPatchOutput) ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigKeySecretPatch) *VMUserSpecTlsConfigKeySecretPatch {
		return &v
	}).(VMUserSpecTlsConfigKeySecretPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigKeySecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigKeySecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigKeySecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigKeySecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigKeySecretPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigKeySecretPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTlsConfigKeySecretPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigKeySecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigKeySecretPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigKeySecretPatchPtrOutput) ToVMUserSpecTlsConfigKeySecretPatchPtrOutput() VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretPatchPtrOutput) ToVMUserSpecTlsConfigKeySecretPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigKeySecretPatchPtrOutput) Elem() VMUserSpecTlsConfigKeySecretPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecretPatch) VMUserSpecTlsConfigKeySecretPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigKeySecretPatch
		return ret
	}).(VMUserSpecTlsConfigKeySecretPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTlsConfigKeySecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTlsConfigKeySecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTlsConfigKeySecretPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigKeySecretPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMUserSpecTlsConfigPatch struct {
	Ca *VMUserSpecTlsConfigCaPatch `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile *string                       `pulumi:"caFile"`
	Cert   *VMUserSpecTlsConfigCertPatch `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile *string `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   *string                            `pulumi:"keyFile"`
	KeySecret *VMUserSpecTlsConfigKeySecretPatch `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName *string `pulumi:"serverName"`
}

// VMUserSpecTlsConfigPatchInput is an input type that accepts VMUserSpecTlsConfigPatchArgs and VMUserSpecTlsConfigPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigPatchInput` via:
//
//	VMUserSpecTlsConfigPatchArgs{...}
type VMUserSpecTlsConfigPatchInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigPatchOutput() VMUserSpecTlsConfigPatchOutput
	ToVMUserSpecTlsConfigPatchOutputWithContext(context.Context) VMUserSpecTlsConfigPatchOutput
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMUserSpecTlsConfigPatchArgs struct {
	Ca VMUserSpecTlsConfigCaPatchPtrInput `pulumi:"ca"`
	// Path to the CA cert in the container to use for the targets.
	CaFile pulumi.StringPtrInput                `pulumi:"caFile"`
	Cert   VMUserSpecTlsConfigCertPatchPtrInput `pulumi:"cert"`
	// Path to the client cert file in the container for the targets.
	CertFile pulumi.StringPtrInput `pulumi:"certFile"`
	// Disable target certificate validation.
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
	// Path to the client key file in the container for the targets.
	KeyFile   pulumi.StringPtrInput                     `pulumi:"keyFile"`
	KeySecret VMUserSpecTlsConfigKeySecretPatchPtrInput `pulumi:"keySecret"`
	// Used to verify the hostname for the targets.
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (VMUserSpecTlsConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigPatch)(nil)).Elem()
}

func (i VMUserSpecTlsConfigPatchArgs) ToVMUserSpecTlsConfigPatchOutput() VMUserSpecTlsConfigPatchOutput {
	return i.ToVMUserSpecTlsConfigPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigPatchArgs) ToVMUserSpecTlsConfigPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigPatchOutput)
}

func (i VMUserSpecTlsConfigPatchArgs) ToVMUserSpecTlsConfigPatchPtrOutput() VMUserSpecTlsConfigPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTlsConfigPatchArgs) ToVMUserSpecTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigPatchOutput).ToVMUserSpecTlsConfigPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTlsConfigPatchPtrInput is an input type that accepts VMUserSpecTlsConfigPatchArgs, VMUserSpecTlsConfigPatchPtr and VMUserSpecTlsConfigPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTlsConfigPatchPtrInput` via:
//
//	        VMUserSpecTlsConfigPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTlsConfigPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTlsConfigPatchPtrOutput() VMUserSpecTlsConfigPatchPtrOutput
	ToVMUserSpecTlsConfigPatchPtrOutputWithContext(context.Context) VMUserSpecTlsConfigPatchPtrOutput
}

type vmuserSpecTlsConfigPatchPtrType VMUserSpecTlsConfigPatchArgs

func VMUserSpecTlsConfigPatchPtr(v *VMUserSpecTlsConfigPatchArgs) VMUserSpecTlsConfigPatchPtrInput {
	return (*vmuserSpecTlsConfigPatchPtrType)(v)
}

func (*vmuserSpecTlsConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigPatch)(nil)).Elem()
}

func (i *vmuserSpecTlsConfigPatchPtrType) ToVMUserSpecTlsConfigPatchPtrOutput() VMUserSpecTlsConfigPatchPtrOutput {
	return i.ToVMUserSpecTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTlsConfigPatchPtrType) ToVMUserSpecTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTlsConfigPatchPtrOutput)
}

// TLSConfig specifies TLSConfig configuration parameters.
type VMUserSpecTlsConfigPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTlsConfigPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigPatchOutput) ToVMUserSpecTlsConfigPatchOutput() VMUserSpecTlsConfigPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigPatchOutput) ToVMUserSpecTlsConfigPatchOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPatchOutput {
	return o
}

func (o VMUserSpecTlsConfigPatchOutput) ToVMUserSpecTlsConfigPatchPtrOutput() VMUserSpecTlsConfigPatchPtrOutput {
	return o.ToVMUserSpecTlsConfigPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTlsConfigPatchOutput) ToVMUserSpecTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTlsConfigPatch) *VMUserSpecTlsConfigPatch {
		return &v
	}).(VMUserSpecTlsConfigPatchPtrOutput)
}

func (o VMUserSpecTlsConfigPatchOutput) Ca() VMUserSpecTlsConfigCaPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *VMUserSpecTlsConfigCaPatch { return v.Ca }).(VMUserSpecTlsConfigCaPatchPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMUserSpecTlsConfigPatchOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigPatchOutput) Cert() VMUserSpecTlsConfigCertPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *VMUserSpecTlsConfigCertPatch { return v.Cert }).(VMUserSpecTlsConfigCertPatchPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMUserSpecTlsConfigPatchOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *string { return v.CertFile }).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMUserSpecTlsConfigPatchOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMUserSpecTlsConfigPatchOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *string { return v.KeyFile }).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigPatchOutput) KeySecret() VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *VMUserSpecTlsConfigKeySecretPatch { return v.KeySecret }).(VMUserSpecTlsConfigKeySecretPatchPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMUserSpecTlsConfigPatchOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTlsConfigPatch) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type VMUserSpecTlsConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTlsConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTlsConfigPatch)(nil)).Elem()
}

func (o VMUserSpecTlsConfigPatchPtrOutput) ToVMUserSpecTlsConfigPatchPtrOutput() VMUserSpecTlsConfigPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigPatchPtrOutput) ToVMUserSpecTlsConfigPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTlsConfigPatchPtrOutput {
	return o
}

func (o VMUserSpecTlsConfigPatchPtrOutput) Elem() VMUserSpecTlsConfigPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) VMUserSpecTlsConfigPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTlsConfigPatch
		return ret
	}).(VMUserSpecTlsConfigPatchOutput)
}

func (o VMUserSpecTlsConfigPatchPtrOutput) Ca() VMUserSpecTlsConfigCaPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *VMUserSpecTlsConfigCaPatch {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(VMUserSpecTlsConfigCaPatchPtrOutput)
}

// Path to the CA cert in the container to use for the targets.
func (o VMUserSpecTlsConfigPatchPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigPatchPtrOutput) Cert() VMUserSpecTlsConfigCertPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *VMUserSpecTlsConfigCertPatch {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(VMUserSpecTlsConfigCertPatchPtrOutput)
}

// Path to the client cert file in the container for the targets.
func (o VMUserSpecTlsConfigPatchPtrOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.CertFile
	}).(pulumi.StringPtrOutput)
}

// Disable target certificate validation.
func (o VMUserSpecTlsConfigPatchPtrOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSkipVerify
	}).(pulumi.BoolPtrOutput)
}

// Path to the client key file in the container for the targets.
func (o VMUserSpecTlsConfigPatchPtrOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.KeyFile
	}).(pulumi.StringPtrOutput)
}

func (o VMUserSpecTlsConfigPatchPtrOutput) KeySecret() VMUserSpecTlsConfigKeySecretPatchPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *VMUserSpecTlsConfigKeySecretPatch {
		if v == nil {
			return nil
		}
		return v.KeySecret
	}).(VMUserSpecTlsConfigKeySecretPatchPtrOutput)
}

// Used to verify the hostname for the targets.
func (o VMUserSpecTlsConfigPatchPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTlsConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(pulumi.StringPtrOutput)
}

// TokenRef allows fetching token from user-created secrets by its name and key.
type VMUserSpecTokenRef struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTokenRefInput is an input type that accepts VMUserSpecTokenRefArgs and VMUserSpecTokenRefOutput values.
// You can construct a concrete instance of `VMUserSpecTokenRefInput` via:
//
//	VMUserSpecTokenRefArgs{...}
type VMUserSpecTokenRefInput interface {
	pulumi.Input

	ToVMUserSpecTokenRefOutput() VMUserSpecTokenRefOutput
	ToVMUserSpecTokenRefOutputWithContext(context.Context) VMUserSpecTokenRefOutput
}

// TokenRef allows fetching token from user-created secrets by its name and key.
type VMUserSpecTokenRefArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTokenRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTokenRef)(nil)).Elem()
}

func (i VMUserSpecTokenRefArgs) ToVMUserSpecTokenRefOutput() VMUserSpecTokenRefOutput {
	return i.ToVMUserSpecTokenRefOutputWithContext(context.Background())
}

func (i VMUserSpecTokenRefArgs) ToVMUserSpecTokenRefOutputWithContext(ctx context.Context) VMUserSpecTokenRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTokenRefOutput)
}

func (i VMUserSpecTokenRefArgs) ToVMUserSpecTokenRefPtrOutput() VMUserSpecTokenRefPtrOutput {
	return i.ToVMUserSpecTokenRefPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTokenRefArgs) ToVMUserSpecTokenRefPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTokenRefOutput).ToVMUserSpecTokenRefPtrOutputWithContext(ctx)
}

// VMUserSpecTokenRefPtrInput is an input type that accepts VMUserSpecTokenRefArgs, VMUserSpecTokenRefPtr and VMUserSpecTokenRefPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTokenRefPtrInput` via:
//
//	        VMUserSpecTokenRefArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTokenRefPtrInput interface {
	pulumi.Input

	ToVMUserSpecTokenRefPtrOutput() VMUserSpecTokenRefPtrOutput
	ToVMUserSpecTokenRefPtrOutputWithContext(context.Context) VMUserSpecTokenRefPtrOutput
}

type vmuserSpecTokenRefPtrType VMUserSpecTokenRefArgs

func VMUserSpecTokenRefPtr(v *VMUserSpecTokenRefArgs) VMUserSpecTokenRefPtrInput {
	return (*vmuserSpecTokenRefPtrType)(v)
}

func (*vmuserSpecTokenRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTokenRef)(nil)).Elem()
}

func (i *vmuserSpecTokenRefPtrType) ToVMUserSpecTokenRefPtrOutput() VMUserSpecTokenRefPtrOutput {
	return i.ToVMUserSpecTokenRefPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTokenRefPtrType) ToVMUserSpecTokenRefPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTokenRefPtrOutput)
}

// TokenRef allows fetching token from user-created secrets by its name and key.
type VMUserSpecTokenRefOutput struct{ *pulumi.OutputState }

func (VMUserSpecTokenRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTokenRef)(nil)).Elem()
}

func (o VMUserSpecTokenRefOutput) ToVMUserSpecTokenRefOutput() VMUserSpecTokenRefOutput {
	return o
}

func (o VMUserSpecTokenRefOutput) ToVMUserSpecTokenRefOutputWithContext(ctx context.Context) VMUserSpecTokenRefOutput {
	return o
}

func (o VMUserSpecTokenRefOutput) ToVMUserSpecTokenRefPtrOutput() VMUserSpecTokenRefPtrOutput {
	return o.ToVMUserSpecTokenRefPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTokenRefOutput) ToVMUserSpecTokenRefPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTokenRef) *VMUserSpecTokenRef {
		return &v
	}).(VMUserSpecTokenRefPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTokenRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTokenRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTokenRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTokenRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTokenRefOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTokenRef) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTokenRefPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTokenRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTokenRef)(nil)).Elem()
}

func (o VMUserSpecTokenRefPtrOutput) ToVMUserSpecTokenRefPtrOutput() VMUserSpecTokenRefPtrOutput {
	return o
}

func (o VMUserSpecTokenRefPtrOutput) ToVMUserSpecTokenRefPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPtrOutput {
	return o
}

func (o VMUserSpecTokenRefPtrOutput) Elem() VMUserSpecTokenRefOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRef) VMUserSpecTokenRef {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTokenRef
		return ret
	}).(VMUserSpecTokenRefOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTokenRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTokenRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTokenRefPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRef) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// TokenRef allows fetching token from user-created secrets by its name and key.
type VMUserSpecTokenRefPatch struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key *string `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// VMUserSpecTokenRefPatchInput is an input type that accepts VMUserSpecTokenRefPatchArgs and VMUserSpecTokenRefPatchOutput values.
// You can construct a concrete instance of `VMUserSpecTokenRefPatchInput` via:
//
//	VMUserSpecTokenRefPatchArgs{...}
type VMUserSpecTokenRefPatchInput interface {
	pulumi.Input

	ToVMUserSpecTokenRefPatchOutput() VMUserSpecTokenRefPatchOutput
	ToVMUserSpecTokenRefPatchOutputWithContext(context.Context) VMUserSpecTokenRefPatchOutput
}

// TokenRef allows fetching token from user-created secrets by its name and key.
type VMUserSpecTokenRefPatchArgs struct {
	// The key of the secret to select from.  Must be a valid secret key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

func (VMUserSpecTokenRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTokenRefPatch)(nil)).Elem()
}

func (i VMUserSpecTokenRefPatchArgs) ToVMUserSpecTokenRefPatchOutput() VMUserSpecTokenRefPatchOutput {
	return i.ToVMUserSpecTokenRefPatchOutputWithContext(context.Background())
}

func (i VMUserSpecTokenRefPatchArgs) ToVMUserSpecTokenRefPatchOutputWithContext(ctx context.Context) VMUserSpecTokenRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTokenRefPatchOutput)
}

func (i VMUserSpecTokenRefPatchArgs) ToVMUserSpecTokenRefPatchPtrOutput() VMUserSpecTokenRefPatchPtrOutput {
	return i.ToVMUserSpecTokenRefPatchPtrOutputWithContext(context.Background())
}

func (i VMUserSpecTokenRefPatchArgs) ToVMUserSpecTokenRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTokenRefPatchOutput).ToVMUserSpecTokenRefPatchPtrOutputWithContext(ctx)
}

// VMUserSpecTokenRefPatchPtrInput is an input type that accepts VMUserSpecTokenRefPatchArgs, VMUserSpecTokenRefPatchPtr and VMUserSpecTokenRefPatchPtrOutput values.
// You can construct a concrete instance of `VMUserSpecTokenRefPatchPtrInput` via:
//
//	        VMUserSpecTokenRefPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserSpecTokenRefPatchPtrInput interface {
	pulumi.Input

	ToVMUserSpecTokenRefPatchPtrOutput() VMUserSpecTokenRefPatchPtrOutput
	ToVMUserSpecTokenRefPatchPtrOutputWithContext(context.Context) VMUserSpecTokenRefPatchPtrOutput
}

type vmuserSpecTokenRefPatchPtrType VMUserSpecTokenRefPatchArgs

func VMUserSpecTokenRefPatchPtr(v *VMUserSpecTokenRefPatchArgs) VMUserSpecTokenRefPatchPtrInput {
	return (*vmuserSpecTokenRefPatchPtrType)(v)
}

func (*vmuserSpecTokenRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTokenRefPatch)(nil)).Elem()
}

func (i *vmuserSpecTokenRefPatchPtrType) ToVMUserSpecTokenRefPatchPtrOutput() VMUserSpecTokenRefPatchPtrOutput {
	return i.ToVMUserSpecTokenRefPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserSpecTokenRefPatchPtrType) ToVMUserSpecTokenRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserSpecTokenRefPatchPtrOutput)
}

// TokenRef allows fetching token from user-created secrets by its name and key.
type VMUserSpecTokenRefPatchOutput struct{ *pulumi.OutputState }

func (VMUserSpecTokenRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserSpecTokenRefPatch)(nil)).Elem()
}

func (o VMUserSpecTokenRefPatchOutput) ToVMUserSpecTokenRefPatchOutput() VMUserSpecTokenRefPatchOutput {
	return o
}

func (o VMUserSpecTokenRefPatchOutput) ToVMUserSpecTokenRefPatchOutputWithContext(ctx context.Context) VMUserSpecTokenRefPatchOutput {
	return o
}

func (o VMUserSpecTokenRefPatchOutput) ToVMUserSpecTokenRefPatchPtrOutput() VMUserSpecTokenRefPatchPtrOutput {
	return o.ToVMUserSpecTokenRefPatchPtrOutputWithContext(context.Background())
}

func (o VMUserSpecTokenRefPatchOutput) ToVMUserSpecTokenRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserSpecTokenRefPatch) *VMUserSpecTokenRefPatch {
		return &v
	}).(VMUserSpecTokenRefPatchPtrOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTokenRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTokenRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTokenRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserSpecTokenRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTokenRefPatchOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VMUserSpecTokenRefPatch) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type VMUserSpecTokenRefPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserSpecTokenRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserSpecTokenRefPatch)(nil)).Elem()
}

func (o VMUserSpecTokenRefPatchPtrOutput) ToVMUserSpecTokenRefPatchPtrOutput() VMUserSpecTokenRefPatchPtrOutput {
	return o
}

func (o VMUserSpecTokenRefPatchPtrOutput) ToVMUserSpecTokenRefPatchPtrOutputWithContext(ctx context.Context) VMUserSpecTokenRefPatchPtrOutput {
	return o
}

func (o VMUserSpecTokenRefPatchPtrOutput) Elem() VMUserSpecTokenRefPatchOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRefPatch) VMUserSpecTokenRefPatch {
		if v != nil {
			return *v
		}
		var ret VMUserSpecTokenRefPatch
		return ret
	}).(VMUserSpecTokenRefPatchOutput)
}

// The key of the secret to select from.  Must be a valid secret key.
func (o VMUserSpecTokenRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o VMUserSpecTokenRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specify whether the Secret or its key must be defined
func (o VMUserSpecTokenRefPatchPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VMUserSpecTokenRefPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// VMUserStatus defines the observed state of VMUser
type VMUserStatus struct {
	// LastSyncError contains error message for unsuccessful config generation
	// for given user
	LastSyncError *string `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status *string `pulumi:"status"`
}

// VMUserStatusInput is an input type that accepts VMUserStatusArgs and VMUserStatusOutput values.
// You can construct a concrete instance of `VMUserStatusInput` via:
//
//	VMUserStatusArgs{...}
type VMUserStatusInput interface {
	pulumi.Input

	ToVMUserStatusOutput() VMUserStatusOutput
	ToVMUserStatusOutputWithContext(context.Context) VMUserStatusOutput
}

// VMUserStatus defines the observed state of VMUser
type VMUserStatusArgs struct {
	// LastSyncError contains error message for unsuccessful config generation
	// for given user
	LastSyncError pulumi.StringPtrInput `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (VMUserStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserStatus)(nil)).Elem()
}

func (i VMUserStatusArgs) ToVMUserStatusOutput() VMUserStatusOutput {
	return i.ToVMUserStatusOutputWithContext(context.Background())
}

func (i VMUserStatusArgs) ToVMUserStatusOutputWithContext(ctx context.Context) VMUserStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserStatusOutput)
}

func (i VMUserStatusArgs) ToVMUserStatusPtrOutput() VMUserStatusPtrOutput {
	return i.ToVMUserStatusPtrOutputWithContext(context.Background())
}

func (i VMUserStatusArgs) ToVMUserStatusPtrOutputWithContext(ctx context.Context) VMUserStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserStatusOutput).ToVMUserStatusPtrOutputWithContext(ctx)
}

// VMUserStatusPtrInput is an input type that accepts VMUserStatusArgs, VMUserStatusPtr and VMUserStatusPtrOutput values.
// You can construct a concrete instance of `VMUserStatusPtrInput` via:
//
//	        VMUserStatusArgs{...}
//
//	or:
//
//	        nil
type VMUserStatusPtrInput interface {
	pulumi.Input

	ToVMUserStatusPtrOutput() VMUserStatusPtrOutput
	ToVMUserStatusPtrOutputWithContext(context.Context) VMUserStatusPtrOutput
}

type vmuserStatusPtrType VMUserStatusArgs

func VMUserStatusPtr(v *VMUserStatusArgs) VMUserStatusPtrInput {
	return (*vmuserStatusPtrType)(v)
}

func (*vmuserStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserStatus)(nil)).Elem()
}

func (i *vmuserStatusPtrType) ToVMUserStatusPtrOutput() VMUserStatusPtrOutput {
	return i.ToVMUserStatusPtrOutputWithContext(context.Background())
}

func (i *vmuserStatusPtrType) ToVMUserStatusPtrOutputWithContext(ctx context.Context) VMUserStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserStatusPtrOutput)
}

// VMUserStatus defines the observed state of VMUser
type VMUserStatusOutput struct{ *pulumi.OutputState }

func (VMUserStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserStatus)(nil)).Elem()
}

func (o VMUserStatusOutput) ToVMUserStatusOutput() VMUserStatusOutput {
	return o
}

func (o VMUserStatusOutput) ToVMUserStatusOutputWithContext(ctx context.Context) VMUserStatusOutput {
	return o
}

func (o VMUserStatusOutput) ToVMUserStatusPtrOutput() VMUserStatusPtrOutput {
	return o.ToVMUserStatusPtrOutputWithContext(context.Background())
}

func (o VMUserStatusOutput) ToVMUserStatusPtrOutputWithContext(ctx context.Context) VMUserStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserStatus) *VMUserStatus {
		return &v
	}).(VMUserStatusPtrOutput)
}

// LastSyncError contains error message for unsuccessful config generation
// for given user
func (o VMUserStatusOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserStatus) *string { return v.LastSyncError }).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMUserStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VMUserStatusPtrOutput struct{ *pulumi.OutputState }

func (VMUserStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserStatus)(nil)).Elem()
}

func (o VMUserStatusPtrOutput) ToVMUserStatusPtrOutput() VMUserStatusPtrOutput {
	return o
}

func (o VMUserStatusPtrOutput) ToVMUserStatusPtrOutputWithContext(ctx context.Context) VMUserStatusPtrOutput {
	return o
}

func (o VMUserStatusPtrOutput) Elem() VMUserStatusOutput {
	return o.ApplyT(func(v *VMUserStatus) VMUserStatus {
		if v != nil {
			return *v
		}
		var ret VMUserStatus
		return ret
	}).(VMUserStatusOutput)
}

// LastSyncError contains error message for unsuccessful config generation
// for given user
func (o VMUserStatusPtrOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastSyncError
	}).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMUserStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// VMUserStatus defines the observed state of VMUser
type VMUserStatusPatch struct {
	// LastSyncError contains error message for unsuccessful config generation
	// for given user
	LastSyncError *string `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status *string `pulumi:"status"`
}

// VMUserStatusPatchInput is an input type that accepts VMUserStatusPatchArgs and VMUserStatusPatchOutput values.
// You can construct a concrete instance of `VMUserStatusPatchInput` via:
//
//	VMUserStatusPatchArgs{...}
type VMUserStatusPatchInput interface {
	pulumi.Input

	ToVMUserStatusPatchOutput() VMUserStatusPatchOutput
	ToVMUserStatusPatchOutputWithContext(context.Context) VMUserStatusPatchOutput
}

// VMUserStatus defines the observed state of VMUser
type VMUserStatusPatchArgs struct {
	// LastSyncError contains error message for unsuccessful config generation
	// for given user
	LastSyncError pulumi.StringPtrInput `pulumi:"lastSyncError"`
	// Status defines update status of resource
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (VMUserStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserStatusPatch)(nil)).Elem()
}

func (i VMUserStatusPatchArgs) ToVMUserStatusPatchOutput() VMUserStatusPatchOutput {
	return i.ToVMUserStatusPatchOutputWithContext(context.Background())
}

func (i VMUserStatusPatchArgs) ToVMUserStatusPatchOutputWithContext(ctx context.Context) VMUserStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserStatusPatchOutput)
}

func (i VMUserStatusPatchArgs) ToVMUserStatusPatchPtrOutput() VMUserStatusPatchPtrOutput {
	return i.ToVMUserStatusPatchPtrOutputWithContext(context.Background())
}

func (i VMUserStatusPatchArgs) ToVMUserStatusPatchPtrOutputWithContext(ctx context.Context) VMUserStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserStatusPatchOutput).ToVMUserStatusPatchPtrOutputWithContext(ctx)
}

// VMUserStatusPatchPtrInput is an input type that accepts VMUserStatusPatchArgs, VMUserStatusPatchPtr and VMUserStatusPatchPtrOutput values.
// You can construct a concrete instance of `VMUserStatusPatchPtrInput` via:
//
//	        VMUserStatusPatchArgs{...}
//
//	or:
//
//	        nil
type VMUserStatusPatchPtrInput interface {
	pulumi.Input

	ToVMUserStatusPatchPtrOutput() VMUserStatusPatchPtrOutput
	ToVMUserStatusPatchPtrOutputWithContext(context.Context) VMUserStatusPatchPtrOutput
}

type vmuserStatusPatchPtrType VMUserStatusPatchArgs

func VMUserStatusPatchPtr(v *VMUserStatusPatchArgs) VMUserStatusPatchPtrInput {
	return (*vmuserStatusPatchPtrType)(v)
}

func (*vmuserStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserStatusPatch)(nil)).Elem()
}

func (i *vmuserStatusPatchPtrType) ToVMUserStatusPatchPtrOutput() VMUserStatusPatchPtrOutput {
	return i.ToVMUserStatusPatchPtrOutputWithContext(context.Background())
}

func (i *vmuserStatusPatchPtrType) ToVMUserStatusPatchPtrOutputWithContext(ctx context.Context) VMUserStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMUserStatusPatchPtrOutput)
}

// VMUserStatus defines the observed state of VMUser
type VMUserStatusPatchOutput struct{ *pulumi.OutputState }

func (VMUserStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMUserStatusPatch)(nil)).Elem()
}

func (o VMUserStatusPatchOutput) ToVMUserStatusPatchOutput() VMUserStatusPatchOutput {
	return o
}

func (o VMUserStatusPatchOutput) ToVMUserStatusPatchOutputWithContext(ctx context.Context) VMUserStatusPatchOutput {
	return o
}

func (o VMUserStatusPatchOutput) ToVMUserStatusPatchPtrOutput() VMUserStatusPatchPtrOutput {
	return o.ToVMUserStatusPatchPtrOutputWithContext(context.Background())
}

func (o VMUserStatusPatchOutput) ToVMUserStatusPatchPtrOutputWithContext(ctx context.Context) VMUserStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VMUserStatusPatch) *VMUserStatusPatch {
		return &v
	}).(VMUserStatusPatchPtrOutput)
}

// LastSyncError contains error message for unsuccessful config generation
// for given user
func (o VMUserStatusPatchOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserStatusPatch) *string { return v.LastSyncError }).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMUserStatusPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMUserStatusPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type VMUserStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (VMUserStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMUserStatusPatch)(nil)).Elem()
}

func (o VMUserStatusPatchPtrOutput) ToVMUserStatusPatchPtrOutput() VMUserStatusPatchPtrOutput {
	return o
}

func (o VMUserStatusPatchPtrOutput) ToVMUserStatusPatchPtrOutputWithContext(ctx context.Context) VMUserStatusPatchPtrOutput {
	return o
}

func (o VMUserStatusPatchPtrOutput) Elem() VMUserStatusPatchOutput {
	return o.ApplyT(func(v *VMUserStatusPatch) VMUserStatusPatch {
		if v != nil {
			return *v
		}
		var ret VMUserStatusPatch
		return ret
	}).(VMUserStatusPatchOutput)
}

// LastSyncError contains error message for unsuccessful config generation
// for given user
func (o VMUserStatusPatchPtrOutput) LastSyncError() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.LastSyncError
	}).(pulumi.StringPtrOutput)
}

// Status defines update status of resource
func (o VMUserStatusPatchPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VMUserStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapePatchTypeInput)(nil)).Elem(), VMStaticScrapePatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecInput)(nil)).Elem(), VMStaticScrapeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecPtrInput)(nil)).Elem(), VMStaticScrapeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecPatchInput)(nil)).Elem(), VMStaticScrapeSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsArrayInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsAuthorizationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBearerTokenSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2Input)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2PtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2PatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsOauth2PatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsPatchArrayInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigsInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsRelabelConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsRelabelConfigsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsTlsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrInput)(nil)).Elem(), VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeStatusInput)(nil)).Elem(), VMStaticScrapeStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeStatusPtrInput)(nil)).Elem(), VMStaticScrapeStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeStatusPatchInput)(nil)).Elem(), VMStaticScrapeStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeStatusPatchPtrInput)(nil)).Elem(), VMStaticScrapeStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserTypeInput)(nil)).Elem(), VMUserTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserTypeArrayInput)(nil)).Elem(), VMUserTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserListTypeInput)(nil)).Elem(), VMUserListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserPatchTypeInput)(nil)).Elem(), VMUserPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecInput)(nil)).Elem(), VMUserSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecPtrInput)(nil)).Elem(), VMUserSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecIpFiltersInput)(nil)).Elem(), VMUserSpecIpFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecIpFiltersPtrInput)(nil)).Elem(), VMUserSpecIpFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecIpFiltersPatchInput)(nil)).Elem(), VMUserSpecIpFiltersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecIpFiltersPatchPtrInput)(nil)).Elem(), VMUserSpecIpFiltersPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecPasswordRefInput)(nil)).Elem(), VMUserSpecPasswordRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecPasswordRefPtrInput)(nil)).Elem(), VMUserSpecPasswordRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecPasswordRefPatchInput)(nil)).Elem(), VMUserSpecPasswordRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecPasswordRefPatchPtrInput)(nil)).Elem(), VMUserSpecPasswordRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecPatchInput)(nil)).Elem(), VMUserSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecPatchPtrInput)(nil)).Elem(), VMUserSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsInput)(nil)).Elem(), VMUserSpecTargetRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsArrayInput)(nil)).Elem(), VMUserSpecTargetRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsCrdInput)(nil)).Elem(), VMUserSpecTargetRefsCrdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsCrdPtrInput)(nil)).Elem(), VMUserSpecTargetRefsCrdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsCrdPatchInput)(nil)).Elem(), VMUserSpecTargetRefsCrdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsCrdPatchPtrInput)(nil)).Elem(), VMUserSpecTargetRefsCrdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsPatchInput)(nil)).Elem(), VMUserSpecTargetRefsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsPatchArrayInput)(nil)).Elem(), VMUserSpecTargetRefsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsStaticInput)(nil)).Elem(), VMUserSpecTargetRefsStaticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsStaticPtrInput)(nil)).Elem(), VMUserSpecTargetRefsStaticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsStaticPatchInput)(nil)).Elem(), VMUserSpecTargetRefsStaticPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsStaticPatchPtrInput)(nil)).Elem(), VMUserSpecTargetRefsStaticPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPtrInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPasswordInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthPasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPatchInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsernameInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrInput)(nil)).Elem(), VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigInput)(nil)).Elem(), VMUserSpecTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigPtrInput)(nil)).Elem(), VMUserSpecTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaInput)(nil)).Elem(), VMUserSpecTlsConfigCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMapInput)(nil)).Elem(), VMUserSpecTlsConfigCaConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMapPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCaConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMapPatchInput)(nil)).Elem(), VMUserSpecTlsConfigCaConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaConfigMapPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCaConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaPatchInput)(nil)).Elem(), VMUserSpecTlsConfigCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaSecretInput)(nil)).Elem(), VMUserSpecTlsConfigCaSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaSecretPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCaSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaSecretPatchInput)(nil)).Elem(), VMUserSpecTlsConfigCaSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCaSecretPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCaSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertInput)(nil)).Elem(), VMUserSpecTlsConfigCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMapInput)(nil)).Elem(), VMUserSpecTlsConfigCertConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMapPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCertConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMapPatchInput)(nil)).Elem(), VMUserSpecTlsConfigCertConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertConfigMapPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCertConfigMapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertPatchInput)(nil)).Elem(), VMUserSpecTlsConfigCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertSecretInput)(nil)).Elem(), VMUserSpecTlsConfigCertSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertSecretPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCertSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertSecretPatchInput)(nil)).Elem(), VMUserSpecTlsConfigCertSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigCertSecretPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigCertSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigKeySecretInput)(nil)).Elem(), VMUserSpecTlsConfigKeySecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigKeySecretPtrInput)(nil)).Elem(), VMUserSpecTlsConfigKeySecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigKeySecretPatchInput)(nil)).Elem(), VMUserSpecTlsConfigKeySecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigKeySecretPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigKeySecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigPatchInput)(nil)).Elem(), VMUserSpecTlsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTlsConfigPatchPtrInput)(nil)).Elem(), VMUserSpecTlsConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTokenRefInput)(nil)).Elem(), VMUserSpecTokenRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTokenRefPtrInput)(nil)).Elem(), VMUserSpecTokenRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTokenRefPatchInput)(nil)).Elem(), VMUserSpecTokenRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserSpecTokenRefPatchPtrInput)(nil)).Elem(), VMUserSpecTokenRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserStatusInput)(nil)).Elem(), VMUserStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserStatusPtrInput)(nil)).Elem(), VMUserStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserStatusPatchInput)(nil)).Elem(), VMUserStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMUserStatusPatchPtrInput)(nil)).Elem(), VMUserStatusPatchArgs{})
	pulumi.RegisterOutputType(VMStaticScrapePatchTypeOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationCredentialsPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsAuthorizationPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthPasswordPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernameOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBasicAuthUsernamePatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsBearerTokenSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsMetricRelabelConfigsPatchArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2Output{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2PtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientIdSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2ClientSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2PatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsOauth2PatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsPatchArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsRelabelConfigsOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsRelabelConfigsArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsRelabelConfigsPatchArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCaSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigCertSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigKeySecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsTlsConfigPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPasswordPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernameOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBasicAuthUsernamePatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigBearerTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCaSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigCertSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigKeySecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeSpecTargetEndpointsVmScrapeParamsProxyClientConfigTlsConfigPatchPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeStatusOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeStatusPtrOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeStatusPatchOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserTypeOutput{})
	pulumi.RegisterOutputType(VMUserTypeArrayOutput{})
	pulumi.RegisterOutputType(VMUserListTypeOutput{})
	pulumi.RegisterOutputType(VMUserPatchTypeOutput{})
	pulumi.RegisterOutputType(VMUserSpecOutput{})
	pulumi.RegisterOutputType(VMUserSpecPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecIpFiltersOutput{})
	pulumi.RegisterOutputType(VMUserSpecIpFiltersPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecIpFiltersPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecIpFiltersPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecPasswordRefOutput{})
	pulumi.RegisterOutputType(VMUserSpecPasswordRefPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecPasswordRefPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecPasswordRefPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsArrayOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsCrdOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsCrdPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsCrdPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsCrdPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsPatchArrayOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsStaticOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsStaticPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsStaticPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsStaticPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthPasswordOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthPasswordPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthUsernameOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTargetRefsTargetRefBasicAuthUsernamePatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaConfigMapOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaConfigMapPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaConfigMapPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaSecretOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaSecretPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaSecretPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCaSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertConfigMapOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertConfigMapPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertConfigMapPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertConfigMapPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertSecretOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertSecretPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertSecretPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigCertSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigKeySecretOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigKeySecretPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigKeySecretPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigKeySecretPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTlsConfigPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTokenRefOutput{})
	pulumi.RegisterOutputType(VMUserSpecTokenRefPtrOutput{})
	pulumi.RegisterOutputType(VMUserSpecTokenRefPatchOutput{})
	pulumi.RegisterOutputType(VMUserSpecTokenRefPatchPtrOutput{})
	pulumi.RegisterOutputType(VMUserStatusOutput{})
	pulumi.RegisterOutputType(VMUserStatusPtrOutput{})
	pulumi.RegisterOutputType(VMUserStatusPatchOutput{})
	pulumi.RegisterOutputType(VMUserStatusPatchPtrOutput{})
}
