// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VMAgentList is a list of VMAgent
type VMAgentList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of vmagents. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VMAgentTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewVMAgentList registers a new resource with the given unique name, arguments, and options.
func NewVMAgentList(ctx *pulumi.Context,
	name string, args *VMAgentListArgs, opts ...pulumi.ResourceOption) (*VMAgentList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("operator.victoriametrics.com/v1beta1")
	args.Kind = pulumi.StringPtr("VMAgentList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VMAgentList
	err := ctx.RegisterResource("kubernetes:operator.victoriametrics.com/v1beta1:VMAgentList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVMAgentList gets an existing VMAgentList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVMAgentList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VMAgentListState, opts ...pulumi.ResourceOption) (*VMAgentList, error) {
	var resource VMAgentList
	err := ctx.ReadResource("kubernetes:operator.victoriametrics.com/v1beta1:VMAgentList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VMAgentList resources.
type vmagentListState struct {
}

type VMAgentListState struct {
}

func (VMAgentListState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmagentListState)(nil)).Elem()
}

type vmagentListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of vmagents. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []VMAgentType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a VMAgentList resource.
type VMAgentListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of vmagents. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VMAgentTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (VMAgentListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmagentListArgs)(nil)).Elem()
}

type VMAgentListInput interface {
	pulumi.Input

	ToVMAgentListOutput() VMAgentListOutput
	ToVMAgentListOutputWithContext(ctx context.Context) VMAgentListOutput
}

func (*VMAgentList) ElementType() reflect.Type {
	return reflect.TypeOf((**VMAgentList)(nil)).Elem()
}

func (i *VMAgentList) ToVMAgentListOutput() VMAgentListOutput {
	return i.ToVMAgentListOutputWithContext(context.Background())
}

func (i *VMAgentList) ToVMAgentListOutputWithContext(ctx context.Context) VMAgentListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMAgentListOutput)
}

// VMAgentListArrayInput is an input type that accepts VMAgentListArray and VMAgentListArrayOutput values.
// You can construct a concrete instance of `VMAgentListArrayInput` via:
//
//	VMAgentListArray{ VMAgentListArgs{...} }
type VMAgentListArrayInput interface {
	pulumi.Input

	ToVMAgentListArrayOutput() VMAgentListArrayOutput
	ToVMAgentListArrayOutputWithContext(context.Context) VMAgentListArrayOutput
}

type VMAgentListArray []VMAgentListInput

func (VMAgentListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMAgentList)(nil)).Elem()
}

func (i VMAgentListArray) ToVMAgentListArrayOutput() VMAgentListArrayOutput {
	return i.ToVMAgentListArrayOutputWithContext(context.Background())
}

func (i VMAgentListArray) ToVMAgentListArrayOutputWithContext(ctx context.Context) VMAgentListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMAgentListArrayOutput)
}

// VMAgentListMapInput is an input type that accepts VMAgentListMap and VMAgentListMapOutput values.
// You can construct a concrete instance of `VMAgentListMapInput` via:
//
//	VMAgentListMap{ "key": VMAgentListArgs{...} }
type VMAgentListMapInput interface {
	pulumi.Input

	ToVMAgentListMapOutput() VMAgentListMapOutput
	ToVMAgentListMapOutputWithContext(context.Context) VMAgentListMapOutput
}

type VMAgentListMap map[string]VMAgentListInput

func (VMAgentListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMAgentList)(nil)).Elem()
}

func (i VMAgentListMap) ToVMAgentListMapOutput() VMAgentListMapOutput {
	return i.ToVMAgentListMapOutputWithContext(context.Background())
}

func (i VMAgentListMap) ToVMAgentListMapOutputWithContext(ctx context.Context) VMAgentListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMAgentListMapOutput)
}

type VMAgentListOutput struct{ *pulumi.OutputState }

func (VMAgentListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMAgentList)(nil)).Elem()
}

func (o VMAgentListOutput) ToVMAgentListOutput() VMAgentListOutput {
	return o
}

func (o VMAgentListOutput) ToVMAgentListOutputWithContext(ctx context.Context) VMAgentListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMAgentListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VMAgentList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of vmagents. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o VMAgentListOutput) Items() VMAgentTypeArrayOutput {
	return o.ApplyT(func(v *VMAgentList) VMAgentTypeArrayOutput { return v.Items }).(VMAgentTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMAgentListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VMAgentList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMAgentListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *VMAgentList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type VMAgentListArrayOutput struct{ *pulumi.OutputState }

func (VMAgentListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMAgentList)(nil)).Elem()
}

func (o VMAgentListArrayOutput) ToVMAgentListArrayOutput() VMAgentListArrayOutput {
	return o
}

func (o VMAgentListArrayOutput) ToVMAgentListArrayOutputWithContext(ctx context.Context) VMAgentListArrayOutput {
	return o
}

func (o VMAgentListArrayOutput) Index(i pulumi.IntInput) VMAgentListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VMAgentList {
		return vs[0].([]*VMAgentList)[vs[1].(int)]
	}).(VMAgentListOutput)
}

type VMAgentListMapOutput struct{ *pulumi.OutputState }

func (VMAgentListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMAgentList)(nil)).Elem()
}

func (o VMAgentListMapOutput) ToVMAgentListMapOutput() VMAgentListMapOutput {
	return o
}

func (o VMAgentListMapOutput) ToVMAgentListMapOutputWithContext(ctx context.Context) VMAgentListMapOutput {
	return o
}

func (o VMAgentListMapOutput) MapIndex(k pulumi.StringInput) VMAgentListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VMAgentList {
		return vs[0].(map[string]*VMAgentList)[vs[1].(string)]
	}).(VMAgentListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VMAgentListInput)(nil)).Elem(), &VMAgentList{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMAgentListArrayInput)(nil)).Elem(), VMAgentListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMAgentListMapInput)(nil)).Elem(), VMAgentListMap{})
	pulumi.RegisterOutputType(VMAgentListOutput{})
	pulumi.RegisterOutputType(VMAgentListArrayOutput{})
	pulumi.RegisterOutputType(VMAgentListMapOutput{})
}
