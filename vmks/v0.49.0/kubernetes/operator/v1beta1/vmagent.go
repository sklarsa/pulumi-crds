// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VMAgent - is a tiny but brave agent, which helps you collect metrics from various sources and stores them in VictoriaMetrics
// or any other Prometheus-compatible storage system that supports the remote_write protocol.
type VMAgent struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     VMAgentSpecOutput       `pulumi:"spec"`
	Status   VMAgentStatusPtrOutput  `pulumi:"status"`
}

// NewVMAgent registers a new resource with the given unique name, arguments, and options.
func NewVMAgent(ctx *pulumi.Context,
	name string, args *VMAgentArgs, opts ...pulumi.ResourceOption) (*VMAgent, error) {
	if args == nil {
		args = &VMAgentArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("operator.victoriametrics.com/v1beta1")
	args.Kind = pulumi.StringPtr("VMAgent")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VMAgent
	err := ctx.RegisterResource("kubernetes:operator.victoriametrics.com/v1beta1:VMAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVMAgent gets an existing VMAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVMAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VMAgentState, opts ...pulumi.ResourceOption) (*VMAgent, error) {
	var resource VMAgent
	err := ctx.ReadResource("kubernetes:operator.victoriametrics.com/v1beta1:VMAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VMAgent resources.
type vmagentState struct {
}

type VMAgentState struct {
}

func (VMAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmagentState)(nil)).Elem()
}

type vmagentArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *VMAgentSpec       `pulumi:"spec"`
}

// The set of arguments for constructing a VMAgent resource.
type VMAgentArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     VMAgentSpecPtrInput
}

func (VMAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmagentArgs)(nil)).Elem()
}

type VMAgentInput interface {
	pulumi.Input

	ToVMAgentOutput() VMAgentOutput
	ToVMAgentOutputWithContext(ctx context.Context) VMAgentOutput
}

func (*VMAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**VMAgent)(nil)).Elem()
}

func (i *VMAgent) ToVMAgentOutput() VMAgentOutput {
	return i.ToVMAgentOutputWithContext(context.Background())
}

func (i *VMAgent) ToVMAgentOutputWithContext(ctx context.Context) VMAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMAgentOutput)
}

// VMAgentArrayInput is an input type that accepts VMAgentArray and VMAgentArrayOutput values.
// You can construct a concrete instance of `VMAgentArrayInput` via:
//
//	VMAgentArray{ VMAgentArgs{...} }
type VMAgentArrayInput interface {
	pulumi.Input

	ToVMAgentArrayOutput() VMAgentArrayOutput
	ToVMAgentArrayOutputWithContext(context.Context) VMAgentArrayOutput
}

type VMAgentArray []VMAgentInput

func (VMAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMAgent)(nil)).Elem()
}

func (i VMAgentArray) ToVMAgentArrayOutput() VMAgentArrayOutput {
	return i.ToVMAgentArrayOutputWithContext(context.Background())
}

func (i VMAgentArray) ToVMAgentArrayOutputWithContext(ctx context.Context) VMAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMAgentArrayOutput)
}

// VMAgentMapInput is an input type that accepts VMAgentMap and VMAgentMapOutput values.
// You can construct a concrete instance of `VMAgentMapInput` via:
//
//	VMAgentMap{ "key": VMAgentArgs{...} }
type VMAgentMapInput interface {
	pulumi.Input

	ToVMAgentMapOutput() VMAgentMapOutput
	ToVMAgentMapOutputWithContext(context.Context) VMAgentMapOutput
}

type VMAgentMap map[string]VMAgentInput

func (VMAgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMAgent)(nil)).Elem()
}

func (i VMAgentMap) ToVMAgentMapOutput() VMAgentMapOutput {
	return i.ToVMAgentMapOutputWithContext(context.Background())
}

func (i VMAgentMap) ToVMAgentMapOutputWithContext(ctx context.Context) VMAgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMAgentMapOutput)
}

type VMAgentOutput struct{ *pulumi.OutputState }

func (VMAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMAgent)(nil)).Elem()
}

func (o VMAgentOutput) ToVMAgentOutput() VMAgentOutput {
	return o
}

func (o VMAgentOutput) ToVMAgentOutputWithContext(ctx context.Context) VMAgentOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMAgentOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VMAgent) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMAgentOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VMAgent) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VMAgentOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *VMAgent) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o VMAgentOutput) Spec() VMAgentSpecOutput {
	return o.ApplyT(func(v *VMAgent) VMAgentSpecOutput { return v.Spec }).(VMAgentSpecOutput)
}

func (o VMAgentOutput) Status() VMAgentStatusPtrOutput {
	return o.ApplyT(func(v *VMAgent) VMAgentStatusPtrOutput { return v.Status }).(VMAgentStatusPtrOutput)
}

type VMAgentArrayOutput struct{ *pulumi.OutputState }

func (VMAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMAgent)(nil)).Elem()
}

func (o VMAgentArrayOutput) ToVMAgentArrayOutput() VMAgentArrayOutput {
	return o
}

func (o VMAgentArrayOutput) ToVMAgentArrayOutputWithContext(ctx context.Context) VMAgentArrayOutput {
	return o
}

func (o VMAgentArrayOutput) Index(i pulumi.IntInput) VMAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VMAgent {
		return vs[0].([]*VMAgent)[vs[1].(int)]
	}).(VMAgentOutput)
}

type VMAgentMapOutput struct{ *pulumi.OutputState }

func (VMAgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMAgent)(nil)).Elem()
}

func (o VMAgentMapOutput) ToVMAgentMapOutput() VMAgentMapOutput {
	return o
}

func (o VMAgentMapOutput) ToVMAgentMapOutputWithContext(ctx context.Context) VMAgentMapOutput {
	return o
}

func (o VMAgentMapOutput) MapIndex(k pulumi.StringInput) VMAgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VMAgent {
		return vs[0].(map[string]*VMAgent)[vs[1].(string)]
	}).(VMAgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VMAgentInput)(nil)).Elem(), &VMAgent{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMAgentArrayInput)(nil)).Elem(), VMAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMAgentMapInput)(nil)).Elem(), VMAgentMap{})
	pulumi.RegisterOutputType(VMAgentOutput{})
	pulumi.RegisterOutputType(VMAgentArrayOutput{})
	pulumi.RegisterOutputType(VMAgentMapOutput{})
}
