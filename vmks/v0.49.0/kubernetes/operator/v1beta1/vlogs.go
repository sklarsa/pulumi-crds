// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VLogs is the Schema for the vlogs API
type VLogs struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput `pulumi:"metadata"`
	Spec     VLogsSpecOutput         `pulumi:"spec"`
	Status   VLogsStatusPtrOutput    `pulumi:"status"`
}

// NewVLogs registers a new resource with the given unique name, arguments, and options.
func NewVLogs(ctx *pulumi.Context,
	name string, args *VLogsArgs, opts ...pulumi.ResourceOption) (*VLogs, error) {
	if args == nil {
		args = &VLogsArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("operator.victoriametrics.com/v1beta1")
	args.Kind = pulumi.StringPtr("VLogs")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VLogs
	err := ctx.RegisterResource("kubernetes:operator.victoriametrics.com/v1beta1:VLogs", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVLogs gets an existing VLogs resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVLogs(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VLogsState, opts ...pulumi.ResourceOption) (*VLogs, error) {
	var resource VLogs
	err := ctx.ReadResource("kubernetes:operator.victoriametrics.com/v1beta1:VLogs", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VLogs resources.
type vlogsState struct {
}

type VLogsState struct {
}

func (VLogsState) ElementType() reflect.Type {
	return reflect.TypeOf((*vlogsState)(nil)).Elem()
}

type vlogsArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *VLogsSpec         `pulumi:"spec"`
}

// The set of arguments for constructing a VLogs resource.
type VLogsArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     VLogsSpecPtrInput
}

func (VLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vlogsArgs)(nil)).Elem()
}

type VLogsInput interface {
	pulumi.Input

	ToVLogsOutput() VLogsOutput
	ToVLogsOutputWithContext(ctx context.Context) VLogsOutput
}

func (*VLogs) ElementType() reflect.Type {
	return reflect.TypeOf((**VLogs)(nil)).Elem()
}

func (i *VLogs) ToVLogsOutput() VLogsOutput {
	return i.ToVLogsOutputWithContext(context.Background())
}

func (i *VLogs) ToVLogsOutputWithContext(ctx context.Context) VLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VLogsOutput)
}

// VLogsArrayInput is an input type that accepts VLogsArray and VLogsArrayOutput values.
// You can construct a concrete instance of `VLogsArrayInput` via:
//
//	VLogsArray{ VLogsArgs{...} }
type VLogsArrayInput interface {
	pulumi.Input

	ToVLogsArrayOutput() VLogsArrayOutput
	ToVLogsArrayOutputWithContext(context.Context) VLogsArrayOutput
}

type VLogsArray []VLogsInput

func (VLogsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VLogs)(nil)).Elem()
}

func (i VLogsArray) ToVLogsArrayOutput() VLogsArrayOutput {
	return i.ToVLogsArrayOutputWithContext(context.Background())
}

func (i VLogsArray) ToVLogsArrayOutputWithContext(ctx context.Context) VLogsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VLogsArrayOutput)
}

// VLogsMapInput is an input type that accepts VLogsMap and VLogsMapOutput values.
// You can construct a concrete instance of `VLogsMapInput` via:
//
//	VLogsMap{ "key": VLogsArgs{...} }
type VLogsMapInput interface {
	pulumi.Input

	ToVLogsMapOutput() VLogsMapOutput
	ToVLogsMapOutputWithContext(context.Context) VLogsMapOutput
}

type VLogsMap map[string]VLogsInput

func (VLogsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VLogs)(nil)).Elem()
}

func (i VLogsMap) ToVLogsMapOutput() VLogsMapOutput {
	return i.ToVLogsMapOutputWithContext(context.Background())
}

func (i VLogsMap) ToVLogsMapOutputWithContext(ctx context.Context) VLogsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VLogsMapOutput)
}

type VLogsOutput struct{ *pulumi.OutputState }

func (VLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VLogs)(nil)).Elem()
}

func (o VLogsOutput) ToVLogsOutput() VLogsOutput {
	return o
}

func (o VLogsOutput) ToVLogsOutputWithContext(ctx context.Context) VLogsOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VLogsOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VLogs) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VLogsOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VLogs) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VLogsOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *VLogs) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o VLogsOutput) Spec() VLogsSpecOutput {
	return o.ApplyT(func(v *VLogs) VLogsSpecOutput { return v.Spec }).(VLogsSpecOutput)
}

func (o VLogsOutput) Status() VLogsStatusPtrOutput {
	return o.ApplyT(func(v *VLogs) VLogsStatusPtrOutput { return v.Status }).(VLogsStatusPtrOutput)
}

type VLogsArrayOutput struct{ *pulumi.OutputState }

func (VLogsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VLogs)(nil)).Elem()
}

func (o VLogsArrayOutput) ToVLogsArrayOutput() VLogsArrayOutput {
	return o
}

func (o VLogsArrayOutput) ToVLogsArrayOutputWithContext(ctx context.Context) VLogsArrayOutput {
	return o
}

func (o VLogsArrayOutput) Index(i pulumi.IntInput) VLogsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VLogs {
		return vs[0].([]*VLogs)[vs[1].(int)]
	}).(VLogsOutput)
}

type VLogsMapOutput struct{ *pulumi.OutputState }

func (VLogsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VLogs)(nil)).Elem()
}

func (o VLogsMapOutput) ToVLogsMapOutput() VLogsMapOutput {
	return o
}

func (o VLogsMapOutput) ToVLogsMapOutputWithContext(ctx context.Context) VLogsMapOutput {
	return o
}

func (o VLogsMapOutput) MapIndex(k pulumi.StringInput) VLogsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VLogs {
		return vs[0].(map[string]*VLogs)[vs[1].(string)]
	}).(VLogsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VLogsInput)(nil)).Elem(), &VLogs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VLogsArrayInput)(nil)).Elem(), VLogsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VLogsMapInput)(nil)).Elem(), VLogsMap{})
	pulumi.RegisterOutputType(VLogsOutput{})
	pulumi.RegisterOutputType(VLogsArrayOutput{})
	pulumi.RegisterOutputType(VLogsMapOutput{})
}
