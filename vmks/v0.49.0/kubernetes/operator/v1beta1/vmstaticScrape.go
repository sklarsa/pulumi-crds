// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VMStaticScrape  defines static targets configuration for scraping.
type VMStaticScrape struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput       `pulumi:"metadata"`
	Spec     VMStaticScrapeSpecOutput      `pulumi:"spec"`
	Status   VMStaticScrapeStatusPtrOutput `pulumi:"status"`
}

// NewVMStaticScrape registers a new resource with the given unique name, arguments, and options.
func NewVMStaticScrape(ctx *pulumi.Context,
	name string, args *VMStaticScrapeArgs, opts ...pulumi.ResourceOption) (*VMStaticScrape, error) {
	if args == nil {
		args = &VMStaticScrapeArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("operator.victoriametrics.com/v1beta1")
	args.Kind = pulumi.StringPtr("VMStaticScrape")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VMStaticScrape
	err := ctx.RegisterResource("kubernetes:operator.victoriametrics.com/v1beta1:VMStaticScrape", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVMStaticScrape gets an existing VMStaticScrape resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVMStaticScrape(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VMStaticScrapeState, opts ...pulumi.ResourceOption) (*VMStaticScrape, error) {
	var resource VMStaticScrape
	err := ctx.ReadResource("kubernetes:operator.victoriametrics.com/v1beta1:VMStaticScrape", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VMStaticScrape resources.
type vmstaticScrapeState struct {
}

type VMStaticScrapeState struct {
}

func (VMStaticScrapeState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmstaticScrapeState)(nil)).Elem()
}

type vmstaticScrapeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta  `pulumi:"metadata"`
	Spec     *VMStaticScrapeSpec `pulumi:"spec"`
}

// The set of arguments for constructing a VMStaticScrape resource.
type VMStaticScrapeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     VMStaticScrapeSpecPtrInput
}

func (VMStaticScrapeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmstaticScrapeArgs)(nil)).Elem()
}

type VMStaticScrapeInput interface {
	pulumi.Input

	ToVMStaticScrapeOutput() VMStaticScrapeOutput
	ToVMStaticScrapeOutputWithContext(ctx context.Context) VMStaticScrapeOutput
}

func (*VMStaticScrape) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrape)(nil)).Elem()
}

func (i *VMStaticScrape) ToVMStaticScrapeOutput() VMStaticScrapeOutput {
	return i.ToVMStaticScrapeOutputWithContext(context.Background())
}

func (i *VMStaticScrape) ToVMStaticScrapeOutputWithContext(ctx context.Context) VMStaticScrapeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeOutput)
}

// VMStaticScrapeArrayInput is an input type that accepts VMStaticScrapeArray and VMStaticScrapeArrayOutput values.
// You can construct a concrete instance of `VMStaticScrapeArrayInput` via:
//
//	VMStaticScrapeArray{ VMStaticScrapeArgs{...} }
type VMStaticScrapeArrayInput interface {
	pulumi.Input

	ToVMStaticScrapeArrayOutput() VMStaticScrapeArrayOutput
	ToVMStaticScrapeArrayOutputWithContext(context.Context) VMStaticScrapeArrayOutput
}

type VMStaticScrapeArray []VMStaticScrapeInput

func (VMStaticScrapeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMStaticScrape)(nil)).Elem()
}

func (i VMStaticScrapeArray) ToVMStaticScrapeArrayOutput() VMStaticScrapeArrayOutput {
	return i.ToVMStaticScrapeArrayOutputWithContext(context.Background())
}

func (i VMStaticScrapeArray) ToVMStaticScrapeArrayOutputWithContext(ctx context.Context) VMStaticScrapeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeArrayOutput)
}

// VMStaticScrapeMapInput is an input type that accepts VMStaticScrapeMap and VMStaticScrapeMapOutput values.
// You can construct a concrete instance of `VMStaticScrapeMapInput` via:
//
//	VMStaticScrapeMap{ "key": VMStaticScrapeArgs{...} }
type VMStaticScrapeMapInput interface {
	pulumi.Input

	ToVMStaticScrapeMapOutput() VMStaticScrapeMapOutput
	ToVMStaticScrapeMapOutputWithContext(context.Context) VMStaticScrapeMapOutput
}

type VMStaticScrapeMap map[string]VMStaticScrapeInput

func (VMStaticScrapeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMStaticScrape)(nil)).Elem()
}

func (i VMStaticScrapeMap) ToVMStaticScrapeMapOutput() VMStaticScrapeMapOutput {
	return i.ToVMStaticScrapeMapOutputWithContext(context.Background())
}

func (i VMStaticScrapeMap) ToVMStaticScrapeMapOutputWithContext(ctx context.Context) VMStaticScrapeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMStaticScrapeMapOutput)
}

type VMStaticScrapeOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMStaticScrape)(nil)).Elem()
}

func (o VMStaticScrapeOutput) ToVMStaticScrapeOutput() VMStaticScrapeOutput {
	return o
}

func (o VMStaticScrapeOutput) ToVMStaticScrapeOutputWithContext(ctx context.Context) VMStaticScrapeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMStaticScrapeOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VMStaticScrape) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMStaticScrapeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VMStaticScrape) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VMStaticScrapeOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *VMStaticScrape) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o VMStaticScrapeOutput) Spec() VMStaticScrapeSpecOutput {
	return o.ApplyT(func(v *VMStaticScrape) VMStaticScrapeSpecOutput { return v.Spec }).(VMStaticScrapeSpecOutput)
}

func (o VMStaticScrapeOutput) Status() VMStaticScrapeStatusPtrOutput {
	return o.ApplyT(func(v *VMStaticScrape) VMStaticScrapeStatusPtrOutput { return v.Status }).(VMStaticScrapeStatusPtrOutput)
}

type VMStaticScrapeArrayOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMStaticScrape)(nil)).Elem()
}

func (o VMStaticScrapeArrayOutput) ToVMStaticScrapeArrayOutput() VMStaticScrapeArrayOutput {
	return o
}

func (o VMStaticScrapeArrayOutput) ToVMStaticScrapeArrayOutputWithContext(ctx context.Context) VMStaticScrapeArrayOutput {
	return o
}

func (o VMStaticScrapeArrayOutput) Index(i pulumi.IntInput) VMStaticScrapeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VMStaticScrape {
		return vs[0].([]*VMStaticScrape)[vs[1].(int)]
	}).(VMStaticScrapeOutput)
}

type VMStaticScrapeMapOutput struct{ *pulumi.OutputState }

func (VMStaticScrapeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMStaticScrape)(nil)).Elem()
}

func (o VMStaticScrapeMapOutput) ToVMStaticScrapeMapOutput() VMStaticScrapeMapOutput {
	return o
}

func (o VMStaticScrapeMapOutput) ToVMStaticScrapeMapOutputWithContext(ctx context.Context) VMStaticScrapeMapOutput {
	return o
}

func (o VMStaticScrapeMapOutput) MapIndex(k pulumi.StringInput) VMStaticScrapeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VMStaticScrape {
		return vs[0].(map[string]*VMStaticScrape)[vs[1].(string)]
	}).(VMStaticScrapeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeInput)(nil)).Elem(), &VMStaticScrape{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeArrayInput)(nil)).Elem(), VMStaticScrapeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMStaticScrapeMapInput)(nil)).Elem(), VMStaticScrapeMap{})
	pulumi.RegisterOutputType(VMStaticScrapeOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeArrayOutput{})
	pulumi.RegisterOutputType(VMStaticScrapeMapOutput{})
}
