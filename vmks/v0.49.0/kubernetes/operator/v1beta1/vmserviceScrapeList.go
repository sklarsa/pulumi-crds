// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VMServiceScrapeList is a list of VMServiceScrape
type VMServiceScrapeList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of vmservicescrapes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VMServiceScrapeTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewVMServiceScrapeList registers a new resource with the given unique name, arguments, and options.
func NewVMServiceScrapeList(ctx *pulumi.Context,
	name string, args *VMServiceScrapeListArgs, opts ...pulumi.ResourceOption) (*VMServiceScrapeList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("operator.victoriametrics.com/v1beta1")
	args.Kind = pulumi.StringPtr("VMServiceScrapeList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VMServiceScrapeList
	err := ctx.RegisterResource("kubernetes:operator.victoriametrics.com/v1beta1:VMServiceScrapeList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVMServiceScrapeList gets an existing VMServiceScrapeList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVMServiceScrapeList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VMServiceScrapeListState, opts ...pulumi.ResourceOption) (*VMServiceScrapeList, error) {
	var resource VMServiceScrapeList
	err := ctx.ReadResource("kubernetes:operator.victoriametrics.com/v1beta1:VMServiceScrapeList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VMServiceScrapeList resources.
type vmserviceScrapeListState struct {
}

type VMServiceScrapeListState struct {
}

func (VMServiceScrapeListState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmserviceScrapeListState)(nil)).Elem()
}

type vmserviceScrapeListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of vmservicescrapes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []VMServiceScrapeType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a VMServiceScrapeList resource.
type VMServiceScrapeListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of vmservicescrapes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VMServiceScrapeTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (VMServiceScrapeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmserviceScrapeListArgs)(nil)).Elem()
}

type VMServiceScrapeListInput interface {
	pulumi.Input

	ToVMServiceScrapeListOutput() VMServiceScrapeListOutput
	ToVMServiceScrapeListOutputWithContext(ctx context.Context) VMServiceScrapeListOutput
}

func (*VMServiceScrapeList) ElementType() reflect.Type {
	return reflect.TypeOf((**VMServiceScrapeList)(nil)).Elem()
}

func (i *VMServiceScrapeList) ToVMServiceScrapeListOutput() VMServiceScrapeListOutput {
	return i.ToVMServiceScrapeListOutputWithContext(context.Background())
}

func (i *VMServiceScrapeList) ToVMServiceScrapeListOutputWithContext(ctx context.Context) VMServiceScrapeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMServiceScrapeListOutput)
}

// VMServiceScrapeListArrayInput is an input type that accepts VMServiceScrapeListArray and VMServiceScrapeListArrayOutput values.
// You can construct a concrete instance of `VMServiceScrapeListArrayInput` via:
//
//	VMServiceScrapeListArray{ VMServiceScrapeListArgs{...} }
type VMServiceScrapeListArrayInput interface {
	pulumi.Input

	ToVMServiceScrapeListArrayOutput() VMServiceScrapeListArrayOutput
	ToVMServiceScrapeListArrayOutputWithContext(context.Context) VMServiceScrapeListArrayOutput
}

type VMServiceScrapeListArray []VMServiceScrapeListInput

func (VMServiceScrapeListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMServiceScrapeList)(nil)).Elem()
}

func (i VMServiceScrapeListArray) ToVMServiceScrapeListArrayOutput() VMServiceScrapeListArrayOutput {
	return i.ToVMServiceScrapeListArrayOutputWithContext(context.Background())
}

func (i VMServiceScrapeListArray) ToVMServiceScrapeListArrayOutputWithContext(ctx context.Context) VMServiceScrapeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMServiceScrapeListArrayOutput)
}

// VMServiceScrapeListMapInput is an input type that accepts VMServiceScrapeListMap and VMServiceScrapeListMapOutput values.
// You can construct a concrete instance of `VMServiceScrapeListMapInput` via:
//
//	VMServiceScrapeListMap{ "key": VMServiceScrapeListArgs{...} }
type VMServiceScrapeListMapInput interface {
	pulumi.Input

	ToVMServiceScrapeListMapOutput() VMServiceScrapeListMapOutput
	ToVMServiceScrapeListMapOutputWithContext(context.Context) VMServiceScrapeListMapOutput
}

type VMServiceScrapeListMap map[string]VMServiceScrapeListInput

func (VMServiceScrapeListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMServiceScrapeList)(nil)).Elem()
}

func (i VMServiceScrapeListMap) ToVMServiceScrapeListMapOutput() VMServiceScrapeListMapOutput {
	return i.ToVMServiceScrapeListMapOutputWithContext(context.Background())
}

func (i VMServiceScrapeListMap) ToVMServiceScrapeListMapOutputWithContext(ctx context.Context) VMServiceScrapeListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMServiceScrapeListMapOutput)
}

type VMServiceScrapeListOutput struct{ *pulumi.OutputState }

func (VMServiceScrapeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VMServiceScrapeList)(nil)).Elem()
}

func (o VMServiceScrapeListOutput) ToVMServiceScrapeListOutput() VMServiceScrapeListOutput {
	return o
}

func (o VMServiceScrapeListOutput) ToVMServiceScrapeListOutputWithContext(ctx context.Context) VMServiceScrapeListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VMServiceScrapeListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VMServiceScrapeList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of vmservicescrapes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o VMServiceScrapeListOutput) Items() VMServiceScrapeTypeArrayOutput {
	return o.ApplyT(func(v *VMServiceScrapeList) VMServiceScrapeTypeArrayOutput { return v.Items }).(VMServiceScrapeTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMServiceScrapeListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VMServiceScrapeList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VMServiceScrapeListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *VMServiceScrapeList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type VMServiceScrapeListArrayOutput struct{ *pulumi.OutputState }

func (VMServiceScrapeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VMServiceScrapeList)(nil)).Elem()
}

func (o VMServiceScrapeListArrayOutput) ToVMServiceScrapeListArrayOutput() VMServiceScrapeListArrayOutput {
	return o
}

func (o VMServiceScrapeListArrayOutput) ToVMServiceScrapeListArrayOutputWithContext(ctx context.Context) VMServiceScrapeListArrayOutput {
	return o
}

func (o VMServiceScrapeListArrayOutput) Index(i pulumi.IntInput) VMServiceScrapeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VMServiceScrapeList {
		return vs[0].([]*VMServiceScrapeList)[vs[1].(int)]
	}).(VMServiceScrapeListOutput)
}

type VMServiceScrapeListMapOutput struct{ *pulumi.OutputState }

func (VMServiceScrapeListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VMServiceScrapeList)(nil)).Elem()
}

func (o VMServiceScrapeListMapOutput) ToVMServiceScrapeListMapOutput() VMServiceScrapeListMapOutput {
	return o
}

func (o VMServiceScrapeListMapOutput) ToVMServiceScrapeListMapOutputWithContext(ctx context.Context) VMServiceScrapeListMapOutput {
	return o
}

func (o VMServiceScrapeListMapOutput) MapIndex(k pulumi.StringInput) VMServiceScrapeListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VMServiceScrapeList {
		return vs[0].(map[string]*VMServiceScrapeList)[vs[1].(string)]
	}).(VMServiceScrapeListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VMServiceScrapeListInput)(nil)).Elem(), &VMServiceScrapeList{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMServiceScrapeListArrayInput)(nil)).Elem(), VMServiceScrapeListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VMServiceScrapeListMapInput)(nil)).Elem(), VMServiceScrapeListMap{})
	pulumi.RegisterOutputType(VMServiceScrapeListOutput{})
	pulumi.RegisterOutputType(VMServiceScrapeListArrayOutput{})
	pulumi.RegisterOutputType(VMServiceScrapeListMapOutput{})
}
