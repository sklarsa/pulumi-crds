// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AlertmanagerList is a list of Alertmanager
type AlertmanagerList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of alertmanagers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AlertmanagerTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewAlertmanagerList registers a new resource with the given unique name, arguments, and options.
func NewAlertmanagerList(ctx *pulumi.Context,
	name string, args *AlertmanagerListArgs, opts ...pulumi.ResourceOption) (*AlertmanagerList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1")
	args.Kind = pulumi.StringPtr("AlertmanagerList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AlertmanagerList
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1:AlertmanagerList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertmanagerList gets an existing AlertmanagerList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertmanagerList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertmanagerListState, opts ...pulumi.ResourceOption) (*AlertmanagerList, error) {
	var resource AlertmanagerList
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1:AlertmanagerList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertmanagerList resources.
type alertmanagerListState struct {
}

type AlertmanagerListState struct {
}

func (AlertmanagerListState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertmanagerListState)(nil)).Elem()
}

type alertmanagerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of alertmanagers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []AlertmanagerType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a AlertmanagerList resource.
type AlertmanagerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of alertmanagers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items AlertmanagerTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (AlertmanagerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertmanagerListArgs)(nil)).Elem()
}

type AlertmanagerListInput interface {
	pulumi.Input

	ToAlertmanagerListOutput() AlertmanagerListOutput
	ToAlertmanagerListOutputWithContext(ctx context.Context) AlertmanagerListOutput
}

func (*AlertmanagerList) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertmanagerList)(nil)).Elem()
}

func (i *AlertmanagerList) ToAlertmanagerListOutput() AlertmanagerListOutput {
	return i.ToAlertmanagerListOutputWithContext(context.Background())
}

func (i *AlertmanagerList) ToAlertmanagerListOutputWithContext(ctx context.Context) AlertmanagerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertmanagerListOutput)
}

// AlertmanagerListArrayInput is an input type that accepts AlertmanagerListArray and AlertmanagerListArrayOutput values.
// You can construct a concrete instance of `AlertmanagerListArrayInput` via:
//
//	AlertmanagerListArray{ AlertmanagerListArgs{...} }
type AlertmanagerListArrayInput interface {
	pulumi.Input

	ToAlertmanagerListArrayOutput() AlertmanagerListArrayOutput
	ToAlertmanagerListArrayOutputWithContext(context.Context) AlertmanagerListArrayOutput
}

type AlertmanagerListArray []AlertmanagerListInput

func (AlertmanagerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertmanagerList)(nil)).Elem()
}

func (i AlertmanagerListArray) ToAlertmanagerListArrayOutput() AlertmanagerListArrayOutput {
	return i.ToAlertmanagerListArrayOutputWithContext(context.Background())
}

func (i AlertmanagerListArray) ToAlertmanagerListArrayOutputWithContext(ctx context.Context) AlertmanagerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertmanagerListArrayOutput)
}

// AlertmanagerListMapInput is an input type that accepts AlertmanagerListMap and AlertmanagerListMapOutput values.
// You can construct a concrete instance of `AlertmanagerListMapInput` via:
//
//	AlertmanagerListMap{ "key": AlertmanagerListArgs{...} }
type AlertmanagerListMapInput interface {
	pulumi.Input

	ToAlertmanagerListMapOutput() AlertmanagerListMapOutput
	ToAlertmanagerListMapOutputWithContext(context.Context) AlertmanagerListMapOutput
}

type AlertmanagerListMap map[string]AlertmanagerListInput

func (AlertmanagerListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertmanagerList)(nil)).Elem()
}

func (i AlertmanagerListMap) ToAlertmanagerListMapOutput() AlertmanagerListMapOutput {
	return i.ToAlertmanagerListMapOutputWithContext(context.Background())
}

func (i AlertmanagerListMap) ToAlertmanagerListMapOutputWithContext(ctx context.Context) AlertmanagerListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertmanagerListMapOutput)
}

type AlertmanagerListOutput struct{ *pulumi.OutputState }

func (AlertmanagerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertmanagerList)(nil)).Elem()
}

func (o AlertmanagerListOutput) ToAlertmanagerListOutput() AlertmanagerListOutput {
	return o
}

func (o AlertmanagerListOutput) ToAlertmanagerListOutputWithContext(ctx context.Context) AlertmanagerListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AlertmanagerListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertmanagerList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of alertmanagers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o AlertmanagerListOutput) Items() AlertmanagerTypeArrayOutput {
	return o.ApplyT(func(v *AlertmanagerList) AlertmanagerTypeArrayOutput { return v.Items }).(AlertmanagerTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertmanagerListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertmanagerList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertmanagerListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *AlertmanagerList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type AlertmanagerListArrayOutput struct{ *pulumi.OutputState }

func (AlertmanagerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertmanagerList)(nil)).Elem()
}

func (o AlertmanagerListArrayOutput) ToAlertmanagerListArrayOutput() AlertmanagerListArrayOutput {
	return o
}

func (o AlertmanagerListArrayOutput) ToAlertmanagerListArrayOutputWithContext(ctx context.Context) AlertmanagerListArrayOutput {
	return o
}

func (o AlertmanagerListArrayOutput) Index(i pulumi.IntInput) AlertmanagerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertmanagerList {
		return vs[0].([]*AlertmanagerList)[vs[1].(int)]
	}).(AlertmanagerListOutput)
}

type AlertmanagerListMapOutput struct{ *pulumi.OutputState }

func (AlertmanagerListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertmanagerList)(nil)).Elem()
}

func (o AlertmanagerListMapOutput) ToAlertmanagerListMapOutput() AlertmanagerListMapOutput {
	return o
}

func (o AlertmanagerListMapOutput) ToAlertmanagerListMapOutputWithContext(ctx context.Context) AlertmanagerListMapOutput {
	return o
}

func (o AlertmanagerListMapOutput) MapIndex(k pulumi.StringInput) AlertmanagerListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertmanagerList {
		return vs[0].(map[string]*AlertmanagerList)[vs[1].(string)]
	}).(AlertmanagerListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertmanagerListInput)(nil)).Elem(), &AlertmanagerList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertmanagerListArrayInput)(nil)).Elem(), AlertmanagerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertmanagerListMapInput)(nil)).Elem(), AlertmanagerListMap{})
	pulumi.RegisterOutputType(AlertmanagerListOutput{})
	pulumi.RegisterOutputType(AlertmanagerListArrayOutput{})
	pulumi.RegisterOutputType(AlertmanagerListMapOutput{})
}
