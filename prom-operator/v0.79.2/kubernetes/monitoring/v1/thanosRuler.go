// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `ThanosRuler` custom resource definition (CRD) defines a desired [Thanos Ruler](https://github.com/thanos-io/thanos/blob/main/docs/components/rule.md) setup to run in a Kubernetes cluster.
//
// A `ThanosRuler` instance requires at least one compatible Prometheus API endpoint (either Thanos Querier or Prometheus services).
//
// The resource defines via label and namespace selectors which `PrometheusRule` objects should be associated to the deployed Thanos Ruler instances.
type ThanosRuler struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput    `pulumi:"metadata"`
	Spec     ThanosRulerSpecOutput      `pulumi:"spec"`
	Status   ThanosRulerStatusPtrOutput `pulumi:"status"`
}

// NewThanosRuler registers a new resource with the given unique name, arguments, and options.
func NewThanosRuler(ctx *pulumi.Context,
	name string, args *ThanosRulerArgs, opts ...pulumi.ResourceOption) (*ThanosRuler, error) {
	if args == nil {
		args = &ThanosRulerArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1")
	args.Kind = pulumi.StringPtr("ThanosRuler")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ThanosRuler
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1:ThanosRuler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThanosRuler gets an existing ThanosRuler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThanosRuler(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThanosRulerState, opts ...pulumi.ResourceOption) (*ThanosRuler, error) {
	var resource ThanosRuler
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1:ThanosRuler", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThanosRuler resources.
type thanosRulerState struct {
}

type ThanosRulerState struct {
}

func (ThanosRulerState) ElementType() reflect.Type {
	return reflect.TypeOf((*thanosRulerState)(nil)).Elem()
}

type thanosRulerArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *ThanosRulerSpec   `pulumi:"spec"`
}

// The set of arguments for constructing a ThanosRuler resource.
type ThanosRulerArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ThanosRulerSpecPtrInput
}

func (ThanosRulerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thanosRulerArgs)(nil)).Elem()
}

type ThanosRulerInput interface {
	pulumi.Input

	ToThanosRulerOutput() ThanosRulerOutput
	ToThanosRulerOutputWithContext(ctx context.Context) ThanosRulerOutput
}

func (*ThanosRuler) ElementType() reflect.Type {
	return reflect.TypeOf((**ThanosRuler)(nil)).Elem()
}

func (i *ThanosRuler) ToThanosRulerOutput() ThanosRulerOutput {
	return i.ToThanosRulerOutputWithContext(context.Background())
}

func (i *ThanosRuler) ToThanosRulerOutputWithContext(ctx context.Context) ThanosRulerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThanosRulerOutput)
}

// ThanosRulerArrayInput is an input type that accepts ThanosRulerArray and ThanosRulerArrayOutput values.
// You can construct a concrete instance of `ThanosRulerArrayInput` via:
//
//	ThanosRulerArray{ ThanosRulerArgs{...} }
type ThanosRulerArrayInput interface {
	pulumi.Input

	ToThanosRulerArrayOutput() ThanosRulerArrayOutput
	ToThanosRulerArrayOutputWithContext(context.Context) ThanosRulerArrayOutput
}

type ThanosRulerArray []ThanosRulerInput

func (ThanosRulerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThanosRuler)(nil)).Elem()
}

func (i ThanosRulerArray) ToThanosRulerArrayOutput() ThanosRulerArrayOutput {
	return i.ToThanosRulerArrayOutputWithContext(context.Background())
}

func (i ThanosRulerArray) ToThanosRulerArrayOutputWithContext(ctx context.Context) ThanosRulerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThanosRulerArrayOutput)
}

// ThanosRulerMapInput is an input type that accepts ThanosRulerMap and ThanosRulerMapOutput values.
// You can construct a concrete instance of `ThanosRulerMapInput` via:
//
//	ThanosRulerMap{ "key": ThanosRulerArgs{...} }
type ThanosRulerMapInput interface {
	pulumi.Input

	ToThanosRulerMapOutput() ThanosRulerMapOutput
	ToThanosRulerMapOutputWithContext(context.Context) ThanosRulerMapOutput
}

type ThanosRulerMap map[string]ThanosRulerInput

func (ThanosRulerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThanosRuler)(nil)).Elem()
}

func (i ThanosRulerMap) ToThanosRulerMapOutput() ThanosRulerMapOutput {
	return i.ToThanosRulerMapOutputWithContext(context.Background())
}

func (i ThanosRulerMap) ToThanosRulerMapOutputWithContext(ctx context.Context) ThanosRulerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThanosRulerMapOutput)
}

type ThanosRulerOutput struct{ *pulumi.OutputState }

func (ThanosRulerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThanosRuler)(nil)).Elem()
}

func (o ThanosRulerOutput) ToThanosRulerOutput() ThanosRulerOutput {
	return o
}

func (o ThanosRulerOutput) ToThanosRulerOutputWithContext(ctx context.Context) ThanosRulerOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ThanosRulerOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ThanosRuler) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ThanosRulerOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ThanosRuler) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ThanosRulerOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ThanosRuler) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ThanosRulerOutput) Spec() ThanosRulerSpecOutput {
	return o.ApplyT(func(v *ThanosRuler) ThanosRulerSpecOutput { return v.Spec }).(ThanosRulerSpecOutput)
}

func (o ThanosRulerOutput) Status() ThanosRulerStatusPtrOutput {
	return o.ApplyT(func(v *ThanosRuler) ThanosRulerStatusPtrOutput { return v.Status }).(ThanosRulerStatusPtrOutput)
}

type ThanosRulerArrayOutput struct{ *pulumi.OutputState }

func (ThanosRulerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThanosRuler)(nil)).Elem()
}

func (o ThanosRulerArrayOutput) ToThanosRulerArrayOutput() ThanosRulerArrayOutput {
	return o
}

func (o ThanosRulerArrayOutput) ToThanosRulerArrayOutputWithContext(ctx context.Context) ThanosRulerArrayOutput {
	return o
}

func (o ThanosRulerArrayOutput) Index(i pulumi.IntInput) ThanosRulerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ThanosRuler {
		return vs[0].([]*ThanosRuler)[vs[1].(int)]
	}).(ThanosRulerOutput)
}

type ThanosRulerMapOutput struct{ *pulumi.OutputState }

func (ThanosRulerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThanosRuler)(nil)).Elem()
}

func (o ThanosRulerMapOutput) ToThanosRulerMapOutput() ThanosRulerMapOutput {
	return o
}

func (o ThanosRulerMapOutput) ToThanosRulerMapOutputWithContext(ctx context.Context) ThanosRulerMapOutput {
	return o
}

func (o ThanosRulerMapOutput) MapIndex(k pulumi.StringInput) ThanosRulerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ThanosRuler {
		return vs[0].(map[string]*ThanosRuler)[vs[1].(string)]
	}).(ThanosRulerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThanosRulerInput)(nil)).Elem(), &ThanosRuler{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThanosRulerArrayInput)(nil)).Elem(), ThanosRulerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThanosRulerMapInput)(nil)).Elem(), ThanosRulerMap{})
	pulumi.RegisterOutputType(ThanosRulerOutput{})
	pulumi.RegisterOutputType(ThanosRulerArrayOutput{})
	pulumi.RegisterOutputType(ThanosRulerMapOutput{})
}
