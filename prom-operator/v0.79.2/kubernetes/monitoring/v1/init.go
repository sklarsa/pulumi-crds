// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "kubernetes:monitoring.coreos.com/v1:Alertmanager":
		r = &Alertmanager{}
	case "kubernetes:monitoring.coreos.com/v1:AlertmanagerList":
		r = &AlertmanagerList{}
	case "kubernetes:monitoring.coreos.com/v1:AlertmanagerPatch":
		r = &AlertmanagerPatch{}
	case "kubernetes:monitoring.coreos.com/v1:PodMonitor":
		r = &PodMonitor{}
	case "kubernetes:monitoring.coreos.com/v1:PodMonitorList":
		r = &PodMonitorList{}
	case "kubernetes:monitoring.coreos.com/v1:PodMonitorPatch":
		r = &PodMonitorPatch{}
	case "kubernetes:monitoring.coreos.com/v1:Probe":
		r = &Probe{}
	case "kubernetes:monitoring.coreos.com/v1:ProbeList":
		r = &ProbeList{}
	case "kubernetes:monitoring.coreos.com/v1:ProbePatch":
		r = &ProbePatch{}
	case "kubernetes:monitoring.coreos.com/v1:Prometheus":
		r = &Prometheus{}
	case "kubernetes:monitoring.coreos.com/v1:PrometheusList":
		r = &PrometheusList{}
	case "kubernetes:monitoring.coreos.com/v1:PrometheusPatch":
		r = &PrometheusPatch{}
	case "kubernetes:monitoring.coreos.com/v1:PrometheusRule":
		r = &PrometheusRule{}
	case "kubernetes:monitoring.coreos.com/v1:PrometheusRuleList":
		r = &PrometheusRuleList{}
	case "kubernetes:monitoring.coreos.com/v1:PrometheusRulePatch":
		r = &PrometheusRulePatch{}
	case "kubernetes:monitoring.coreos.com/v1:ServiceMonitor":
		r = &ServiceMonitor{}
	case "kubernetes:monitoring.coreos.com/v1:ServiceMonitorList":
		r = &ServiceMonitorList{}
	case "kubernetes:monitoring.coreos.com/v1:ServiceMonitorPatch":
		r = &ServiceMonitorPatch{}
	case "kubernetes:monitoring.coreos.com/v1:ThanosRuler":
		r = &ThanosRuler{}
	case "kubernetes:monitoring.coreos.com/v1:ThanosRulerList":
		r = &ThanosRulerList{}
	case "kubernetes:monitoring.coreos.com/v1:ThanosRulerPatch":
		r = &ThanosRulerPatch{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := utilities.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"crds",
		"monitoring.coreos.com/v1",
		&module{version},
	)
}
