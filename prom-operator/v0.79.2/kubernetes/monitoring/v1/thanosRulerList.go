// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ThanosRulerList is a list of ThanosRuler
type ThanosRulerList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of thanosrulers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ThanosRulerTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewThanosRulerList registers a new resource with the given unique name, arguments, and options.
func NewThanosRulerList(ctx *pulumi.Context,
	name string, args *ThanosRulerListArgs, opts ...pulumi.ResourceOption) (*ThanosRulerList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1")
	args.Kind = pulumi.StringPtr("ThanosRulerList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ThanosRulerList
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1:ThanosRulerList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThanosRulerList gets an existing ThanosRulerList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThanosRulerList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThanosRulerListState, opts ...pulumi.ResourceOption) (*ThanosRulerList, error) {
	var resource ThanosRulerList
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1:ThanosRulerList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThanosRulerList resources.
type thanosRulerListState struct {
}

type ThanosRulerListState struct {
}

func (ThanosRulerListState) ElementType() reflect.Type {
	return reflect.TypeOf((*thanosRulerListState)(nil)).Elem()
}

type thanosRulerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of thanosrulers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ThanosRulerType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ThanosRulerList resource.
type ThanosRulerListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of thanosrulers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ThanosRulerTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (ThanosRulerListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thanosRulerListArgs)(nil)).Elem()
}

type ThanosRulerListInput interface {
	pulumi.Input

	ToThanosRulerListOutput() ThanosRulerListOutput
	ToThanosRulerListOutputWithContext(ctx context.Context) ThanosRulerListOutput
}

func (*ThanosRulerList) ElementType() reflect.Type {
	return reflect.TypeOf((**ThanosRulerList)(nil)).Elem()
}

func (i *ThanosRulerList) ToThanosRulerListOutput() ThanosRulerListOutput {
	return i.ToThanosRulerListOutputWithContext(context.Background())
}

func (i *ThanosRulerList) ToThanosRulerListOutputWithContext(ctx context.Context) ThanosRulerListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThanosRulerListOutput)
}

// ThanosRulerListArrayInput is an input type that accepts ThanosRulerListArray and ThanosRulerListArrayOutput values.
// You can construct a concrete instance of `ThanosRulerListArrayInput` via:
//
//	ThanosRulerListArray{ ThanosRulerListArgs{...} }
type ThanosRulerListArrayInput interface {
	pulumi.Input

	ToThanosRulerListArrayOutput() ThanosRulerListArrayOutput
	ToThanosRulerListArrayOutputWithContext(context.Context) ThanosRulerListArrayOutput
}

type ThanosRulerListArray []ThanosRulerListInput

func (ThanosRulerListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThanosRulerList)(nil)).Elem()
}

func (i ThanosRulerListArray) ToThanosRulerListArrayOutput() ThanosRulerListArrayOutput {
	return i.ToThanosRulerListArrayOutputWithContext(context.Background())
}

func (i ThanosRulerListArray) ToThanosRulerListArrayOutputWithContext(ctx context.Context) ThanosRulerListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThanosRulerListArrayOutput)
}

// ThanosRulerListMapInput is an input type that accepts ThanosRulerListMap and ThanosRulerListMapOutput values.
// You can construct a concrete instance of `ThanosRulerListMapInput` via:
//
//	ThanosRulerListMap{ "key": ThanosRulerListArgs{...} }
type ThanosRulerListMapInput interface {
	pulumi.Input

	ToThanosRulerListMapOutput() ThanosRulerListMapOutput
	ToThanosRulerListMapOutputWithContext(context.Context) ThanosRulerListMapOutput
}

type ThanosRulerListMap map[string]ThanosRulerListInput

func (ThanosRulerListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThanosRulerList)(nil)).Elem()
}

func (i ThanosRulerListMap) ToThanosRulerListMapOutput() ThanosRulerListMapOutput {
	return i.ToThanosRulerListMapOutputWithContext(context.Background())
}

func (i ThanosRulerListMap) ToThanosRulerListMapOutputWithContext(ctx context.Context) ThanosRulerListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThanosRulerListMapOutput)
}

type ThanosRulerListOutput struct{ *pulumi.OutputState }

func (ThanosRulerListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThanosRulerList)(nil)).Elem()
}

func (o ThanosRulerListOutput) ToThanosRulerListOutput() ThanosRulerListOutput {
	return o
}

func (o ThanosRulerListOutput) ToThanosRulerListOutputWithContext(ctx context.Context) ThanosRulerListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ThanosRulerListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ThanosRulerList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of thanosrulers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ThanosRulerListOutput) Items() ThanosRulerTypeArrayOutput {
	return o.ApplyT(func(v *ThanosRulerList) ThanosRulerTypeArrayOutput { return v.Items }).(ThanosRulerTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ThanosRulerListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ThanosRulerList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ThanosRulerListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *ThanosRulerList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type ThanosRulerListArrayOutput struct{ *pulumi.OutputState }

func (ThanosRulerListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThanosRulerList)(nil)).Elem()
}

func (o ThanosRulerListArrayOutput) ToThanosRulerListArrayOutput() ThanosRulerListArrayOutput {
	return o
}

func (o ThanosRulerListArrayOutput) ToThanosRulerListArrayOutputWithContext(ctx context.Context) ThanosRulerListArrayOutput {
	return o
}

func (o ThanosRulerListArrayOutput) Index(i pulumi.IntInput) ThanosRulerListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ThanosRulerList {
		return vs[0].([]*ThanosRulerList)[vs[1].(int)]
	}).(ThanosRulerListOutput)
}

type ThanosRulerListMapOutput struct{ *pulumi.OutputState }

func (ThanosRulerListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThanosRulerList)(nil)).Elem()
}

func (o ThanosRulerListMapOutput) ToThanosRulerListMapOutput() ThanosRulerListMapOutput {
	return o
}

func (o ThanosRulerListMapOutput) ToThanosRulerListMapOutputWithContext(ctx context.Context) ThanosRulerListMapOutput {
	return o
}

func (o ThanosRulerListMapOutput) MapIndex(k pulumi.StringInput) ThanosRulerListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ThanosRulerList {
		return vs[0].(map[string]*ThanosRulerList)[vs[1].(string)]
	}).(ThanosRulerListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThanosRulerListInput)(nil)).Elem(), &ThanosRulerList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThanosRulerListArrayInput)(nil)).Elem(), ThanosRulerListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThanosRulerListMapInput)(nil)).Elem(), ThanosRulerListMap{})
	pulumi.RegisterOutputType(ThanosRulerListOutput{})
	pulumi.RegisterOutputType(ThanosRulerListArrayOutput{})
	pulumi.RegisterOutputType(ThanosRulerListMapOutput{})
}
