// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// The `PrometheusAgent` custom resource definition (CRD) defines a desired [Prometheus Agent](https://prometheus.io/blog/2021/11/16/agent/) setup to run in a Kubernetes cluster.
//
// The CRD is very similar to the `Prometheus` CRD except for features which aren't available in agent mode like rule evaluation, persistent storage and Thanos sidecar.
type PrometheusAgentPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput     `pulumi:"metadata"`
	Spec     PrometheusAgentSpecPatchPtrOutput   `pulumi:"spec"`
	Status   PrometheusAgentStatusPatchPtrOutput `pulumi:"status"`
}

// NewPrometheusAgentPatch registers a new resource with the given unique name, arguments, and options.
func NewPrometheusAgentPatch(ctx *pulumi.Context,
	name string, args *PrometheusAgentPatchArgs, opts ...pulumi.ResourceOption) (*PrometheusAgentPatch, error) {
	if args == nil {
		args = &PrometheusAgentPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1alpha1")
	args.Kind = pulumi.StringPtr("PrometheusAgent")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PrometheusAgentPatch
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1alpha1:PrometheusAgentPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrometheusAgentPatch gets an existing PrometheusAgentPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrometheusAgentPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrometheusAgentPatchState, opts ...pulumi.ResourceOption) (*PrometheusAgentPatch, error) {
	var resource PrometheusAgentPatch
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1alpha1:PrometheusAgentPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrometheusAgentPatch resources.
type prometheusAgentPatchState struct {
}

type PrometheusAgentPatchState struct {
}

func (PrometheusAgentPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*prometheusAgentPatchState)(nil)).Elem()
}

type prometheusAgentPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch   `pulumi:"metadata"`
	Spec     *PrometheusAgentSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a PrometheusAgentPatch resource.
type PrometheusAgentPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     PrometheusAgentSpecPatchPtrInput
}

func (PrometheusAgentPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*prometheusAgentPatchArgs)(nil)).Elem()
}

type PrometheusAgentPatchInput interface {
	pulumi.Input

	ToPrometheusAgentPatchOutput() PrometheusAgentPatchOutput
	ToPrometheusAgentPatchOutputWithContext(ctx context.Context) PrometheusAgentPatchOutput
}

func (*PrometheusAgentPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PrometheusAgentPatch)(nil)).Elem()
}

func (i *PrometheusAgentPatch) ToPrometheusAgentPatchOutput() PrometheusAgentPatchOutput {
	return i.ToPrometheusAgentPatchOutputWithContext(context.Background())
}

func (i *PrometheusAgentPatch) ToPrometheusAgentPatchOutputWithContext(ctx context.Context) PrometheusAgentPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusAgentPatchOutput)
}

// PrometheusAgentPatchArrayInput is an input type that accepts PrometheusAgentPatchArray and PrometheusAgentPatchArrayOutput values.
// You can construct a concrete instance of `PrometheusAgentPatchArrayInput` via:
//
//	PrometheusAgentPatchArray{ PrometheusAgentPatchArgs{...} }
type PrometheusAgentPatchArrayInput interface {
	pulumi.Input

	ToPrometheusAgentPatchArrayOutput() PrometheusAgentPatchArrayOutput
	ToPrometheusAgentPatchArrayOutputWithContext(context.Context) PrometheusAgentPatchArrayOutput
}

type PrometheusAgentPatchArray []PrometheusAgentPatchInput

func (PrometheusAgentPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrometheusAgentPatch)(nil)).Elem()
}

func (i PrometheusAgentPatchArray) ToPrometheusAgentPatchArrayOutput() PrometheusAgentPatchArrayOutput {
	return i.ToPrometheusAgentPatchArrayOutputWithContext(context.Background())
}

func (i PrometheusAgentPatchArray) ToPrometheusAgentPatchArrayOutputWithContext(ctx context.Context) PrometheusAgentPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusAgentPatchArrayOutput)
}

// PrometheusAgentPatchMapInput is an input type that accepts PrometheusAgentPatchMap and PrometheusAgentPatchMapOutput values.
// You can construct a concrete instance of `PrometheusAgentPatchMapInput` via:
//
//	PrometheusAgentPatchMap{ "key": PrometheusAgentPatchArgs{...} }
type PrometheusAgentPatchMapInput interface {
	pulumi.Input

	ToPrometheusAgentPatchMapOutput() PrometheusAgentPatchMapOutput
	ToPrometheusAgentPatchMapOutputWithContext(context.Context) PrometheusAgentPatchMapOutput
}

type PrometheusAgentPatchMap map[string]PrometheusAgentPatchInput

func (PrometheusAgentPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrometheusAgentPatch)(nil)).Elem()
}

func (i PrometheusAgentPatchMap) ToPrometheusAgentPatchMapOutput() PrometheusAgentPatchMapOutput {
	return i.ToPrometheusAgentPatchMapOutputWithContext(context.Background())
}

func (i PrometheusAgentPatchMap) ToPrometheusAgentPatchMapOutputWithContext(ctx context.Context) PrometheusAgentPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusAgentPatchMapOutput)
}

type PrometheusAgentPatchOutput struct{ *pulumi.OutputState }

func (PrometheusAgentPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrometheusAgentPatch)(nil)).Elem()
}

func (o PrometheusAgentPatchOutput) ToPrometheusAgentPatchOutput() PrometheusAgentPatchOutput {
	return o
}

func (o PrometheusAgentPatchOutput) ToPrometheusAgentPatchOutputWithContext(ctx context.Context) PrometheusAgentPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PrometheusAgentPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusAgentPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PrometheusAgentPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrometheusAgentPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PrometheusAgentPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PrometheusAgentPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o PrometheusAgentPatchOutput) Spec() PrometheusAgentSpecPatchPtrOutput {
	return o.ApplyT(func(v *PrometheusAgentPatch) PrometheusAgentSpecPatchPtrOutput { return v.Spec }).(PrometheusAgentSpecPatchPtrOutput)
}

func (o PrometheusAgentPatchOutput) Status() PrometheusAgentStatusPatchPtrOutput {
	return o.ApplyT(func(v *PrometheusAgentPatch) PrometheusAgentStatusPatchPtrOutput { return v.Status }).(PrometheusAgentStatusPatchPtrOutput)
}

type PrometheusAgentPatchArrayOutput struct{ *pulumi.OutputState }

func (PrometheusAgentPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrometheusAgentPatch)(nil)).Elem()
}

func (o PrometheusAgentPatchArrayOutput) ToPrometheusAgentPatchArrayOutput() PrometheusAgentPatchArrayOutput {
	return o
}

func (o PrometheusAgentPatchArrayOutput) ToPrometheusAgentPatchArrayOutputWithContext(ctx context.Context) PrometheusAgentPatchArrayOutput {
	return o
}

func (o PrometheusAgentPatchArrayOutput) Index(i pulumi.IntInput) PrometheusAgentPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrometheusAgentPatch {
		return vs[0].([]*PrometheusAgentPatch)[vs[1].(int)]
	}).(PrometheusAgentPatchOutput)
}

type PrometheusAgentPatchMapOutput struct{ *pulumi.OutputState }

func (PrometheusAgentPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrometheusAgentPatch)(nil)).Elem()
}

func (o PrometheusAgentPatchMapOutput) ToPrometheusAgentPatchMapOutput() PrometheusAgentPatchMapOutput {
	return o
}

func (o PrometheusAgentPatchMapOutput) ToPrometheusAgentPatchMapOutputWithContext(ctx context.Context) PrometheusAgentPatchMapOutput {
	return o
}

func (o PrometheusAgentPatchMapOutput) MapIndex(k pulumi.StringInput) PrometheusAgentPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrometheusAgentPatch {
		return vs[0].(map[string]*PrometheusAgentPatch)[vs[1].(string)]
	}).(PrometheusAgentPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrometheusAgentPatchInput)(nil)).Elem(), &PrometheusAgentPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrometheusAgentPatchArrayInput)(nil)).Elem(), PrometheusAgentPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrometheusAgentPatchMapInput)(nil)).Elem(), PrometheusAgentPatchMap{})
	pulumi.RegisterOutputType(PrometheusAgentPatchOutput{})
	pulumi.RegisterOutputType(PrometheusAgentPatchArrayOutput{})
	pulumi.RegisterOutputType(PrometheusAgentPatchMapOutput{})
}
