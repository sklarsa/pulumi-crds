// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AlertmanagerConfig configures the Prometheus Alertmanager,
// specifying how alerts should be grouped, inhibited and notified to external systems.
type AlertmanagerConfig struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput      `pulumi:"metadata"`
	Spec     AlertmanagerConfigSpecOutput `pulumi:"spec"`
}

// NewAlertmanagerConfig registers a new resource with the given unique name, arguments, and options.
func NewAlertmanagerConfig(ctx *pulumi.Context,
	name string, args *AlertmanagerConfigArgs, opts ...pulumi.ResourceOption) (*AlertmanagerConfig, error) {
	if args == nil {
		args = &AlertmanagerConfigArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("monitoring.coreos.com/v1alpha1")
	args.Kind = pulumi.StringPtr("AlertmanagerConfig")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource AlertmanagerConfig
	err := ctx.RegisterResource("kubernetes:monitoring.coreos.com/v1alpha1:AlertmanagerConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertmanagerConfig gets an existing AlertmanagerConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertmanagerConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertmanagerConfigState, opts ...pulumi.ResourceOption) (*AlertmanagerConfig, error) {
	var resource AlertmanagerConfig
	err := ctx.ReadResource("kubernetes:monitoring.coreos.com/v1alpha1:AlertmanagerConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertmanagerConfig resources.
type alertmanagerConfigState struct {
}

type AlertmanagerConfigState struct {
}

func (AlertmanagerConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertmanagerConfigState)(nil)).Elem()
}

type alertmanagerConfigArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta      `pulumi:"metadata"`
	Spec     *AlertmanagerConfigSpec `pulumi:"spec"`
}

// The set of arguments for constructing a AlertmanagerConfig resource.
type AlertmanagerConfigArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     AlertmanagerConfigSpecPtrInput
}

func (AlertmanagerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertmanagerConfigArgs)(nil)).Elem()
}

type AlertmanagerConfigInput interface {
	pulumi.Input

	ToAlertmanagerConfigOutput() AlertmanagerConfigOutput
	ToAlertmanagerConfigOutputWithContext(ctx context.Context) AlertmanagerConfigOutput
}

func (*AlertmanagerConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertmanagerConfig)(nil)).Elem()
}

func (i *AlertmanagerConfig) ToAlertmanagerConfigOutput() AlertmanagerConfigOutput {
	return i.ToAlertmanagerConfigOutputWithContext(context.Background())
}

func (i *AlertmanagerConfig) ToAlertmanagerConfigOutputWithContext(ctx context.Context) AlertmanagerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertmanagerConfigOutput)
}

// AlertmanagerConfigArrayInput is an input type that accepts AlertmanagerConfigArray and AlertmanagerConfigArrayOutput values.
// You can construct a concrete instance of `AlertmanagerConfigArrayInput` via:
//
//	AlertmanagerConfigArray{ AlertmanagerConfigArgs{...} }
type AlertmanagerConfigArrayInput interface {
	pulumi.Input

	ToAlertmanagerConfigArrayOutput() AlertmanagerConfigArrayOutput
	ToAlertmanagerConfigArrayOutputWithContext(context.Context) AlertmanagerConfigArrayOutput
}

type AlertmanagerConfigArray []AlertmanagerConfigInput

func (AlertmanagerConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertmanagerConfig)(nil)).Elem()
}

func (i AlertmanagerConfigArray) ToAlertmanagerConfigArrayOutput() AlertmanagerConfigArrayOutput {
	return i.ToAlertmanagerConfigArrayOutputWithContext(context.Background())
}

func (i AlertmanagerConfigArray) ToAlertmanagerConfigArrayOutputWithContext(ctx context.Context) AlertmanagerConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertmanagerConfigArrayOutput)
}

// AlertmanagerConfigMapInput is an input type that accepts AlertmanagerConfigMap and AlertmanagerConfigMapOutput values.
// You can construct a concrete instance of `AlertmanagerConfigMapInput` via:
//
//	AlertmanagerConfigMap{ "key": AlertmanagerConfigArgs{...} }
type AlertmanagerConfigMapInput interface {
	pulumi.Input

	ToAlertmanagerConfigMapOutput() AlertmanagerConfigMapOutput
	ToAlertmanagerConfigMapOutputWithContext(context.Context) AlertmanagerConfigMapOutput
}

type AlertmanagerConfigMap map[string]AlertmanagerConfigInput

func (AlertmanagerConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertmanagerConfig)(nil)).Elem()
}

func (i AlertmanagerConfigMap) ToAlertmanagerConfigMapOutput() AlertmanagerConfigMapOutput {
	return i.ToAlertmanagerConfigMapOutputWithContext(context.Background())
}

func (i AlertmanagerConfigMap) ToAlertmanagerConfigMapOutputWithContext(ctx context.Context) AlertmanagerConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertmanagerConfigMapOutput)
}

type AlertmanagerConfigOutput struct{ *pulumi.OutputState }

func (AlertmanagerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertmanagerConfig)(nil)).Elem()
}

func (o AlertmanagerConfigOutput) ToAlertmanagerConfigOutput() AlertmanagerConfigOutput {
	return o
}

func (o AlertmanagerConfigOutput) ToAlertmanagerConfigOutputWithContext(ctx context.Context) AlertmanagerConfigOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AlertmanagerConfigOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertmanagerConfig) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AlertmanagerConfigOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertmanagerConfig) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AlertmanagerConfigOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *AlertmanagerConfig) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o AlertmanagerConfigOutput) Spec() AlertmanagerConfigSpecOutput {
	return o.ApplyT(func(v *AlertmanagerConfig) AlertmanagerConfigSpecOutput { return v.Spec }).(AlertmanagerConfigSpecOutput)
}

type AlertmanagerConfigArrayOutput struct{ *pulumi.OutputState }

func (AlertmanagerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertmanagerConfig)(nil)).Elem()
}

func (o AlertmanagerConfigArrayOutput) ToAlertmanagerConfigArrayOutput() AlertmanagerConfigArrayOutput {
	return o
}

func (o AlertmanagerConfigArrayOutput) ToAlertmanagerConfigArrayOutputWithContext(ctx context.Context) AlertmanagerConfigArrayOutput {
	return o
}

func (o AlertmanagerConfigArrayOutput) Index(i pulumi.IntInput) AlertmanagerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertmanagerConfig {
		return vs[0].([]*AlertmanagerConfig)[vs[1].(int)]
	}).(AlertmanagerConfigOutput)
}

type AlertmanagerConfigMapOutput struct{ *pulumi.OutputState }

func (AlertmanagerConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertmanagerConfig)(nil)).Elem()
}

func (o AlertmanagerConfigMapOutput) ToAlertmanagerConfigMapOutput() AlertmanagerConfigMapOutput {
	return o
}

func (o AlertmanagerConfigMapOutput) ToAlertmanagerConfigMapOutputWithContext(ctx context.Context) AlertmanagerConfigMapOutput {
	return o
}

func (o AlertmanagerConfigMapOutput) MapIndex(k pulumi.StringInput) AlertmanagerConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertmanagerConfig {
		return vs[0].(map[string]*AlertmanagerConfig)[vs[1].(string)]
	}).(AlertmanagerConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertmanagerConfigInput)(nil)).Elem(), &AlertmanagerConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertmanagerConfigArrayInput)(nil)).Elem(), AlertmanagerConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertmanagerConfigMapInput)(nil)).Elem(), AlertmanagerConfigMap{})
	pulumi.RegisterOutputType(AlertmanagerConfigOutput{})
	pulumi.RegisterOutputType(AlertmanagerConfigArrayOutput{})
	pulumi.RegisterOutputType(AlertmanagerConfigMapOutput{})
}
